"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶",">>> i=torch.tensor([[0,1,1],
... [2,0,2]])
>>> v=torch.tensor([3,4,5],dtype=torch.float32)
>>> torch.sparse_coo_tensor(i,v,[2,4])
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       size=(2, 4), nnz=3, layout=torch.sparse_coo)>>> torch.sparse_coo_tensor(i,v)# Shape inference
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       size=(2, 3), nnz=3, layout=torch.sparse_coo)>>> torch.sparse_coo_tensor(i,v,[2,4],
... dtype=torch.float64,
... device=torch.device('cuda:0'))
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       device='cuda:0', size=(2, 4), nnz=3, dtype=torch.float64,
       layout=torch.sparse_coo)# Create an empty sparse tensor with the following invariants:
#   1. sparse_dim + dense_dim = len(SparseTensor.shape)
#   2. SparseTensor._indices().shape = (sparse_dim, nnz)
#   3. SparseTensor._values().shape = (nnz, SparseTensor.shape[sparse_dim:])
#
# For instance, to create an empty sparse tensor with nnz = 0, dense_dim = 0 and
# sparse_dim = 1 (hence indices is a 2D tensor of shape = (1, 0))
>>> S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])
tensor(indices=tensor([], size=(1, 0)),
       values=tensor([], size=(0,)),
       size=(1,), nnz=0, layout=torch.sparse_coo)# and to create an empty sparse tensor with nnz = 0, dense_dim = 1 and
# sparse_dim = 1
>>> S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])
tensor(indices=tensor([], size=(1, 0)),
       values=tensor([], size=(0, 2)),
       size=(1, 2), nnz=0, layout=torch.sparse_coo)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. is_tensor ( obj ) [source] ¶",">>> x=torch.tensor([1,2,3])
>>> torch.is_tensor(x)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. is_nonzero ( input ) ¶",">>> torch.is_nonzero(torch.tensor([0.]))
False
>>> torch.is_nonzero(torch.tensor([1.5]))
True
>>> torch.is_nonzero(torch.tensor([False]))
False
>>> torch.is_nonzero(torch.tensor([3]))
True
>>> torch.is_nonzero(torch.tensor([1,3,5]))
Traceback (most recent call last):
...
RuntimeErrorbool value of Tensor with more than one value is ambiguous
>>> torch.is_nonzero(torch.tensor([]))
Traceback (most recent call last):
...
RuntimeErrorbool value of Tensor with no values is ambiguous
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶",">>> torch.get_default_dtype()# initial default for floating point is torch.float32
torch.float32
>>> torch.set_default_dtype(torch.float64)
>>> torch.get_default_dtype()# default is now changed to torch.float64
torch.float64
>>> torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this
>>> torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor
torch.float32
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. set_default_tensor_type ( t ) [source] ¶",">>> torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32
torch.float32
>>> torch.set_default_tensor_type(torch.DoubleTensor)
>>> torch.tensor([1.2,3]).dtype# a new floating point tensor
torch.float64
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. numel ( input )   → ¶",">>> a=torch.randn(1,2,3,4,5)
>>> torch.numel(a)
120
>>> a=torch.zeros(4,4)
>>> torch.numel(a)
16
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶",">>> # Limit the precision of elements
>>> torch.set_printoptions(precision=2)
>>> torch.tensor([1.12345])
tensor([1.12])
>>> # Limit the number of elements shown
>>> torch.set_printoptions(threshold=5)
>>> torch.arange(10)
tensor([0, 1, 2, ..., 7, 8, 9])
>>> # Restore defaults
>>> torch.set_printoptions(profile='default')
>>> torch.tensor([1.12345])
tensor([1.1235])
>>> torch.arange(10)
tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. set_flush_denormal ( mode )   → ¶",">>> torch.set_flush_denormal(True)
True
>>> torch.tensor([1e-323],dtype=torch.float64)
tensor([ 0.], dtype=torch.float64)
>>> torch.set_flush_denormal(False)
True
>>> torch.tensor([1e-323],dtype=torch.float64)
tensor(9.88131e-324 *
       [ 1.0000], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. rand ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶",">>> torch.rand(4)
tensor([ 0.5204,  0.2503,  0.3525,  0.5673])
>>> torch.rand(2,3)
tensor([[ 0.8237,  0.5781,  0.6879],
        [ 0.3816,  0.7249,  0.0998]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. randn ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶",">>> torch.randn(4)
tensor([-2.1436,  0.9966,  2.3426, -0.6366])
>>> torch.randn(2,3)
tensor([[ 1.5954,  2.8929, -1.0923],
        [ 1.1719, -0.4709, -0.1996]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. randint ( low=0 ,  high ,  size ,  \* ,  generator=None ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶",">>> torch.randint(3,5,(3,))
tensor([4, 3, 4])>>> torch.randint(10,(2,2))
tensor([[0, 2],
        [5, 5]])>>> torch.randint(3,10,(2,2))
tensor([[4, 5],
        [6, 7]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. randperm ( n ,  * ,  generator ,  out ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶",">>> torch.randperm(4)
tensor([2, 1, 0, 3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. empty ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False ,  memory_format=torch.contiguous_format )   → ¶",">>> torch.empty((2,3),dtype=torch.int64)
tensor([[ 9.4064e+13,  2.8000e+01,  9.3493e+13],
        [ 7.5751e+18,  7.1428e+18,  7.5955e+18]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  pin_memory )   → ¶",">>> torch.tensor([[0.1,1.2],[2.2,3.1],[4.9,5.2]])
tensor([[ 0.1000,  1.2000],
        [ 2.2000,  3.1000],
        [ 4.9000,  5.2000]])>>> torch.tensor([0,1])# Type inference on data
tensor([ 0,  1])>>> torch.tensor([[0.11111,0.222222,0.3333333]],
... dtype=torch.float64,
... device=torch.device('cuda:0'))# creates a double tensor on a CUDA device
tensor([[ 0.1111,  0.2222,  0.3333]], dtype=torch.float64, device='cuda:0')>>> torch.tensor(3.14159)# Create a zero-dimensional (scalar) tensor
tensor(3.1416)>>> torch.tensor([])# Create an empty tensor (of size (0,))
tensor([])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶",">>> i=torch.tensor([[0,1,1],
... [2,0,2]])
>>> v=torch.tensor([3,4,5],dtype=torch.float32)
>>> torch.sparse_coo_tensor(i,v,[2,4])
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       size=(2, 4), nnz=3, layout=torch.sparse_coo)>>> torch.sparse_coo_tensor(i,v)# Shape inference
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       size=(2, 3), nnz=3, layout=torch.sparse_coo)>>> torch.sparse_coo_tensor(i,v,[2,4],
... dtype=torch.float64,
... device=torch.device('cuda:0'))
tensor(indices=tensor([[0, 1, 1],
                       [2, 0, 2]]),
       values=tensor([3., 4., 5.]),
       device='cuda:0', size=(2, 4), nnz=3, dtype=torch.float64,
       layout=torch.sparse_coo)# Create an empty sparse tensor with the following invariants:
#   1. sparse_dim + dense_dim = len(SparseTensor.shape)
#   2. SparseTensor._indices().shape = (sparse_dim, nnz)
#   3. SparseTensor._values().shape = (nnz, SparseTensor.shape[sparse_dim:])
#
# For instance, to create an empty sparse tensor with nnz = 0, dense_dim = 0 and
# sparse_dim = 1 (hence indices is a 2D tensor of shape = (1, 0))
>>> S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])
tensor(indices=tensor([], size=(1, 0)),
       values=tensor([], size=(0,)),
       size=(1,), nnz=0, layout=torch.sparse_coo)# and to create an empty sparse tensor with nnz = 0, dense_dim = 1 and
# sparse_dim = 1
>>> S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])
tensor(indices=tensor([], size=(1, 0)),
       values=tensor([], size=(0, 2)),
       size=(1, 2), nnz=0, layout=torch.sparse_coo)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶",">>> a=torch.tensor([1,2,3])
>>> # Shares memory with tensor 'a'
>>> b=torch.asarray(a)
>>> a.data_ptr()==b.data_ptr()
True
>>> # Forces memory copy
>>> c=torch.asarray(a,copy=True)
>>> a.data_ptr()==c.data_ptr()
False>>> a=torch.tensor([1,2,3],requires_grad=True).float()
>>> b=a+2
>>> b
tensor([1., 2., 3.], grad_fn=<AddBackward0>)
>>> # Shares memory with tensor 'b', with no grad
>>> c=torch.asarray(b)
>>> c
tensor([1., 2., 3.])
>>> # Shares memory with tensor 'b', retaining autograd history
>>> d=torch.asarray(b,requires_grad=True)
>>> d
tensor([1., 2., 3.], grad_fn=<AddBackward0>)>>> array=numpy.array([1,2,3])
>>> # Shares memory with array 'array'
>>> t1=torch.asarray(array)
>>> array.__array_interface__['data'][0]==t1.data_ptr()
True
>>> # Copies memory due to dtype mismatch
>>> t2=torch.asarray(array,dtype=torch.float32)
>>> array.__array_interface__['data'][0]==t1.data_ptr()
False
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. as_tensor ( data ,  dtype ,  device )   → ¶",">>> a=numpy.array([1,2,3])
>>> t=torch.as_tensor(a)
>>> t
tensor([ 1,  2,  3])
>>> t[0]=-1
>>> a
array([-1,  2,  3])>>> a=numpy.array([1,2,3])
>>> t=torch.as_tensor(a,device=torch.device('cuda'))
>>> t
tensor([ 1,  2,  3])
>>> t[0]=-1
>>> a
array([1,  2,  3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. as_strided ( input ,  size ,  stride ,  storage_offset )   → ¶",">>> x=torch.randn(3,3)
>>> x
tensor([[ 0.9039,  0.6291,  1.0795],
        [ 0.1586,  2.1939, -0.4900],
        [-0.1909, -0.7503,  1.9355]])
>>> t=torch.as_strided(x,(2,2),(1,2))
>>> t
tensor([[0.9039, 1.0795],
        [0.6291, 0.1586]])
>>> t=torch.as_strided(x,(2,2),(1,2),1)
tensor([[0.6291, 0.1586],
        [1.0795, 2.1939]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. from_numpy ( ndarray )   → ¶",">>> a=numpy.array([1,2,3])
>>> t=torch.from_numpy(a)
>>> t
tensor([ 1,  2,  3])
>>> t[0]=-1
>>> a
array([-1,  2,  3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. from_dlpack ( ext_tensor )   → [source] ¶",">>> importtorch.utils.dlpack
>>> t=torch.arange(4)# Convert a tensor directly (supported in PyTorch >= 1.10)
>>> t2=torch.from_dlpack(t)
>>> t2[:2]=-1# show that memory is shared
>>> t2
tensor([-1, -1,  2,  3])
>>> t
tensor([-1, -1,  2,  3])# The old-style DLPack usage, with an intermediate capsule object
>>> capsule=torch.utils.dlpack.to_dlpack(t)
>>> capsule
<capsule object ""dltensor"" at ...>
>>> t3=torch.from_dlpack(capsule)
>>> t3
tensor([-1, -1,  2,  3])
>>> t3[0]=-9# now we're sharing memory between 3 tensors
>>> t3
tensor([-9, -1,  2,  3])
>>> t2
tensor([-9, -1,  2,  3])
>>> t
tensor([-9, -1,  2,  3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶",">>> importarray
>>> a=array.array('i',[1,2,3])
>>> t=torch.frombuffer(a,dtype=torch.int32)
>>> t
tensor([ 1,  2,  3])
>>> t[0]=-1
>>> a
array([-1,  2,  3])>>> # Interprets the signed char bytes as 32-bit integers.
>>> # Each 4 signed char elements will be interpreted as
>>> # 1 signed 32-bit integer.
>>> importarray
>>> a=array.array('b',[-1,0,0,0])
>>> torch.frombuffer(a,dtype=torch.int32)
tensor([255], dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. zeros ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶",">>> torch.zeros(2,3)
tensor([[ 0.,  0.,  0.],
        [ 0.,  0.,  0.]])>>> torch.zeros(5)
tensor([ 0.,  0.,  0.,  0.,  0.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. zeros_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶",">>> input=torch.empty(2,3)
>>> torch.zeros_like(input)
tensor([[ 0.,  0.,  0.],
        [ 0.,  0.,  0.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ones ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶",">>> torch.ones(2,3)
tensor([[ 1.,  1.,  1.],
        [ 1.,  1.,  1.]])>>> torch.ones(5)
tensor([ 1.,  1.,  1.,  1.,  1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ones_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶",">>> input=torch.empty(2,3)
>>> torch.ones_like(input)
tensor([[ 1.,  1.,  1.],
        [ 1.,  1.,  1.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. arange ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶",">>> torch.arange(5)
tensor([ 0,  1,  2,  3,  4])
>>> torch.arange(1,4)
tensor([ 1,  2,  3])
>>> torch.arange(1,2.5,0.5)
tensor([ 1.0000,  1.5000,  2.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶",">>> torch.range(1,4)
tensor([ 1.,  2.,  3.,  4.])
>>> torch.range(1,4,0.5)
tensor([ 1.0000,  1.5000,  2.0000,  2.5000,  3.0000,  3.5000,  4.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. linspace ( start ,  end ,  steps ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶",">>> torch.linspace(3,10,steps=5)
tensor([  3.0000,   4.7500,   6.5000,   8.2500,  10.0000])
>>> torch.linspace(-10,10,steps=5)
tensor([-10.,  -5.,   0.,   5.,  10.])
>>> torch.linspace(start=-10,end=10,steps=5)
tensor([-10.,  -5.,   0.,   5.,  10.])
>>> torch.linspace(start=-10,end=10,steps=1)
tensor([-10.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logspace ( start ,  end ,  steps ,  base ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶",">>> torch.logspace(start=-10,end=10,steps=5)
tensor([ 1.0000e-10,  1.0000e-05,  1.0000e+00,  1.0000e+05,  1.0000e+10])
>>> torch.logspace(start=0.1,end=1.0,steps=5)
tensor([  1.2589,   2.1135,   3.5481,   5.9566,  10.0000])
>>> torch.logspace(start=0.1,end=1.0,steps=1)
tensor([1.2589])
>>> torch.logspace(start=2,end=2,steps=1,base=2)
tensor([4.0])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. eye ( n ,  m ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶",">>> torch.eye(3)
tensor([[ 1.,  0.,  0.],
        [ 0.,  1.,  0.],
        [ 0.,  0.,  1.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. empty_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶",">>> a=torch.empty((2,3),dtype=torch.int32,device='cuda')
>>> torch.empty_like(a)
tensor([[0, 0, 0],
        [0, 0, 0]], device='cuda:0', dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. empty_strided ( size ,  stride ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶",">>> a=torch.empty_strided((2,3),(1,2))
>>> a
tensor([[8.9683e-44, 4.4842e-44, 5.1239e+07],
        [0.0000e+00, 0.0000e+00, 3.0705e-41]])
>>> a.stride()
(1, 2)
>>> a.size()
torch.Size([2, 3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. full ( size ,  fill_value ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶",">>> torch.full((2,3),3.141592)
tensor([[ 3.1416,  3.1416,  3.1416],
        [ 3.1416,  3.1416,  3.1416]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantize_per_tensor ( input ,  scale ,  zero_point ,  dtype )   → ¶",">>> torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8)
tensor([-1.,  0.,  1.,  2.], size=(4,), dtype=torch.quint8,
       quantization_scheme=torch.per_tensor_affine, scale=0.1, zero_point=10)
>>> torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8).int_repr()
tensor([ 0, 10, 20, 30], dtype=torch.uint8)
>>> torch.quantize_per_tensor([torch.tensor([-1.0,0.0]),torch.tensor([-2.0,2.0])],
>>> torch.tensor([0.1,0.2]),torch.tensor([10,20]),torch.quint8)
(tensor([-1.,  0.], size=(2,), dtype=torch.quint8,
    quantization_scheme=torch.per_tensor_affine, scale=0.1, zero_point=10),
    tensor([-2.,  2.], size=(2,), dtype=torch.quint8,
    quantization_scheme=torch.per_tensor_affine, scale=0.2, zero_point=20))
>>> torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),torch.tensor(0.1),torch.tensor(10),torch.quint8)
tensor([-1.,  0.,  1.,  2.], size=(4,), dtype=torch.quint8,
   quantization_scheme=torch.per_tensor_affine, scale=0.10, zero_point=10)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantize_per_channel ( input ,  scales ,  zero_points ,  axis ,  dtype )   → ¶",">>> x=torch.tensor([[-1.0,0.0],[1.0,2.0]])
>>> torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8)
tensor([[-1.,  0.],
        [ 1.,  2.]], size=(2, 2), dtype=torch.quint8,
       quantization_scheme=torch.per_channel_affine,
       scale=tensor([0.1000, 0.0100], dtype=torch.float64),
       zero_point=tensor([10,  0]), axis=0)
>>> torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8).int_repr()
tensor([[  0,  10],
        [100, 200]], dtype=torch.uint8)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. complex ( real ,  imag ,  * ,  out )   → ¶",">>> real=torch.tensor([1,2],dtype=torch.float32)
>>> imag=torch.tensor([3,4],dtype=torch.float32)
>>> z=torch.complex(real,imag)
>>> z
tensor([(1.+3.j), (2.+4.j)])
>>> z.dtype
torch.complex64
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. real ( input )   → ¶",">>> x=torch.randn(4,dtype=torch.cfloat)
>>> x
tensor([(0.3100+0.3553j), (-0.5445-0.7896j), (-1.6492-0.0633j), (-0.0638-0.8119j)])
>>> x.real
tensor([ 0.3100, -0.5445, -1.6492, -0.0638])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. imag ( input )   → ¶",">>> x=torch.randn(4,dtype=torch.cfloat)
>>> x
tensor([(0.3100+0.3553j), (-0.5445-0.7896j), (-1.6492-0.0633j), (-0.0638-0.8119j)])
>>> x.imag
tensor([ 0.3553, -0.7896, -0.0633, -0.8119])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. polar ( abs ,  angle ,  * ,  out )   → ¶",">>> importnumpyasnp
>>> abs=torch.tensor([1,2],dtype=torch.float64)
>>> angle=torch.tensor([np.pi/2,5*np.pi/4],dtype=torch.float64)
>>> z=torch.polar(abs,angle)
>>> z
tensor([(0.0000+1.0000j), (-1.4142-1.4142j)], dtype=torch.complex128)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. abs ( input ,  * ,  out )   → ¶",">>> torch.abs(torch.tensor([-1,-2,3]))
tensor([ 1,  2,  3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. angle ( input ,  * ,  out )   → ¶",">>> torch.angle(torch.tensor([-1+1j,-2+2j,3-3j]))*180/3.14159
tensor([ 135.,  135,  -45])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. heaviside ( input ,  values ,  * ,  out )   → ¶",">>> input=torch.tensor([-1.5,0,2.0])
>>> values=torch.tensor([0.5])
>>> torch.heaviside(input,values)
tensor([0.0000, 0.5000, 1.0000])
>>> values=torch.tensor([1.2,-2.0,3.5])
>>> torch.heaviside(input,values)
tensor([0., -2., 1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. argwhere ( input )   → ¶",">>> t=torch.tensor([1,0,1])
>>> torch.argwhere(t)
tensor([[0],
        [2]])
>>> t=torch.tensor([[1,0,1],[0,1,1]])
>>> torch.argwhere(t)
tensor([[0, 0],
        [0, 2],
        [1, 1],
        [1, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cat ( tensors ,  dim ,  * ,  out )   → ¶",">>> x=torch.randn(2,3)
>>> x
tensor([[ 0.6580, -1.0969, -0.4614],
        [-0.1034, -0.5790,  0.1497]])
>>> torch.cat((x,x,x),0)
tensor([[ 0.6580, -1.0969, -0.4614],
        [-0.1034, -0.5790,  0.1497],
        [ 0.6580, -1.0969, -0.4614],
        [-0.1034, -0.5790,  0.1497],
        [ 0.6580, -1.0969, -0.4614],
        [-0.1034, -0.5790,  0.1497]])
>>> torch.cat((x,x,x),1)
tensor([[ 0.6580, -1.0969, -0.4614,  0.6580, -1.0969, -0.4614,  0.6580,
         -1.0969, -0.4614],
        [-0.1034, -0.5790,  0.1497, -0.1034, -0.5790,  0.1497, -0.1034,
         -0.5790,  0.1497]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. conj ( input )   → ¶",">>> x=torch.tensor([-1+1j,-2+2j,3-3j])
>>> x.is_conj()
False
>>> y=torch.conj(x)
>>> y.is_conj()
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. column_stack ( tensors ,  * ,  out )   → ¶",">>> a=torch.tensor([1,2,3])
>>> b=torch.tensor([4,5,6])
>>> torch.column_stack((a,b))
tensor([[1, 4],
    [2, 5],
    [3, 6]])
>>> a=torch.arange(5)
>>> b=torch.arange(10).reshape(5,2)
>>> torch.column_stack((a,b,b))
tensor([[0, 0, 1, 0, 1],
        [1, 2, 3, 2, 3],
        [2, 4, 5, 4, 5],
        [3, 6, 7, 6, 7],
        [4, 8, 9, 8, 9]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. dstack ( tensors ,  * ,  out )   → ¶",">>> a=torch.tensor([1,2,3])
>>> b=torch.tensor([4,5,6])
>>> torch.dstack((a,b))
tensor([[[1, 4],
         [2, 5],
         [3, 6]]])
>>> a=torch.tensor([[1],[2],[3]])
>>> b=torch.tensor([[4],[5],[6]])
>>> torch.dstack((a,b))
tensor([[[1, 4]],
        [[2, 5]],
        [[3, 6]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. gather ( input ,  dim ,  index ,  * ,  sparse_grad ,  out )   → ¶",">>> t=torch.tensor([[1,2],[3,4]])
>>> torch.gather(t,1,torch.tensor([[0,0],[1,0]]))
tensor([[ 1,  1],
        [ 4,  3]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. hstack ( tensors ,  * ,  out )   → ¶",">>> a=torch.tensor([1,2,3])
>>> b=torch.tensor([4,5,6])
>>> torch.hstack((a,b))
tensor([1, 2, 3, 4, 5, 6])
>>> a=torch.tensor([[1],[2],[3]])
>>> b=torch.tensor([[4],[5],[6]])
>>> torch.hstack((a,b))
tensor([[1, 4],
        [2, 5],
        [3, 6]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. index_add_ ( dim ,  index ,  source ,  * ,  alpha )   → ¶",">>> x=torch.ones(5,3)
>>> t=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)
>>> index=torch.tensor([0,4,2])
>>> x.index_add_(0,index,t)
tensor([[  2.,   3.,   4.],
        [  1.,   1.,   1.],
        [  8.,   9.,  10.],
        [  1.,   1.,   1.],
        [  5.,   6.,   7.]])
>>> x.index_add_(0,index,t,alpha=-1)
tensor([[  1.,   1.,   1.],
        [  1.,   1.,   1.],
        [  1.,   1.,   1.],
        [  1.,   1.,   1.],
        [  1.,   1.,   1.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶",">>> x=torch.empty(5,3).fill_(2)
>>> t=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)
>>> index=torch.tensor([0,4,2,0])
>>> x.index_reduce_(0,index,t,'prod')
tensor([[20., 44., 72.],
        [ 2.,  2.,  2.],
        [14., 16., 18.],
        [ 2.,  2.,  2.],
        [ 8., 10., 12.]])
>>> x=torch.empty(5,3).fill_(2)
>>> x.index_reduce_(0,index,t,'prod',include_self=False)
tensor([[10., 22., 36.],
        [ 2.,  2.,  2.],
        [ 7.,  8.,  9.],
        [ 2.,  2.,  2.],
        [ 4.,  5.,  6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. index_select ( input ,  dim ,  index ,  * ,  out )   → ¶",">>> x=torch.randn(3,4)
>>> x
tensor([[ 0.1427,  0.0231, -0.5414, -1.0009],
        [-0.4664,  0.2647, -0.1228, -1.1068],
        [-1.1734, -0.6571,  0.7230, -0.6004]])
>>> indices=torch.tensor([0,2])
>>> torch.index_select(x,0,indices)
tensor([[ 0.1427,  0.0231, -0.5414, -1.0009],
        [-1.1734, -0.6571,  0.7230, -0.6004]])
>>> torch.index_select(x,1,indices)
tensor([[ 0.1427, -0.5414],
        [-0.4664, -0.1228],
        [-1.1734,  0.7230]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. masked_select ( input ,  mask ,  * ,  out )   → ¶",">>> x=torch.randn(3,4)
>>> x
tensor([[ 0.3552, -2.3825, -0.8297,  0.3477],
        [-1.2035,  1.2252,  0.5002,  0.6248],
        [ 0.1307, -2.0608,  0.1244,  2.0139]])
>>> mask=x.ge(0.5)
>>> mask
tensor([[False, False, False, False],
        [False, True, True, True],
        [False, False, False, True]])
>>> torch.masked_select(x,mask)
tensor([ 1.2252,  0.5002,  0.6248,  2.0139])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. movedim ( input ,  source ,  destination )   → ¶",">>> t=torch.randn(3,2,1)
>>> t
tensor([[[-0.3362],
        [-0.8437]],        [[-0.9627],
        [ 0.1727]],        [[ 0.5173],
        [-0.1398]]])
>>> torch.movedim(t,1,0).shape
torch.Size([2, 3, 1])
>>> torch.movedim(t,1,0)
tensor([[[-0.3362],
        [-0.9627],
        [ 0.5173]],        [[-0.8437],
        [ 0.1727],
        [-0.1398]]])
>>> torch.movedim(t,(1,2),(0,1)).shape
torch.Size([2, 1, 3])
>>> torch.movedim(t,(1,2),(0,1))
tensor([[[-0.3362, -0.9627,  0.5173]],        [[-0.8437,  0.1727, -0.1398]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. moveaxis ( input ,  source ,  destination )   → ¶",">>> t=torch.randn(3,2,1)
>>> t
tensor([[[-0.3362],
        [-0.8437]],        [[-0.9627],
        [ 0.1727]],        [[ 0.5173],
        [-0.1398]]])
>>> torch.moveaxis(t,1,0).shape
torch.Size([2, 3, 1])
>>> torch.moveaxis(t,1,0)
tensor([[[-0.3362],
        [-0.9627],
        [ 0.5173]],        [[-0.8437],
        [ 0.1727],
        [-0.1398]]])
>>> torch.moveaxis(t,(1,2),(0,1)).shape
torch.Size([2, 1, 3])
>>> torch.moveaxis(t,(1,2),(0,1))
tensor([[[-0.3362, -0.9627,  0.5173]],        [[-0.8437,  0.1727, -0.1398]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. narrow ( input ,  dim ,  start ,  length )   → ¶",">>> x=torch.tensor([[1,2,3],[4,5,6],[7,8,9]])
>>> torch.narrow(x,0,0,2)
tensor([[ 1,  2,  3],
        [ 4,  5,  6]])
>>> torch.narrow(x,1,1,2)
tensor([[ 2,  3],
        [ 5,  6],
        [ 8,  9]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nonzero ( input ,  * ,  out ,  as_tuple )   → ¶",">>> torch.nonzero(torch.tensor([1,1,1,0,1]))
tensor([[ 0],
        [ 1],
        [ 2],
        [ 4]])
>>> torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],
... [0.0,0.4,0.0,0.0],
... [0.0,0.0,1.2,0.0],
... [0.0,0.0,0.0,-0.4]]))
tensor([[ 0,  0],
        [ 1,  1],
        [ 2,  2],
        [ 3,  3]])
>>> torch.nonzero(torch.tensor([1,1,1,0,1]),as_tuple=True)
(tensor([0, 1, 2, 4]),)
>>> torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],
... [0.0,0.4,0.0,0.0],
... [0.0,0.0,1.2,0.0],
... [0.0,0.0,0.0,-0.4]]),as_tuple=True)
(tensor([0, 1, 2, 3]), tensor([0, 1, 2, 3]))
>>> torch.nonzero(torch.tensor(5),as_tuple=True)
(tensor([0]),)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. reshape ( input ,  shape )   → ¶",">>> a=torch.arange(4.)
>>> torch.reshape(a,(2,2))
tensor([[ 0.,  1.],
        [ 2.,  3.]])
>>> b=torch.tensor([[0,1],[2,3]])
>>> torch.reshape(b,(-1,))
tensor([ 0,  1,  2,  3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. vstack ( tensors ,  * ,  out )   → ¶",">>> a=torch.tensor([1,2,3])
>>> b=torch.tensor([4,5,6])
>>> torch.vstack((a,b))
tensor([[1, 2, 3],
        [4, 5, 6]])
>>> a=torch.tensor([[1],[2],[3]])
>>> b=torch.tensor([[4],[5],[6]])
>>> torch.vstack((a,b))
tensor([[1],
        [2],
        [3],
        [4],
        [5],
        [6]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. scatter_ ( dim ,  index ,  src ,  reduce )   → ¶",">>> src=torch.arange(1,11).reshape((2,5))
>>> src
tensor([[ 1,  2,  3,  4,  5],
        [ 6,  7,  8,  9, 10]])
>>> index=torch.tensor([[0,1,2,0]])
>>> torch.zeros(3,5,dtype=src.dtype).scatter_(0,index,src)
tensor([[1, 0, 0, 4, 0],
        [0, 2, 0, 0, 0],
        [0, 0, 3, 0, 0]])
>>> index=torch.tensor([[0,1,2],[0,1,4]])
>>> torch.zeros(3,5,dtype=src.dtype).scatter_(1,index,src)
tensor([[1, 2, 3, 0, 0],
        [6, 7, 0, 0, 8],
        [0, 0, 0, 0, 0]])>>> torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),
... 1.23,reduce='multiply')
tensor([[2.0000, 2.0000, 2.4600, 2.0000],
        [2.0000, 2.0000, 2.0000, 2.4600]])
>>> torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),
... 1.23,reduce='add')
tensor([[2.0000, 2.0000, 3.2300, 2.0000],
        [2.0000, 2.0000, 2.0000, 3.2300]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diagonal_scatter ( input ,  src ,  offset ,  dim1 ,  dim2 )   → ¶",">>> a=torch.zeros(3,3)
>>> a
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]])>>> torch.diagonal_scatter(a,torch.ones(3),0)
tensor([[1., 0., 0.],
        [0., 1., 0.],
        [0., 0., 1.]])>>> torch.diagonal_scatter(a,torch.ones(2),1)
tensor([[0., 1., 0.],
        [0., 0., 1.],
        [0., 0., 0.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. select_scatter ( input ,  src ,  dim ,  index )   → ¶",">>> a=torch.zeros(2,2)
>>> b=torch.ones(2)
>>> a.select_scatter(b,0,0)
tensor([[1., 1.],
        [0., 0.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶",">>> a=torch.zeros(8,8)
>>> b=torch.ones(8)
>>> a.slice_scatter(b,start=6)
tensor([[0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 1., 1., 1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1., 1., 1., 1.]])>>> b=torch.ones(2)
>>> a.slice_scatter(b,dim=1,start=2,end=6,step=2)
tensor([[0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 1., 0., 0., 0.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. scatter_add_ ( dim ,  index ,  src )   → ¶",">>> src=torch.ones((2,5))
>>> index=torch.tensor([[0,1,2,0,0]])
>>> torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)
tensor([[1., 0., 0., 1., 1.],
        [0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0.]])
>>> index=torch.tensor([[0,1,2,0,0],[0,1,2,2,2]])
>>> torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)
tensor([[2., 0., 0., 1., 1.],
        [0., 2., 0., 0., 0.],
        [0., 0., 2., 1., 1.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. scatter_reduce_ ( dim ,  index ,  src ,  reduce ,  * ,  include_self )   → ¶",">>> src=torch.tensor([1.,2.,3.,4.,5.,6.])
>>> index=torch.tensor([0,1,0,1,2,1])
>>> input=torch.tensor([1.,2.,3.,4.])
>>> input.scatter_reduce(0,index,src,reduce=""sum"")
tensor([5., 14., 8., 4.])
>>> input.scatter_reduce(0,index,src,reduce=""sum"",include_self=False)
tensor([4., 12., 5., 4.])
>>> input2=torch.tensor([5.,4.,3.,2.])
>>> input2.scatter_reduce(0,index,src,reduce=""amax"")
tensor([5., 6., 5., 2.])
>>> input2.scatter_reduce(0,index,src,reduce=""amax"",include_self=False)
tensor([3., 6., 5., 2.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. split ( tensor ,  split_size_or_sections ,  dim ) [source] ¶",">>> a=torch.arange(10).reshape(5,2)
>>> a
tensor([[0, 1],
        [2, 3],
        [4, 5],
        [6, 7],
        [8, 9]])
>>> torch.split(a,2)
(tensor([[0, 1],
         [2, 3]]),
 tensor([[4, 5],
         [6, 7]]),
 tensor([[8, 9]]))
>>> torch.split(a,[1,4])
(tensor([[0, 1]]),
 tensor([[2, 3],
         [4, 5],
         [6, 7],
         [8, 9]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. squeeze ( input ,  dim )   → ¶",">>> x=torch.zeros(2,1,2,1,2)
>>> x.size()
torch.Size([2, 1, 2, 1, 2])
>>> y=torch.squeeze(x)
>>> y.size()
torch.Size([2, 2, 2])
>>> y=torch.squeeze(x,0)
>>> y.size()
torch.Size([2, 1, 2, 1, 2])
>>> y=torch.squeeze(x,1)
>>> y.size()
torch.Size([2, 2, 1, 2])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. swapaxes ( input ,  axis0 ,  axis1 )   → ¶",">>> x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])
>>> x
tensor([[[0, 1],
        [2, 3]],        [[4, 5],
        [6, 7]]])
>>> torch.swapaxes(x,0,1)
tensor([[[0, 1],
        [4, 5]],        [[2, 3],
        [6, 7]]])
>>> torch.swapaxes(x,0,2)
tensor([[[0, 4],
        [2, 6]],        [[1, 5],
        [3, 7]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. transpose ( input ,  dim0 ,  dim1 )   → ¶",">>> x=torch.randn(2,3)
>>> x
tensor([[ 1.0028, -0.9893,  0.5809],
        [-0.1669,  0.7299,  0.4942]])
>>> torch.transpose(x,0,1)
tensor([[ 1.0028, -0.1669],
        [-0.9893,  0.7299],
        [ 0.5809,  0.4942]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. swapdims ( input ,  dim0 ,  dim1 )   → ¶",">>> x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])
>>> x
tensor([[[0, 1],
        [2, 3]],        [[4, 5],
        [6, 7]]])
>>> torch.swapdims(x,0,1)
tensor([[[0, 1],
        [4, 5]],        [[2, 3],
        [6, 7]]])
>>> torch.swapdims(x,0,2)
tensor([[[0, 4],
        [2, 6]],        [[1, 5],
        [3, 7]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. t ( input )   → ¶",">>> x=torch.randn(())
>>> x
tensor(0.1995)
>>> torch.t(x)
tensor(0.1995)
>>> x=torch.randn(3)
>>> x
tensor([ 2.4320, -0.4608,  0.7702])
>>> torch.t(x)
tensor([ 2.4320, -0.4608,  0.7702])
>>> x=torch.randn(2,3)
>>> x
tensor([[ 0.4875,  0.9158, -0.5872],
        [ 0.3938, -0.6929,  0.6932]])
>>> torch.t(x)
tensor([[ 0.4875,  0.3938],
        [ 0.9158, -0.6929],
        [-0.5872,  0.6932]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. take ( input ,  index )   → ¶",">>> src=torch.tensor([[4,3,5],
... [6,7,8]])
>>> torch.take(src,torch.tensor([0,2,5]))
tensor([ 4,  5,  8])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. take_along_dim ( input ,  indices ,  dim ,  * ,  out )   → ¶",">>> t=torch.tensor([[10,30,20],[60,40,50]])
>>> max_idx=torch.argmax(t)
>>> torch.take_along_dim(t,max_idx)
tensor([60])
>>> sorted_idx=torch.argsort(t,dim=1)
>>> torch.take_along_dim(t,sorted_idx,dim=1)
tensor([[10, 20, 30],
        [40, 50, 60]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tensor_split ( input ,  indices_or_sections ,  dim )   → ¶",">>> x=torch.arange(8)
>>> torch.tensor_split(x,3)
(tensor([0, 1, 2]), tensor([3, 4, 5]), tensor([6, 7]))>>> x=torch.arange(7)
>>> torch.tensor_split(x,3)
(tensor([0, 1, 2]), tensor([3, 4]), tensor([5, 6]))
>>> torch.tensor_split(x,(1,6))
(tensor([0]), tensor([1, 2, 3, 4, 5]), tensor([6]))>>> x=torch.arange(14).reshape(2,7)
>>> x
tensor([[ 0,  1,  2,  3,  4,  5,  6],
        [ 7,  8,  9, 10, 11, 12, 13]])
>>> torch.tensor_split(x,3,dim=1)
(tensor([[0, 1, 2],
        [7, 8, 9]]),
 tensor([[ 3,  4],
        [10, 11]]),
 tensor([[ 5,  6],
        [12, 13]]))
>>> torch.tensor_split(x,(1,6),dim=1)
(tensor([[0],
        [7]]),
 tensor([[ 1,  2,  3,  4,  5],
        [ 8,  9, 10, 11, 12]]),
 tensor([[ 6],
        [13]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tile ( input ,  dims )   → ¶",">>> x=torch.tensor([1,2,3])
>>> x.tile((2,))
tensor([1, 2, 3, 1, 2, 3])
>>> y=torch.tensor([[1,2],[3,4]])
>>> torch.tile(y,(2,2))
tensor([[1, 2, 1, 2],
        [3, 4, 3, 4],
        [1, 2, 1, 2],
        [3, 4, 3, 4]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. unbind ( input ,  dim )   → ¶",">>> torch.unbind(torch.tensor([[1,2,3],
>>> [4,5,6],
>>> [7,8,9]]))
(tensor([1, 2, 3]), tensor([4, 5, 6]), tensor([7, 8, 9]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. unsqueeze ( input ,  dim )   → ¶",">>> x=torch.tensor([1,2,3,4])
>>> torch.unsqueeze(x,0)
tensor([[ 1,  2,  3,  4]])
>>> torch.unsqueeze(x,1)
tensor([[ 1],
        [ 2],
        [ 3],
        [ 4]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. where ( condition ,  x ,  y )   → ¶",">>> x=torch.randn(3,2)
>>> y=torch.ones(3,2)
>>> x
tensor([[-0.4620,  0.3139],
        [ 0.3898, -0.7197],
        [ 0.0478, -0.1657]])
>>> torch.where(x>0,x,y)
tensor([[ 1.0000,  0.3139],
        [ 0.3898,  1.0000],
        [ 0.0478,  1.0000]])
>>> x=torch.randn(2,2,dtype=torch.double)
>>> x
tensor([[ 1.0779,  0.0383],
        [-0.8785, -1.1089]], dtype=torch.float64)
>>> torch.where(x>0,x,0.)
tensor([[1.0779, 0.0383],
        [0.0000, 0.0000]], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch. Generator ( device ) ¶",">>> g_cpu=torch.Generator()
>>> g_cuda=torch.Generator(device='cuda')
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. bernoulli ( input ,  * ,  generator ,  out )   → ¶",">>> a=torch.empty(3,3).uniform_(0,1)# generate a uniform random matrix with range [0, 1]
>>> a
tensor([[ 0.1737,  0.0950,  0.3609],
        [ 0.7148,  0.0289,  0.2676],
        [ 0.9456,  0.8937,  0.7202]])
>>> torch.bernoulli(a)
tensor([[ 1.,  0.,  0.],
        [ 0.,  0.,  0.],
        [ 1.,  1.,  1.]])>>> a=torch.ones(3,3)# probability of drawing ""1"" is 1
>>> torch.bernoulli(a)
tensor([[ 1.,  1.,  1.],
        [ 1.,  1.,  1.],
        [ 1.,  1.,  1.]])
>>> a=torch.zeros(3,3)# probability of drawing ""1"" is 0
>>> torch.bernoulli(a)
tensor([[ 0.,  0.,  0.],
        [ 0.,  0.,  0.],
        [ 0.,  0.,  0.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. multinomial ( input ,  num_samples ,  replacement ,  * ,  generator ,  out )   → ¶",">>> weights=torch.tensor([0,10,3,0],dtype=torch.float)# create a tensor of weights
>>> torch.multinomial(weights,2)
tensor([1, 2])
>>> torch.multinomial(weights,4)# ERROR!
RuntimeError: invalid argument 2: invalid multinomial distribution (with replacement=False,
not enough non-negative category to sample) at ../aten/src/TH/generic/THTensorRandom.cpp:320
>>> torch.multinomial(weights,4,replacement=True)
tensor([ 2,  1,  1,  1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶",">>> torch.normal(mean=torch.arange(1.,11.),std=torch.arange(1,0,-0.1))
tensor([  1.0425,   3.5672,   2.7969,   4.2925,   4.7229,   6.2134,
          8.0505,   8.1408,   9.0563,  10.0566])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶",">>> torch.normal(mean=0.5,std=torch.arange(1.,6.))
tensor([-1.2793, -1.0732, -2.0687,  5.1177, -1.2303])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. poisson ( input ,  generator )   → ¶",">>> rates=torch.rand(4,4)*5# rate parameter between 0 and 5
>>> torch.poisson(rates)
tensor([[9., 1., 3., 5.],
        [8., 6., 6., 0.],
        [0., 4., 5., 3.],
        [2., 1., 4., 2.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.quasirandom. SobolEngine ( dimension ,  scramble ,  seed ) [source] ¶",">>> soboleng=torch.quasirandom.SobolEngine(dimension=5)
>>> soboleng.draw(3)
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.5000, 0.5000, 0.5000, 0.5000],
        [0.7500, 0.2500, 0.2500, 0.2500, 0.7500]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. acos ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.3348, -0.5889,  0.2005, -0.1584])
>>> torch.acos(a)
tensor([ 1.2294,  2.2004,  1.3690,  1.7298])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. acosh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4).uniform_(1,2)
>>> a
tensor([ 1.3192, 1.9915, 1.9674, 1.7151 ])
>>> torch.acosh(a)
tensor([ 0.7791, 1.3120, 1.2979, 1.1341 ])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. add ( input ,  other ,  * ,  alpha ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.0202,  1.0985,  1.3506, -0.6056])
>>> torch.add(a,20)
tensor([ 20.0202,  21.0985,  21.3506,  19.3944])>>> b=torch.randn(4)
>>> b
tensor([-0.9732, -0.3497,  0.6245,  0.4022])
>>> c=torch.randn(4,1)
>>> c
tensor([[ 0.3743],
        [-1.7724],
        [-0.5811],
        [-0.8017]])
>>> torch.add(b,c,alpha=10)
tensor([[  2.7695,   3.3930,   4.3672,   4.1450],
        [-18.6971, -18.0736, -17.0994, -17.3216],
        [ -6.7845,  -6.1610,  -5.1868,  -5.4090],
        [ -8.9902,  -8.3667,  -7.3925,  -7.6147]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addcdiv ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶",">>> t=torch.randn(1,3)
>>> t1=torch.randn(3,1)
>>> t2=torch.randn(1,3)
>>> torch.addcdiv(t,t1,t2,value=0.1)
tensor([[-0.2312, -3.6496,  0.1312],
        [-1.0428,  3.4292, -0.1030],
        [-0.5369, -0.9829,  0.0430]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addcmul ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶",">>> t=torch.randn(1,3)
>>> t1=torch.randn(3,1)
>>> t2=torch.randn(1,3)
>>> torch.addcmul(t,t1,t2,value=0.1)
tensor([[-0.8635, -0.6391,  1.6174],
        [-0.7617, -0.5879,  1.7388],
        [-0.8353, -0.6249,  1.6511]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. asin ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.5962,  1.4985, -0.4396,  1.4525])
>>> torch.asin(a)
tensor([-0.6387,     nan, -0.4552,     nan])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. asinh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.1606, -1.4267, -1.0899, -1.0250 ])
>>> torch.asinh(a)
tensor([ 0.1599, -1.1534, -0.9435, -0.8990 ])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. atan ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.2341,  0.2539, -0.6256, -0.6448])
>>> torch.atan(a)
tensor([ 0.2299,  0.2487, -0.5591, -0.5727])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. atanh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4).uniform_(-1,1)
>>> a
tensor([ -0.9385, 0.2968, -0.8591, -0.1871 ])
>>> torch.atanh(a)
tensor([ -1.7253, 0.3060, -1.2899, -0.1893 ])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. atan2 ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.9041,  0.0196, -0.3108, -2.4423])
>>> torch.atan2(a,torch.randn(4))
tensor([ 0.9833,  0.0811, -1.9743, -1.4151])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ceil ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.6341, -1.4208, -1.0900,  0.5826])
>>> torch.ceil(a)
tensor([-0., -1., -1.,  1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. clamp ( input ,  min ,  max ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-1.7120,  0.1734, -0.0478, -0.0922])
>>> torch.clamp(a,min=-0.5,max=0.5)
tensor([-0.5000,  0.1734, -0.0478, -0.0922])>>> min=torch.linspace(-1,1,steps=4)
>>> torch.clamp(a,min=min)
tensor([-1.0000,  0.1734,  0.3333,  1.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. min ( input )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[ 0.6750,  1.0857,  1.7197]])
>>> torch.min(a)
tensor(0.6750)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. min ( input )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[-0.6248,  1.1334, -1.1899, -0.2803],
        [-1.4644, -0.2635, -0.3651,  0.6134],
        [ 0.2457,  0.0384,  1.0128,  0.7015],
        [-0.1153,  2.9849,  2.1458,  0.5788]])
>>> torch.min(a,1)
torch.return_types.min(values=tensor([-1.1899, -1.4644,  0.0384, -0.1153]), indices=tensor([2, 0, 1, 0]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. max ( input )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[ 0.6763,  0.7445, -2.2369]])
>>> torch.max(a)
tensor(0.7445)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. max ( input )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[-1.2360, -0.2942, -0.1222,  0.8475],
        [ 1.1949, -1.1127, -2.2379, -0.6702],
        [ 1.5717, -0.9207,  0.1297, -1.8768],
        [-0.6172,  1.0036, -0.6060, -0.2432]])
>>> torch.max(a,1)
torch.return_types.max(values=tensor([0.8475, 1.1949, 1.5717, 1.0036]), indices=tensor([3, 0, 0, 1]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. conj_physical ( input ,  * ,  out )   → ¶",">>> torch.conj_physical(torch.tensor([-1+1j,-2+2j,3-3j]))
tensor([-1 - 1j, -2 - 2j, 3 + 3j])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. copysign ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.randn(5)
>>> a
tensor([-1.2557, -0.0026, -0.5387,  0.4740, -0.9244])
>>> torch.copysign(a,1)
tensor([1.2557, 0.0026, 0.5387, 0.4740, 0.9244])
>>> a=torch.randn(4,4)
>>> a
tensor([[ 0.7079,  0.2778, -1.0249,  0.5719],
        [-0.0059, -0.2600, -0.4475, -1.3948],
        [ 0.3667, -0.9567, -2.5757, -0.1751],
        [ 0.2046, -0.0742,  0.2998, -0.1054]])
>>> b=torch.randn(4)
tensor([ 0.2373,  0.3120,  0.3190, -1.1128])
>>> torch.copysign(a,b)
tensor([[ 0.7079,  0.2778,  1.0249, -0.5719],
        [ 0.0059,  0.2600,  0.4475, -1.3948],
        [ 0.3667,  0.9567,  2.5757, -0.1751],
        [ 0.2046,  0.0742,  0.2998, -0.1054]])
>>> a=torch.tensor([1.])
>>> b=torch.tensor([-0.])
>>> torch.copysign(a,b)
tensor([-1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cos ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 1.4309,  1.2706, -0.8562,  0.9796])
>>> torch.cos(a)
tensor([ 0.1395,  0.2957,  0.6553,  0.5574])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cosh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.1632,  1.1835, -0.6979, -0.7325])
>>> torch.cosh(a)
tensor([ 1.0133,  1.7860,  1.2536,  1.2805])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. deg2rad ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([[180.0,-180.0],[360.0,-360.0],[90.0,-90.0]])
>>> torch.deg2rad(a)
tensor([[ 3.1416, -3.1416],
        [ 6.2832, -6.2832],
        [ 1.5708, -1.5708]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. div ( input ,  other ,  * ,  rounding_mode ,  out )   → ¶",">>> x=torch.tensor([0.3810,1.2774,-0.2972,-0.3719,0.4637])
>>> torch.div(x,0.5)
tensor([ 0.7620,  2.5548, -0.5944, -0.7438,  0.9274])>>> a=torch.tensor([[-0.3711,-1.9353,-0.4605,-0.2917],
... [0.1815,-1.0111,0.9805,-1.5923],
... [0.1062,1.4581,0.7759,-1.2344],
... [-0.1830,-0.0313,1.1908,-1.4757]])
>>> b=torch.tensor([0.8032,0.2930,-0.8113,-0.2308])
>>> torch.div(a,b)
tensor([[-0.4620, -6.6051,  0.5676,  1.2639],
        [ 0.2260, -3.4509, -1.2086,  6.8990],
        [ 0.1322,  4.9764, -0.9564,  5.3484],
        [-0.2278, -0.1068, -1.4678,  6.3938]])>>> torch.div(a,b,rounding_mode='trunc')
tensor([[-0., -6.,  0.,  1.],
        [ 0., -3., -1.,  6.],
        [ 0.,  4., -0.,  5.],
        [-0., -0., -1.,  6.]])>>> torch.div(a,b,rounding_mode='floor')
tensor([[-1., -7.,  0.,  1.],
        [ 0., -4., -2.,  6.],
        [ 0.,  4., -1.,  5.],
        [-1., -1., -2.,  6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. exp ( input ,  * ,  out )   → ¶",">>> torch.exp(torch.tensor([0,math.log(2.)]))
tensor([ 1.,  2.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fake_quantize_per_channel_affine ( input ,  scale ,  zero_point ,  quant_min ,  quant_max )   → ¶",">>> x=torch.randn(2,2,2)
>>> x
tensor([[[-0.2525, -0.0466],
         [ 0.3491, -0.2168]],        [[-0.5906,  1.6258],
         [ 0.6444, -0.0542]]])
>>> scales=(torch.randn(2)+1)*0.05
>>> scales
tensor([0.0475, 0.0486])
>>> zero_points=torch.zeros(2).to(torch.int32)
>>> zero_points
tensor([0, 0])
>>> torch.fake_quantize_per_channel_affine(x,scales,zero_points,1,0,255)
tensor([[[0.0000, 0.0000],
         [0.3405, 0.0000]],        [[0.0000, 1.6134],
        [0.6323, 0.0000]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fake_quantize_per_tensor_affine ( input ,  scale ,  zero_point ,  quant_min ,  quant_max )   → ¶",">>> x=torch.randn(4)
>>> x
tensor([ 0.0552,  0.9730,  0.3973, -1.0780])
>>> torch.fake_quantize_per_tensor_affine(x,0.1,0,0,255)
tensor([0.1000, 1.0000, 0.4000, 0.0000])
>>> torch.fake_quantize_per_tensor_affine(x,torch.tensor(0.1),torch.tensor(0),0,255)
tensor([0.6000, 0.4000, 0.0000, 0.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. trunc ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 3.4742,  0.5466, -0.8008, -0.9079])
>>> torch.trunc(a)
tensor([ 3.,  0., -0., -0.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. float_power ( input ,  exponent ,  * ,  out )   → ¶",">>> a=torch.randint(10,(4,))
>>> a
tensor([6, 4, 7, 1])
>>> torch.float_power(a,2)
tensor([36., 16., 49.,  1.], dtype=torch.float64)>>> a=torch.arange(1,5)
>>> a
tensor([ 1,  2,  3,  4])
>>> exp=torch.tensor([2,-3,4,-5])
>>> exp
tensor([ 2, -3,  4, -5])
>>> torch.float_power(a,exp)
tensor([1.0000e+00, 1.2500e-01, 8.1000e+01, 9.7656e-04], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. floor ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.8166,  1.5308, -0.2530, -0.2091])
>>> torch.floor(a)
tensor([-1.,  1., -1., -1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. floor_divide ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor([4.0,3.0])
>>> b=torch.tensor([2.0,2.0])
>>> torch.floor_divide(a,b)
tensor([2.0, 1.0])
>>> torch.floor_divide(a,1.4)
tensor([2.0, 2.0])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fmod ( input ,  other ,  * ,  out )   → ¶",">>> torch.fmod(torch.tensor([-3.,-2,-1,1,2,3]),2)
tensor([-1., -0., -1.,  1.,  0.,  1.])
>>> torch.fmod(torch.tensor([1,2,3,4,5]),-1.5)
tensor([1.0000, 0.5000, 0.0000, 1.0000, 0.5000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. frac ( input ,  * ,  out )   → ¶",">>> torch.frac(torch.tensor([1,2.5,-3.2]))
tensor([ 0.0000,  0.5000, -0.2000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. frexp ( input ,  * ,  out=None) ,  Tensor ) ¶",">>> x=torch.arange(9.)
>>> mantissa,exponent=torch.frexp(x)
>>> mantissa
tensor([0.0000, 0.5000, 0.5000, 0.7500, 0.5000, 0.6250, 0.7500, 0.8750, 0.5000])
>>> exponent
tensor([0, 1, 2, 2, 3, 3, 3, 3, 4], dtype=torch.int32)
>>> torch.ldexp(mantissa,exponent)
tensor([0., 1., 2., 3., 4., 5., 6., 7., 8.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. gradient ( input ,  * ,  spacing ,  dim ,  edge_order )   → ¶",">>> # Estimates the gradient of f(x)=x^2 at points [-2, -1, 2, 4]
>>> coordinates=(torch.tensor([-2.,-1.,1.,4.]),)
>>> values=torch.tensor([4.,1.,1.,16.],)
>>> torch.gradient(values,spacing=coordinates)
(tensor([-3., -2., 2., 5.]),)>>> # Estimates the gradient of the R^2 -> R function whose samples are
>>> # described by the tensor t. Implicit coordinates are [0, 1] for the outermost
>>> # dimension and [0, 1, 2, 3] for the innermost dimension, and function estimates
>>> # partial derivative for both dimensions.
>>> t=torch.tensor([[1,2,4,8],[10,20,40,80]])
>>> torch.gradient(t)
(tensor([[ 9., 18., 36., 72.],
         [ 9., 18., 36., 72.]]),
 tensor([[ 1.0000, 1.5000, 3.0000, 4.0000],
         [10.0000, 15.0000, 30.0000, 40.0000]]))>>> # A scalar value for spacing modifies the relationship between tensor indices
>>> # and input coordinates by multiplying the indices to find the
>>> # coordinates. For example, below the indices of the innermost
>>> # 0, 1, 2, 3 translate to coordinates of [0, 2, 4, 6], and the indices of
>>> # the outermost dimension 0, 1 translate to coordinates of [0, 2].
>>> torch.gradient(t,spacing=2.0)# dim = None (implicitly [0, 1])
(tensor([[ 4.5000, 9.0000, 18.0000, 36.0000],
          [ 4.5000, 9.0000, 18.0000, 36.0000]]),
 tensor([[ 0.5000, 0.7500, 1.5000, 2.0000],
          [ 5.0000, 7.5000, 15.0000, 20.0000]]))
>>> # doubling the spacing between samples halves the estimated partial gradients.>>>
>>> # Estimates only the partial derivative for dimension 1
>>> torch.gradient(t,dim=1)# spacing = None (implicitly 1.)
(tensor([[ 1.0000, 1.5000, 3.0000, 4.0000],
         [10.0000, 15.0000, 30.0000, 40.0000]]),)>>> # When spacing is a list of scalars, the relationship between the tensor
>>> # indices and input coordinates changes based on dimension.
>>> # For example, below, the indices of the innermost dimension 0, 1, 2, 3 translate
>>> # to coordinates of [0, 3, 6, 9], and the indices of the outermost dimension
>>> # 0, 1 translate to coordinates of [0, 2].
>>> torch.gradient(t,spacing=[3.,2.])
(tensor([[ 4.5000, 9.0000, 18.0000, 36.0000],
         [ 4.5000, 9.0000, 18.0000, 36.0000]]),
 tensor([[ 0.3333, 0.5000, 1.0000, 1.3333],
         [ 3.3333, 5.0000, 10.0000, 13.3333]]))>>> # The following example is a replication of the previous one with explicit
>>> # coordinates.
>>> coords=(torch.tensor([0,2]),torch.tensor([0,3,6,9]))
>>> torch.gradient(t,spacing=coords)
(tensor([[ 4.5000, 9.0000, 18.0000, 36.0000],
         [ 4.5000, 9.0000, 18.0000, 36.0000]]),
 tensor([[ 0.3333, 0.5000, 1.0000, 1.3333],
         [ 3.3333, 5.0000, 10.0000, 13.3333]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ldexp ( input ,  other ,  * ,  out )   → ¶",">>> torch.ldexp(torch.tensor([1.]),torch.tensor([1]))
tensor([2.])
>>> torch.ldexp(torch.tensor([1.0]),torch.tensor([1,2,3,4]))
tensor([ 2.,  4.,  8., 16.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lerp ( input ,  end ,  weight ,  * ,  out ) ¶",">>> start=torch.arange(1.,5.)
>>> end=torch.empty(4).fill_(10)
>>> start
tensor([ 1.,  2.,  3.,  4.])
>>> end
tensor([ 10.,  10.,  10.,  10.])
>>> torch.lerp(start,end,0.5)
tensor([ 5.5000,  6.0000,  6.5000,  7.0000])
>>> torch.lerp(start,end,torch.full_like(start,0.5))
tensor([ 5.5000,  6.0000,  6.5000,  7.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lgamma ( input ,  * ,  out )   → ¶",">>> a=torch.arange(0.5,2,0.5)
>>> torch.lgamma(a)
tensor([ 0.5724,  0.0000, -0.1208])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. log ( input ,  * ,  out )   → ¶",">>> a=torch.rand(5)*5
>>> a
tensor([4.7767, 4.3234, 1.2156, 0.2411, 4.5739])
>>> torch.log(a)
tensor([ 1.5637,  1.4640,  0.1952, -1.4226,  1.5204])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. log10 ( input ,  * ,  out )   → ¶",">>> a=torch.rand(5)
>>> a
tensor([ 0.5224,  0.9354,  0.7257,  0.1301,  0.2251])>>> torch.log10(a)
tensor([-0.2820, -0.0290, -0.1392, -0.8857, -0.6476])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. log1p ( input ,  * ,  out )   → ¶",">>> a=torch.randn(5)
>>> a
tensor([-1.0090, -0.9923,  1.0249, -0.5372,  0.2492])
>>> torch.log1p(a)
tensor([    nan, -4.8653,  0.7055, -0.7705,  0.2225])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. log2 ( input ,  * ,  out )   → ¶",">>> a=torch.rand(5)
>>> a
tensor([ 0.8419,  0.8003,  0.9971,  0.5287,  0.0490])>>> torch.log2(a)
tensor([-0.2483, -0.3213, -0.0042, -0.9196, -4.3504])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logaddexp ( input ,  other ,  * ,  out )   → ¶",">>> torch.logaddexp(torch.tensor([-1.0]),torch.tensor([-1.0,-2,-3]))
tensor([-0.3069, -0.6867, -0.8731])
>>> torch.logaddexp(torch.tensor([-100.0,-200,-300]),torch.tensor([-1.0,-2,-3]))
tensor([-1., -2., -3.])
>>> torch.logaddexp(torch.tensor([1.0,2000,30000]),torch.tensor([-1.0,-2,-3]))
tensor([1.1269e+00, 2.0000e+03, 3.0000e+04])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logical_and ( input ,  other ,  * ,  out )   → ¶",">>> torch.logical_and(torch.tensor([True,False,True]),torch.tensor([True,False,False]))
tensor([ True, False, False])
>>> a=torch.tensor([0,1,10,0],dtype=torch.int8)
>>> b=torch.tensor([4,0,1,0],dtype=torch.int8)
>>> torch.logical_and(a,b)
tensor([False, False,  True, False])
>>> torch.logical_and(a.double(),b.double())
tensor([False, False,  True, False])
>>> torch.logical_and(a.double(),b)
tensor([False, False,  True, False])
>>> torch.logical_and(a,b,out=torch.empty(4,dtype=torch.bool))
tensor([False, False,  True, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logical_not ( input ,  * ,  out )   → ¶",">>> torch.logical_not(torch.tensor([True,False]))
tensor([False,  True])
>>> torch.logical_not(torch.tensor([0,1,-10],dtype=torch.int8))
tensor([ True, False, False])
>>> torch.logical_not(torch.tensor([0.,1.5,-10.],dtype=torch.double))
tensor([ True, False, False])
>>> torch.logical_not(torch.tensor([0.,1.,-10.],dtype=torch.double),out=torch.empty(3,dtype=torch.int16))
tensor([1, 0, 0], dtype=torch.int16)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logical_or ( input ,  other ,  * ,  out )   → ¶",">>> torch.logical_or(torch.tensor([True,False,True]),torch.tensor([True,False,False]))
tensor([ True, False,  True])
>>> a=torch.tensor([0,1,10,0],dtype=torch.int8)
>>> b=torch.tensor([4,0,1,0],dtype=torch.int8)
>>> torch.logical_or(a,b)
tensor([ True,  True,  True, False])
>>> torch.logical_or(a.double(),b.double())
tensor([ True,  True,  True, False])
>>> torch.logical_or(a.double(),b)
tensor([ True,  True,  True, False])
>>> torch.logical_or(a,b,out=torch.empty(4,dtype=torch.bool))
tensor([ True,  True,  True, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logical_xor ( input ,  other ,  * ,  out )   → ¶",">>> torch.logical_xor(torch.tensor([True,False,True]),torch.tensor([True,False,False]))
tensor([False, False,  True])
>>> a=torch.tensor([0,1,10,0],dtype=torch.int8)
>>> b=torch.tensor([4,0,1,0],dtype=torch.int8)
>>> torch.logical_xor(a,b)
tensor([ True,  True, False, False])
>>> torch.logical_xor(a.double(),b.double())
tensor([ True,  True, False, False])
>>> torch.logical_xor(a.double(),b)
tensor([ True,  True, False, False])
>>> torch.logical_xor(a,b,out=torch.empty(4,dtype=torch.bool))
tensor([ True,  True, False, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. hypot ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.hypot(torch.tensor([4.0]),torch.tensor([3.0,4.0,5.0]))
tensor([5.0000, 5.6569, 6.4031])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mul ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.randn(3)
>>> a
tensor([ 0.2015, -0.4255,  2.6087])
>>> torch.mul(a,100)
tensor([  20.1494,  -42.5491,  260.8663])>>> b=torch.randn(4,1)
>>> b
tensor([[ 1.1207],
        [-0.3137],
        [ 0.0700],
        [ 0.8378]])
>>> c=torch.randn(1,4)
>>> c
tensor([[ 0.5146,  0.1216, -0.5244,  2.2382]])
>>> torch.mul(b,c)
tensor([[ 0.5767,  0.1363, -0.5877,  2.5083],
        [-0.1614, -0.0382,  0.1645, -0.7021],
        [ 0.0360,  0.0085, -0.0367,  0.1567],
        [ 0.4312,  0.1019, -0.4394,  1.8753]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nan_to_num ( input ,  nan ,  posinf ,  neginf ,  * ,  out )   → ¶",">>> x=torch.tensor([float('nan'),float('inf'),-float('inf'),3.14])
>>> torch.nan_to_num(x)
tensor([ 0.0000e+00,  3.4028e+38, -3.4028e+38,  3.1400e+00])
>>> torch.nan_to_num(x,nan=2.0)
tensor([ 2.0000e+00,  3.4028e+38, -3.4028e+38,  3.1400e+00])
>>> torch.nan_to_num(x,nan=2.0,posinf=1.0)
tensor([ 2.0000e+00,  1.0000e+00, -3.4028e+38,  3.1400e+00])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. neg ( input ,  * ,  out )   → ¶",">>> a=torch.randn(5)
>>> a
tensor([ 0.0090, -0.2262, -0.0682, -0.2866,  0.3940])
>>> torch.neg(a)
tensor([-0.0090,  0.2262,  0.0682,  0.2866, -0.3940])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nextafter ( input ,  other ,  * ,  out )   → ¶",">>> eps=torch.finfo(torch.float32).eps
>>> torch.nextafter(torch.tensor([1.0,2.0]),torch.tensor([2.0,1.0]))==torch.tensor([eps+1,2-eps])
tensor([True, True])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. positive ( input )   → ¶",">>> t=torch.randn(5)
>>> t
tensor([ 0.0090, -0.2262, -0.0682, -0.2866,  0.3940])
>>> torch.positive(t)
tensor([ 0.0090, -0.2262, -0.0682, -0.2866,  0.3940])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.4331,  1.2475,  0.6834, -0.2791])
>>> torch.pow(a,2)
tensor([ 0.1875,  1.5561,  0.4670,  0.0779])
>>> exp=torch.arange(1.,5.)>>> a=torch.arange(1.,5.)
>>> a
tensor([ 1.,  2.,  3.,  4.])
>>> exp
tensor([ 1.,  2.,  3.,  4.])
>>> torch.pow(a,exp)
tensor([   1.,    4.,   27.,  256.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶",">>> exp=torch.arange(1.,5.)
>>> base=2
>>> torch.pow(base,exp)
tensor([  2.,   4.,   8.,  16.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantized_batch_norm ( input ,  weight=None ,  bias=None ,  mean ,  var ,  eps ,  output_scale ,  output_zero_point )   → ¶",">>> qx=torch.quantize_per_tensor(torch.rand(2,2,2,2),1.5,3,torch.quint8)
>>> torch.quantized_batch_norm(qx,torch.ones(2),torch.zeros(2),torch.rand(2),torch.rand(2),0.00001,0.2,2)
tensor([[[[-0.2000, -0.2000],
      [ 1.6000, -0.2000]],     [[-0.4000, -0.4000],
      [-0.4000,  0.6000]]],    [[[-0.2000, -0.2000],
      [-0.2000, -0.2000]],     [[ 0.6000, -0.4000],
      [ 0.6000, -0.4000]]]], size=(2, 2, 2, 2), dtype=torch.quint8,
   quantization_scheme=torch.per_tensor_affine, scale=0.2, zero_point=2)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantized_max_pool1d ( input ,  kernel_size ,  stride ,  padding ,  dilation ,  ceil_mode )   → ¶",">>> qx=torch.quantize_per_tensor(torch.rand(2,2),1.5,3,torch.quint8)
>>> torch.quantized_max_pool1d(qx,[2])
tensor([[0.0000],
        [1.5000]], size=(2, 1), dtype=torch.quint8,
    quantization_scheme=torch.per_tensor_affine, scale=1.5, zero_point=3)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantized_max_pool2d ( input ,  kernel_size ,  stride ,  padding ,  dilation ,  ceil_mode )   → ¶",">>> qx=torch.quantize_per_tensor(torch.rand(2,2,2,2),1.5,3,torch.quint8)
>>> torch.quantized_max_pool2d(qx,[2,2])
tensor([[[[1.5000]],        [[1.5000]]],        [[[0.0000]],        [[0.0000]]]], size=(2, 2, 1, 1), dtype=torch.quint8,
    quantization_scheme=torch.per_tensor_affine, scale=1.5, zero_point=3)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. rad2deg ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([[3.142,-3.142],[6.283,-6.283],[1.570,-1.570]])
>>> torch.rad2deg(a)
tensor([[ 180.0233, -180.0233],
        [ 359.9894, -359.9894],
        [  89.9544,  -89.9544]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. reciprocal ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.4595, -2.1219, -1.4314,  0.7298])
>>> torch.reciprocal(a)
tensor([-2.1763, -0.4713, -0.6986,  1.3702])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. remainder ( input ,  other ,  * ,  out )   → ¶",">>> torch.remainder(torch.tensor([-3.,-2,-1,1,2,3]),2)
tensor([ 1.,  0.,  1.,  1.,  0.,  1.])
>>> torch.remainder(torch.tensor([1,2,3,4,5]),-1.5)
tensor([ -0.5000, -1.0000,  0.0000, -0.5000, -1.0000 ])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. round ( input ,  * ,  decimals ,  out )   → ¶",">>> torch.round(torch.tensor((4.7,-2.3,9.1,-7.7)))
tensor([ 5.,  -2.,  9., -8.])>>> # Values equidistant from two integers are rounded towards the
>>> #   the nearest even value (zero is treated as even)
>>> torch.round(torch.tensor([-0.5,0.5,1.5,2.5]))
tensor([-0., 0., 2., 2.])>>> # A positive decimals argument rounds to the to that decimal place
>>> torch.round(torch.tensor([0.1234567]),decimals=3)
tensor([0.1230])>>> # A negative decimals argument rounds to the left of the decimal
>>> torch.round(torch.tensor([1200.1234567]),decimals=-3)
tensor([1000.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. rsqrt ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.0370,  0.2970,  1.5420, -0.9105])
>>> torch.rsqrt(a)
tensor([    nan,  1.8351,  0.8053,     nan])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sign ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([0.7,-1.2,0.,2.3])
>>> a
tensor([ 0.7000, -1.2000,  0.0000,  2.3000])
>>> torch.sign(a)
tensor([ 1., -1.,  0.,  1.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sgn ( input ,  * ,  out )   → ¶",">>> t=torch.tensor([3+4j,7-24j,0,1+2j])
>>> t.sgn()
tensor([0.6000+0.8000j, 0.2800-0.9600j, 0.0000+0.0000j, 0.4472+0.8944j])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. signbit ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([0.7,-1.2,0.,2.3])
>>> torch.signbit(a)
tensor([ False, True,  False,  False])
>>> a=torch.tensor([-0.0,0.0])
>>> torch.signbit(a)
tensor([ True,  False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sin ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-0.5461,  0.1347, -2.7266, -0.2746])
>>> torch.sin(a)
tensor([-0.5194,  0.1343, -0.4032, -0.2711])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sinh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.5380, -0.8632, -0.1265,  0.9399])
>>> torch.sinh(a)
tensor([ 0.5644, -0.9744, -0.1268,  1.0845])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sqrt ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-2.0755,  1.0226,  0.0831,  0.4806])
>>> torch.sqrt(a)
tensor([    nan,  1.0112,  0.2883,  0.6933])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. square ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-2.0755,  1.0226,  0.0831,  0.4806])
>>> torch.square(a)
tensor([ 4.3077,  1.0457,  0.0069,  0.2310])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sub ( input ,  other ,  * ,  alpha ,  out )   → ¶",">>> a=torch.tensor((1,2))
>>> b=torch.tensor((0,1))
>>> torch.sub(a,b,alpha=2)
tensor([1, 0])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tan ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([-1.2027, -1.7687,  0.4412, -1.3856])
>>> torch.tan(a)
tensor([-2.5930,  4.9859,  0.4722, -5.3366])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tanh ( input ,  * ,  out )   → ¶",">>> a=torch.randn(4)
>>> a
tensor([ 0.8986, -0.7279,  1.1745,  0.2611])
>>> torch.tanh(a)
tensor([ 0.7156, -0.6218,  0.8257,  0.2553])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. argmax ( input )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 1.3398,  0.2663, -0.2686,  0.2450],
        [-0.7401, -0.8805, -0.3402, -1.1936],
        [ 0.4907, -1.3948, -1.0691, -0.3132],
        [-1.6092,  0.5419, -0.2993,  0.3195]])
>>> torch.argmax(a)
tensor(0)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. argmax ( input )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 1.3398,  0.2663, -0.2686,  0.2450],
        [-0.7401, -0.8805, -0.3402, -1.1936],
        [ 0.4907, -1.3948, -1.0691, -0.3132],
        [-1.6092,  0.5419, -0.2993,  0.3195]])
>>> torch.argmax(a,dim=1)
tensor([ 0,  2,  0,  1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. argmin ( input ,  dim ,  keepdim )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 0.1139,  0.2254, -0.1381,  0.3687],
        [ 1.0100, -1.1975, -0.0102, -0.4732],
        [-0.9240,  0.1207, -0.7506, -1.0213],
        [ 1.7809, -1.2960,  0.9384,  0.1438]])
>>> torch.argmin(a)
tensor(13)
>>> torch.argmin(a,dim=1)
tensor([ 2,  1,  3,  1])
>>> torch.argmin(a,dim=1,keepdim=True)
tensor([[2],
        [1],
        [3],
        [1]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. amax ( input ,  dim ,  keepdim ,  * ,  out )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 0.8177,  1.4878, -0.2491,  0.9130],
        [-0.7158,  1.1775,  2.0992,  0.4817],
        [-0.0053,  0.0164, -1.3738, -0.0507],
        [ 1.9700,  1.1106, -1.0318, -1.0816]])
>>> torch.amax(a,1)
tensor([1.4878, 2.0992, 0.0164, 1.9700])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. amin ( input ,  dim ,  keepdim ,  * ,  out )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 0.6451, -0.4866,  0.2987, -1.3312],
        [-0.5744,  1.2980,  1.8397, -0.2713],
        [ 0.9128,  0.9214, -1.7268, -0.2995],
        [ 0.9023,  0.4853,  0.9075, -1.6165]])
>>> torch.amin(a,1)
tensor([-1.3312, -0.5744, -1.7268, -1.6165])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. aminmax ( input ,  * ,  dim=None ,  keepdim=False ,  out=None) ,  Tensor ) ¶",">>> torch.aminmax(torch.tensor([1,-3,5]))
torch.return_types.aminmax(
min=tensor(-3),
max=tensor(5))>>> # aminmax propagates NaNs
>>> torch.aminmax(torch.tensor([1,-3,5,torch.nan]))
torch.return_types.aminmax(
min=tensor(nan),
max=tensor(nan))>>> t=torch.arange(10).view(2,5)
>>> t
tensor([[0, 1, 2, 3, 4],
        [5, 6, 7, 8, 9]])
>>> t.aminmax(dim=0,keepdim=True)
torch.return_types.aminmax(
min=tensor([[0, 1, 2, 3, 4]]),
max=tensor([[5, 6, 7, 8, 9]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. all ( input )   → ¶",">>> a=torch.rand(1,2).bool()
>>> a
tensor([[False, True]], dtype=torch.bool)
>>> torch.all(a)
tensor(False, dtype=torch.bool)
>>> a=torch.arange(0,3)
>>> a
tensor([0, 1, 2])
>>> torch.all(a)
tensor(False)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. all ( input )   → ¶",">>> a=torch.rand(4,2).bool()
>>> a
tensor([[True, True],
        [True, False],
        [True, True],
        [True, True]], dtype=torch.bool)
>>> torch.all(a,dim=1)
tensor([ True, False,  True,  True], dtype=torch.bool)
>>> torch.all(a,dim=0)
tensor([ True, False], dtype=torch.bool)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. any ( input )   → ¶",">>> a=torch.rand(1,2).bool()
>>> a
tensor([[False, True]], dtype=torch.bool)
>>> torch.any(a)
tensor(True, dtype=torch.bool)
>>> a=torch.arange(0,3)
>>> a
tensor([0, 1, 2])
>>> torch.any(a)
tensor(True)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. any ( input )   → ¶",">>> a=torch.randn(4,2)<0
>>> a
tensor([[ True,  True],
        [False,  True],
        [ True,  True],
        [False, False]])
>>> torch.any(a,1)
tensor([ True,  True,  True, False])
>>> torch.any(a,0)
tensor([True, True])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. dist ( input ,  other ,  p )   → ¶",">>> x=torch.randn(4)
>>> x
tensor([-1.5393, -0.8675,  0.5916,  1.6321])
>>> y=torch.randn(4)
>>> y
tensor([ 0.0967, -1.0511,  0.6295,  0.8360])
>>> torch.dist(x,y,3.5)
tensor(1.6727)
>>> torch.dist(x,y,3)
tensor(1.6973)
>>> torch.dist(x,y,0)
tensor(4.)
>>> torch.dist(x,y,1)
tensor(2.6537)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logsumexp ( input ,  dim ,  keepdim ,  * ,  out ) ¶",">>> a=torch.randn(3,3)
>>> torch.logsumexp(a,1)
tensor([1.4907, 1.0593, 1.5696])
>>> torch.dist(torch.logsumexp(a,1),torch.log(torch.sum(torch.exp(a),1)))
tensor(1.6859e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mean ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[ 0.2294, -0.5481,  1.3288]])
>>> torch.mean(a)
tensor(0.3367)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mean ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[-0.3841,  0.6320,  0.4254, -0.7384],
        [-0.9644,  1.0131, -0.6549, -1.4279],
        [-0.2951, -1.3350, -0.7694,  0.5600],
        [ 1.0842, -0.9580,  0.3623,  0.2343]])
>>> torch.mean(a,1)
tensor([-0.0163, -0.5085, -0.4599,  0.1807])
>>> torch.mean(a,1,True)
tensor([[-0.0163],
        [-0.5085],
        [-0.4599],
        [ 0.1807]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nanmean ( input ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶",">>> x=torch.tensor([[torch.nan,1,2],[1,2,3]])
>>> x.mean()
tensor(nan)
>>> x.nanmean()
tensor(1.8000)
>>> x.mean(dim=0)
tensor([   nan, 1.5000, 2.5000])
>>> x.nanmean(dim=0)
tensor([1.0000, 1.5000, 2.5000])# If all elements in the reduced dimensions are NaN then the result is NaN
>>> torch.tensor([torch.nan]).nanmean()
tensor(nan)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. median ( input )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[ 1.5219, -1.5212,  0.2202]])
>>> torch.median(a)
tensor(0.2202)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. median ( input )   → ¶",">>> a=torch.randn(4,5)
>>> a
tensor([[ 0.2505, -0.3982, -0.9948,  0.3518, -1.3131],
        [ 0.3180, -0.6993,  1.0436,  0.0438,  0.2270],
        [-0.2751,  0.7303,  0.2192,  0.3321,  0.2488],
        [ 1.0778, -1.9510,  0.7048,  0.4742, -0.7125]])
>>> torch.median(a,1)
torch.return_types.median(values=tensor([-0.3982,  0.2270,  0.2488,  0.4742]), indices=tensor([1, 4, 4, 3]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nanmedian ( input )   → ¶",">>> a=torch.tensor([1,float('nan'),3,2])
>>> a.median()
tensor(nan)
>>> a.nanmedian()
tensor(2.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nanmedian ( input )   → ¶",">>> a=torch.tensor([[2,3,1],[float('nan'),1,float('nan')]])
>>> a
tensor([[2., 3., 1.],
        [nan, 1., nan]])
>>> a.median(0)
torch.return_types.median(values=tensor([nan, 1., nan]), indices=tensor([1, 1, 1]))
>>> a.nanmedian(0)
torch.return_types.nanmedian(values=tensor([2., 1., 1.]), indices=tensor([0, 1, 0]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mode ( input ,  dim ,  keepdim ,  * ,  out ) ¶",">>> a=torch.randint(10,(5,))
>>> a
tensor([6, 5, 1, 0, 2])
>>> b=a+(torch.randn(50,1)*5).long()
>>> torch.mode(b,0)
torch.return_types.mode(values=tensor([6, 5, 1, 0, 2]), indices=tensor([2, 2, 2, 2, 2]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. norm ( input ,  p ,  dim ,  keepdim ,  out ,  dtype ) [source] ¶",">>> importtorch
>>> a=torch.arange(9,dtype=torch.float)-4
>>> b=a.reshape((3,3))
>>> torch.norm(a)
tensor(7.7460)
>>> torch.norm(b)
tensor(7.7460)
>>> torch.norm(a,float('inf'))
tensor(4.)
>>> torch.norm(b,float('inf'))
tensor(4.)
>>> c=torch.tensor([[1,2,3],[-1,1,4]],dtype=torch.float)
>>> torch.norm(c,dim=0)
tensor([1.4142, 2.2361, 5.0000])
>>> torch.norm(c,dim=1)
tensor([3.7417, 4.2426])
>>> torch.norm(c,p=1,dim=1)
tensor([6., 6.])
>>> d=torch.arange(8,dtype=torch.float).reshape(2,2,2)
>>> torch.norm(d,dim=(1,2))
tensor([ 3.7417, 11.2250])
>>> torch.norm(d[0,:,:]),torch.norm(d[1,:,:])
(tensor(3.7417), tensor(11.2250))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nansum ( input ,  * ,  dtype )   → ¶",">>> a=torch.tensor([1.,2.,float('nan'),4.])
>>> torch.nansum(a)
tensor(7.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nansum ( input ,  * ,  dtype )   → ¶",">>> torch.nansum(torch.tensor([1.,float(""nan"")]))
1.0
>>> a=torch.tensor([[1,2],[3.,float(""nan"")]])
>>> torch.nansum(a)
tensor(6.)
>>> torch.nansum(a,dim=0)
tensor([4., 2.])
>>> torch.nansum(a,dim=1)
tensor([3., 3.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. prod ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[-0.8020,  0.5428, -1.5854]])
>>> torch.prod(a)
tensor(0.6902)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. prod ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(4,2)
>>> a
tensor([[ 0.5261, -0.3837],
        [ 1.1857, -0.2498],
        [-1.1646,  0.0705],
        [ 1.1131, -1.0629]])
>>> torch.prod(a,1)
tensor([-0.2018, -0.2962, -0.0821, -1.1831])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. quantile ( input ,  q ,  dim ,  keepdim ,  * ,  interpolation ,  out )   → ¶",">>> a=torch.randn(2,3)
>>> a
tensor([[ 0.0795, -1.2117,  0.9765],
        [ 1.1707,  0.6706,  0.4884]])
>>> q=torch.tensor([0.25,0.5,0.75])
>>> torch.quantile(a,q,dim=1,keepdim=True)
tensor([[[-0.5661],
        [ 0.5795]],        [[ 0.0795],
        [ 0.6706]],        [[ 0.5280],
        [ 0.9206]]])
>>> torch.quantile(a,q,dim=1,keepdim=True).shape
torch.Size([3, 2, 1])
>>> a=torch.arange(4.)
>>> a
tensor([0., 1., 2., 3.])
>>> torch.quantile(a,0.6,interpolation='linear')
tensor(1.8000)
>>> torch.quantile(a,0.6,interpolation='lower')
tensor(1.)
>>> torch.quantile(a,0.6,interpolation='higher')
tensor(2.)
>>> torch.quantile(a,0.6,interpolation='midpoint')
tensor(1.5000)
>>> torch.quantile(a,0.6,interpolation='nearest')
tensor(2.)
>>> torch.quantile(a,0.4,interpolation='nearest')
tensor(1.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. nanquantile ( input ,  q ,  dim ,  keepdim ,  * ,  interpolation ,  out )   → ¶",">>> t=torch.tensor([float('nan'),1,2])
>>> t.quantile(0.5)
tensor(nan)
>>> t.nanquantile(0.5)
tensor(1.5000)
>>> t=torch.tensor([[float('nan'),float('nan')],[1,2]])
>>> t
tensor([[nan, nan],
        [1., 2.]])
>>> t.nanquantile(0.5,dim=0)
tensor([1., 2.])
>>> t.nanquantile(0.5,dim=1)
tensor([   nan, 1.5000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. std ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out )   → ¶",">>> a=torch.tensor([[-0.8166,-1.3802,-0.3560]])
>>> torch.std(a,unbiased=False)
tensor(0.4188)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. std_mean ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out ) ¶",">>> a=torch.tensor([[-0.8166,-1.3802,-0.3560]])
>>> torch.std_mean(a,unbiased=False)
(tensor(0.4188), tensor(-0.8509))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sum ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(1,3)
>>> a
tensor([[ 0.1133, -0.9567,  0.2958]])
>>> torch.sum(a)
tensor(-0.5475)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sum ( input ,  * ,  dtype )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 0.0569, -0.2475,  0.0737, -0.3429],
        [-0.2993,  0.9138,  0.9337, -1.6864],
        [ 0.1132,  0.7892, -0.1003,  0.5688],
        [ 0.3637, -0.9906, -0.4752, -1.5197]])
>>> torch.sum(a,1)
tensor([-0.4598, -0.1381,  1.3708, -2.6217])
>>> b=torch.arange(4*5*6).view(4,5,6)
>>> torch.sum(b,(2,1))
tensor([  435.,  1335.,  2235.,  3135.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. unique ( input ,  sorted ,  return_inverse ,  return_counts ,  dim )   → ¶",">>> output=torch.unique(torch.tensor([1,3,2,3],dtype=torch.long))
>>> output
tensor([1, 2, 3])>>> output,inverse_indices=torch.unique(
... torch.tensor([1,3,2,3],dtype=torch.long),sorted=True,return_inverse=True)
>>> output
tensor([1, 2, 3])
>>> inverse_indices
tensor([0, 2, 1, 2])>>> output,inverse_indices=torch.unique(
... torch.tensor([[1,3],[2,3]],dtype=torch.long),sorted=True,return_inverse=True)
>>> output
tensor([1, 2, 3])
>>> inverse_indices
tensor([[0, 2],
        [1, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. unique_consecutive ( * ,  ** ) ¶",">>> x=torch.tensor([1,1,2,2,3,1,1,2])
>>> output=torch.unique_consecutive(x)
>>> output
tensor([1, 2, 3, 1, 2])>>> output,inverse_indices=torch.unique_consecutive(x,return_inverse=True)
>>> output
tensor([1, 2, 3, 1, 2])
>>> inverse_indices
tensor([0, 0, 1, 1, 2, 3, 3, 4])>>> output,counts=torch.unique_consecutive(x,return_counts=True)
>>> output
tensor([1, 2, 3, 1, 2])
>>> counts
tensor([2, 2, 1, 2, 1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. var ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out )   → ¶",">>> a=torch.tensor([[-0.8166,-1.3802,-0.3560]])
>>> torch.var(a,unbiased=False)
tensor(0.1754)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. var_mean ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out ) ¶",">>> a=torch.tensor([[-0.8166,-1.3802,-0.3560]])
>>> torch.var_mean(a,unbiased=False)
(tensor(0.1754), tensor(-0.8509))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. count_nonzero ( input ,  dim )   → ¶",">>> x=torch.zeros(3,3)
>>> x[torch.randn(3,3)>0.5]=1
>>> x
tensor([[0., 1., 1.],
        [0., 0., 0.],
        [0., 0., 1.]])
>>> torch.count_nonzero(x)
tensor(3)
>>> torch.count_nonzero(x,dim=0)
tensor([0, 1, 2])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. allclose ( input ,  other ,  rtol ,  atol ,  equal_nan )   → ¶",">>> torch.allclose(torch.tensor([10000.,1e-07]),torch.tensor([10000.1,1e-08]))
False
>>> torch.allclose(torch.tensor([10000.,1e-08]),torch.tensor([10000.1,1e-09]))
True
>>> torch.allclose(torch.tensor([1.0,float('nan')]),torch.tensor([1.0,float('nan')]))
False
>>> torch.allclose(torch.tensor([1.0,float('nan')]),torch.tensor([1.0,float('nan')]),equal_nan=True)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. argsort ( input ,  dim ,  descending ,  stable )   → ¶",">>> a=torch.randn(4,4)
>>> a
tensor([[ 0.0785,  1.5267, -0.8521,  0.4065],
        [ 0.1598,  0.0788, -0.0745, -1.2700],
        [ 1.2208,  1.0722, -0.7064,  1.2564],
        [ 0.0669, -0.2318, -0.8229, -0.9280]])>>> torch.argsort(a,dim=1)
tensor([[2, 0, 3, 1],
        [3, 2, 1, 0],
        [2, 1, 0, 3],
        [3, 2, 1, 0]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. eq ( input ,  other ,  * ,  out )   → ¶",">>> torch.eq(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[ True, False],
        [False, True]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. equal ( input ,  other )   → ¶",">>> torch.equal(torch.tensor([1,2]),torch.tensor([1,2]))
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ge ( input ,  other ,  * ,  out )   → ¶",">>> torch.ge(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[True, True], [False, True]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. gt ( input ,  other ,  * ,  out )   → ¶",">>> torch.gt(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[False, True], [False, False]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isclose ( input ,  other ,  rtol ,  atol ,  equal_nan )   → ¶",">>> torch.isclose(torch.tensor((1.,2,3)),torch.tensor((1+1e-10,3,4)))
tensor([ True, False, False])
>>> torch.isclose(torch.tensor((float('inf'),4)),torch.tensor((float('inf'),6)),rtol=.5)
tensor([True, True])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isfinite ( input )   → ¶",">>> torch.isfinite(torch.tensor([1,float('inf'),2,float('-inf'),float('nan')]))
tensor([True,  False,  True,  False,  False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isinf ( input )   → ¶",">>> torch.isinf(torch.tensor([1,float('inf'),2,float('-inf'),float('nan')]))
tensor([False,  True,  False,  True,  False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isposinf ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([-float('inf'),float('inf'),1.2])
>>> torch.isposinf(a)
tensor([False,  True, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isneginf ( input ,  * ,  out )   → ¶",">>> a=torch.tensor([-float('inf'),float('inf'),1.2])
>>> torch.isneginf(a)
tensor([ True, False, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isnan ( input )   → ¶",">>> torch.isnan(torch.tensor([1,float('nan'),2]))
tensor([False, True, False])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. isreal ( input )   → ¶",">>> torch.isreal(torch.tensor([1,1+1j,2+0j]))
tensor([True, False, True])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. kthvalue ( input ,  k ,  dim ,  keepdim ,  * ,  out ) ¶",">>> x=torch.arange(1.,6.)
>>> x
tensor([ 1.,  2.,  3.,  4.,  5.])
>>> torch.kthvalue(x,4)
torch.return_types.kthvalue(values=tensor(4.), indices=tensor(3))>>> x=torch.arange(1.,7.).resize_(2,3)
>>> x
tensor([[ 1.,  2.,  3.],
        [ 4.,  5.,  6.]])
>>> torch.kthvalue(x,2,0,True)
torch.return_types.kthvalue(values=tensor([[4., 5., 6.]]), indices=tensor([[1, 1, 1]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. le ( input ,  other ,  * ,  out )   → ¶",">>> torch.le(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[True, False], [True, True]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lt ( input ,  other ,  * ,  out )   → ¶",">>> torch.lt(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[False, False], [True, False]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. maximum ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor((1,2,-1))
>>> b=torch.tensor((3,0,4))
>>> torch.maximum(a,b)
tensor([3, 2, 4])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. minimum ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor((1,2,-1))
>>> b=torch.tensor((3,0,4))
>>> torch.minimum(a,b)
tensor([1, 0, -1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fmax ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor([9.7,float('nan'),3.1,float('nan')])
>>> b=torch.tensor([-2.2,0.5,float('nan'),float('nan')])
>>> torch.fmax(a,b)
tensor([9.7000, 0.5000, 3.1000,    nan])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fmin ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor([2.2,float('nan'),2.1,float('nan')])
>>> b=torch.tensor([-9.3,0.1,float('nan'),float('nan')])
>>> torch.fmin(a,b)
tensor([-9.3000, 0.1000, 2.1000,    nan])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ne ( input ,  other ,  * ,  out )   → ¶",">>> torch.ne(torch.tensor([[1,2],[3,4]]),torch.tensor([[1,1],[4,4]]))
tensor([[False, True], [True, False]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sort ( input ,  dim ,  descending ,  stable ,  * ,  out ) ¶",">>> x=torch.randn(3,4)
>>> sorted,indices=torch.sort(x)
>>> sorted
tensor([[-0.2162,  0.0608,  0.6719,  2.3332],
        [-0.5793,  0.0061,  0.6058,  0.9497],
        [-0.5071,  0.3343,  0.9553,  1.0960]])
>>> indices
tensor([[ 1,  0,  2,  3],
        [ 3,  1,  0,  2],
        [ 0,  3,  1,  2]])>>> sorted,indices=torch.sort(x,0)
>>> sorted
tensor([[-0.5071, -0.2162,  0.6719, -0.5793],
        [ 0.0608,  0.0061,  0.9497,  0.3343],
        [ 0.6058,  0.9553,  1.0960,  2.3332]])
>>> indices
tensor([[ 2,  0,  0,  1],
        [ 0,  1,  1,  2],
        [ 1,  2,  2,  0]])
>>> x=torch.tensor([0,1]*9)
>>> x.sort()
torch.return_types.sort(
    values=tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
    indices=tensor([ 2, 16,  4,  6, 14,  8,  0, 10, 12,  9, 17, 15, 13, 11,  7,  5,  3,  1]))
>>> x.sort(stable=True)
torch.return_types.sort(
    values=tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
    indices=tensor([ 0,  2,  4,  6,  8, 10, 12, 14, 16,  1,  3,  5,  7,  9, 11, 13, 15, 17]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. topk ( input ,  k ,  dim ,  largest ,  sorted ,  * ,  out ) ¶",">>> x=torch.arange(1.,6.)
>>> x
tensor([ 1.,  2.,  3.,  4.,  5.])
>>> torch.topk(x,3)
torch.return_types.topk(values=tensor([5., 4., 3.]), indices=tensor([4, 3, 2]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. msort ( input ,  * ,  out )   → ¶",">>> t=torch.randn(3,4)
>>> t
tensor([[-0.1321,  0.4370, -1.2631, -1.1289],
        [-2.0527, -1.1250,  0.2275,  0.3077],
        [-0.0881, -0.1259, -0.5495,  1.0284]])
>>> torch.msort(t)
tensor([[-2.0527, -1.1250, -1.2631, -1.1289],
        [-0.1321, -0.1259, -0.5495,  0.3077],
        [-0.0881,  0.4370,  0.2275,  1.0284]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. atleast_1d ( * ) [source] ¶",">>> x=torch.arange(2)
>>> x
tensor([0, 1])
>>> torch.atleast_1d(x)
tensor([0, 1])
>>> x=torch.tensor(1.)
>>> x
tensor(1.)
>>> torch.atleast_1d(x)
tensor([1.])
>>> x=torch.tensor(0.5)
>>> y=torch.tensor(1.)
>>> torch.atleast_1d((x,y))
(tensor([0.5000]), tensor([1.]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. atleast_2d ( * ) [source] ¶",">>> x=torch.tensor(1.)
>>> x
tensor(1.)
>>> torch.atleast_2d(x)
tensor([[1.]])
>>> x=torch.arange(4).view(2,2)
>>> x
tensor([[0, 1],
        [2, 3]])
>>> torch.atleast_2d(x)
tensor([[0, 1],
        [2, 3]])
>>> x=torch.tensor(0.5)
>>> y=torch.tensor(1.)
>>> torch.atleast_2d((x,y))
(tensor([[0.5000]]), tensor([[1.]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. bincount ( input ,  weights ,  minlength )   → ¶",">>> input=torch.randint(0,8,(5,),dtype=torch.int64)
>>> weights=torch.linspace(0,1,steps=5)
>>> input,weights
(tensor([4, 3, 6, 3, 4]),
 tensor([ 0.0000,  0.2500,  0.5000,  0.7500,  1.0000])>>> torch.bincount(input)
tensor([0, 0, 0, 2, 2, 0, 1])>>> input.bincount(weights)
tensor([0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 0.0000, 0.5000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. block_diag ( * ) [source] ¶",">>> importtorch
>>> A=torch.tensor([[0,1],[1,0]])
>>> B=torch.tensor([[3,4,5],[6,7,8]])
>>> C=torch.tensor(7)
>>> D=torch.tensor([1,2,3])
>>> E=torch.tensor([[4],[5],[6]])
>>> torch.block_diag(A,B,C,D,E)
tensor([[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 4, 5, 0, 0, 0, 0, 0],
        [0, 0, 6, 7, 8, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 7, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 2, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 5],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 6]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. broadcast_tensors ( * )   → [source] ¶",">>> x=torch.arange(3).view(1,3)
>>> y=torch.arange(2).view(2,1)
>>> a,b=torch.broadcast_tensors(x,y)
>>> a.size()
torch.Size([2, 3])
>>> a
tensor([[0, 1, 2],
        [0, 1, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. broadcast_to ( input ,  shape )   → ¶",">>> x=torch.tensor([1,2,3])
>>> torch.broadcast_to(x,(3,3))
tensor([[1, 2, 3],
        [1, 2, 3],
        [1, 2, 3]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. broadcast_shapes ( * )   → [source] ¶",">>> torch.broadcast_shapes((2,),(3,1),(1,1,1))
torch.Size([1, 3, 2])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. bucketize ( input ,  boundaries ,  * ,  out_int32 ,  right ,  out )   → ¶",">>> boundaries=torch.tensor([1,3,5,7,9])
>>> boundaries
tensor([1, 3, 5, 7, 9])
>>> v=torch.tensor([[3,6,9],[3,6,9]])
>>> v
tensor([[3, 6, 9],
        [3, 6, 9]])
>>> torch.bucketize(v,boundaries)
tensor([[1, 3, 4],
        [1, 3, 4]])
>>> torch.bucketize(v,boundaries,right=True)
tensor([[2, 3, 5],
        [2, 3, 5]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cartesian_prod ( * ) [source] ¶",">>> importitertools
>>> a=[1,2,3]
>>> b=[4,5]
>>> list(itertools.product(a,b))
[(1, 4), (1, 5), (2, 4), (2, 5), (3, 4), (3, 5)]
>>> tensor_a=torch.tensor(a)
>>> tensor_b=torch.tensor(b)
>>> torch.cartesian_prod(tensor_a,tensor_b)
tensor([[1, 4],
        [1, 5],
        [2, 4],
        [2, 5],
        [3, 4],
        [3, 5]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. combinations ( input ,  r ,  with_replacement )   → ¶",">>> a=[1,2,3]
>>> list(itertools.combinations(a,r=2))
[(1, 2), (1, 3), (2, 3)]
>>> list(itertools.combinations(a,r=3))
[(1, 2, 3)]
>>> list(itertools.combinations_with_replacement(a,r=2))
[(1, 1), (1, 2), (1, 3), (2, 2), (2, 3), (3, 3)]
>>> tensor_a=torch.tensor(a)
>>> torch.combinations(tensor_a)
tensor([[1, 2],
        [1, 3],
        [2, 3]])
>>> torch.combinations(tensor_a,r=3)
tensor([[1, 2, 3]])
>>> torch.combinations(tensor_a,with_replacement=True)
tensor([[1, 1],
        [1, 2],
        [1, 3],
        [2, 2],
        [2, 3],
        [3, 3]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. corrcoef ( input )   → ¶",">>> x=torch.tensor([[0,1,2],[2,1,0]])
>>> torch.corrcoef(x)
tensor([[ 1., -1.],
        [-1.,  1.]])
>>> x=torch.randn(2,4)
>>> x
tensor([[-0.2678, -0.0908, -0.3766,  0.2780],
        [-0.5812,  0.1535,  0.2387,  0.2350]])
>>> torch.corrcoef(x)
tensor([[1.0000, 0.3582],
        [0.3582, 1.0000]])
>>> torch.corrcoef(x[0])
tensor(1.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cross ( input ,  other ,  dim ,  * ,  out )   → ¶",">>> a=torch.randn(4,3)
>>> a
tensor([[-0.3956,  1.1455,  1.6895],
        [-0.5849,  1.3672,  0.3599],
        [-1.1626,  0.7180, -0.0521],
        [-0.1339,  0.9902, -2.0225]])
>>> b=torch.randn(4,3)
>>> b
tensor([[-0.0257, -1.4725, -1.2251],
        [-1.1479, -0.7005, -1.9757],
        [-1.3904,  0.3726, -1.1836],
        [-0.9688, -0.7153,  0.2159]])
>>> torch.cross(a,b,dim=1)
tensor([[ 1.0844, -0.5281,  0.6120],
        [-2.4490, -1.5687,  1.9792],
        [-0.8304, -1.3037,  0.5650],
        [-1.2329,  1.9883,  1.0551]])
>>> torch.cross(a,b)
tensor([[ 1.0844, -0.5281,  0.6120],
        [-2.4490, -1.5687,  1.9792],
        [-0.8304, -1.3037,  0.5650],
        [-1.2329,  1.9883,  1.0551]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cummax ( input ,  dim ,  * ,  out ) ¶",">>> a=torch.randn(10)
>>> a
tensor([-0.3449, -1.5447,  0.0685, -1.5104, -1.1706,  0.2259,  1.4696, -1.3284,
     1.9946, -0.8209])
>>> torch.cummax(a,dim=0)
torch.return_types.cummax(
    values=tensor([-0.3449, -0.3449,  0.0685,  0.0685,  0.0685,  0.2259,  1.4696,  1.4696,
     1.9946,  1.9946]),
    indices=tensor([0, 0, 2, 2, 2, 5, 6, 6, 8, 8]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cummin ( input ,  dim ,  * ,  out ) ¶",">>> a=torch.randn(10)
>>> a
tensor([-0.2284, -0.6628,  0.0975,  0.2680, -1.3298, -0.4220, -0.3885,  1.1762,
     0.9165,  1.6684])
>>> torch.cummin(a,dim=0)
torch.return_types.cummin(
    values=tensor([-0.2284, -0.6628, -0.6628, -0.6628, -1.3298, -1.3298, -1.3298, -1.3298,
    -1.3298, -1.3298]),
    indices=tensor([0, 1, 1, 1, 4, 4, 4, 4, 4, 4]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cumprod ( input ,  dim ,  * ,  dtype ,  out )   → ¶",">>> a=torch.randn(10)
>>> a
tensor([ 0.6001,  0.2069, -0.1919,  0.9792,  0.6727,  1.0062,  0.4126,
        -0.2129, -0.4206,  0.1968])
>>> torch.cumprod(a,dim=0)
tensor([ 0.6001,  0.1241, -0.0238, -0.0233, -0.0157, -0.0158, -0.0065,
         0.0014, -0.0006, -0.0001])>>> a[5]=0.0
>>> torch.cumprod(a,dim=0)
tensor([ 0.6001,  0.1241, -0.0238, -0.0233, -0.0157, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0000])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cumsum ( input ,  dim ,  * ,  dtype ,  out )   → ¶",">>> a=torch.randn(10)
>>> a
tensor([-0.8286, -0.4890,  0.5155,  0.8443,  0.1865, -0.1752, -2.0595,
         0.1850, -1.1571, -0.4243])
>>> torch.cumsum(a,dim=0)
tensor([-0.8286, -1.3175, -0.8020,  0.0423,  0.2289,  0.0537, -2.0058,
        -1.8209, -2.9780, -3.4022])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diag ( input ,  diagonal ,  * ,  out )   → ¶",">>> a=torch.randn(3)
>>> a
tensor([ 0.5950,-0.0872, 2.3298])
>>> torch.diag(a)
tensor([[ 0.5950, 0.0000, 0.0000],
        [ 0.0000,-0.0872, 0.0000],
        [ 0.0000, 0.0000, 2.3298]])
>>> torch.diag(a,1)
tensor([[ 0.0000, 0.5950, 0.0000, 0.0000],
        [ 0.0000, 0.0000,-0.0872, 0.0000],
        [ 0.0000, 0.0000, 0.0000, 2.3298],
        [ 0.0000, 0.0000, 0.0000, 0.0000]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diag ( input ,  diagonal ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a
tensor([[-0.4264, 0.0255,-0.1064],
        [ 0.8795,-0.2429, 0.1374],
        [ 0.1029,-0.6482,-1.6300]])
>>> torch.diag(a,0)
tensor([-0.4264,-0.2429,-1.6300])
>>> torch.diag(a,1)
tensor([ 0.0255, 0.1374])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diag_embed ( input ,  offset ,  dim1 ,  dim2 )   → ¶",">>> a=torch.randn(2,3)
>>> torch.diag_embed(a)
tensor([[[ 1.5410,  0.0000,  0.0000],
         [ 0.0000, -0.2934,  0.0000],
         [ 0.0000,  0.0000, -2.1788]],        [[ 0.5684,  0.0000,  0.0000],
         [ 0.0000, -1.0845,  0.0000],
         [ 0.0000,  0.0000, -1.3986]]])>>> torch.diag_embed(a,offset=1,dim1=0,dim2=2)
tensor([[[ 0.0000,  1.5410,  0.0000,  0.0000],
         [ 0.0000,  0.5684,  0.0000,  0.0000]],        [[ 0.0000,  0.0000, -0.2934,  0.0000],
         [ 0.0000,  0.0000, -1.0845,  0.0000]],        [[ 0.0000,  0.0000,  0.0000, -2.1788],
         [ 0.0000,  0.0000,  0.0000, -1.3986]],        [[ 0.0000,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  0.0000]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diagflat ( input ,  offset )   → ¶",">>> a=torch.randn(3)
>>> a
tensor([-0.2956, -0.9068,  0.1695])
>>> torch.diagflat(a)
tensor([[-0.2956,  0.0000,  0.0000],
        [ 0.0000, -0.9068,  0.0000],
        [ 0.0000,  0.0000,  0.1695]])
>>> torch.diagflat(a,1)
tensor([[ 0.0000, -0.2956,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.9068,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.1695],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])>>> a=torch.randn(2,2)
>>> a
tensor([[ 0.2094, -0.3018],
        [-0.1516,  1.9342]])
>>> torch.diagflat(a)
tensor([[ 0.2094,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3018,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.1516,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  1.9342]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diagonal ( input ,  offset ,  dim1 ,  dim2 )   → ¶",">>> a=torch.randn(3,3)
>>> a
tensor([[-1.0854,  1.1431, -0.1752],
        [ 0.8536, -0.0905,  0.0360],
        [ 0.6927, -0.3735, -0.4945]])>>> torch.diagonal(a,0)
tensor([-1.0854, -0.0905, -0.4945])>>> torch.diagonal(a,1)
tensor([ 1.1431,  0.0360])>>> x=torch.randn(2,5,4,2)
>>> torch.diagonal(x,offset=-1,dim1=1,dim2=2)
tensor([[[-1.2631,  0.3755, -1.5977, -1.8172],
         [-1.1065,  1.0401, -0.2235, -0.7938]],        [[-1.7325, -0.3081,  0.6166,  0.2335],
         [ 1.0500,  0.7336, -0.3836, -1.1015]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. diff ( input ,  n ,  dim ,  prepend ,  append )   → ¶",">>> a=torch.tensor([1,3,2])
>>> torch.diff(a)
tensor([ 2, -1])
>>> b=torch.tensor([4,5])
>>> torch.diff(a,append=b)
tensor([ 2, -1,  2,  1])
>>> c=torch.tensor([[1,2,3],[3,4,5]])
>>> torch.diff(c,dim=0)
tensor([[2, 2, 2]])
>>> torch.diff(c,dim=1)
tensor([[1, 1],
        [1, 1]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. einsum ( equation ,  * )   → [source] ¶",">>> # trace
>>> torch.einsum('ii',torch.randn(4,4))
tensor(-1.2104)>>> # diagonal
>>> torch.einsum('ii->i',torch.randn(4,4))
tensor([-0.1034,  0.7952, -0.2433,  0.4545])>>> # outer product
>>> x=torch.randn(5)
>>> y=torch.randn(4)
>>> torch.einsum('i,j->ij',x,y)
tensor([[ 0.1156, -0.2897, -0.3918,  0.4963],
        [-0.3744,  0.9381,  1.2685, -1.6070],
        [ 0.7208, -1.8058, -2.4419,  3.0936],
        [ 0.1713, -0.4291, -0.5802,  0.7350],
        [ 0.5704, -1.4290, -1.9323,  2.4480]])>>> # batch matrix multiplication
>>> As=torch.randn(3,2,5)
>>> Bs=torch.randn(3,5,4)
>>> torch.einsum('bij,bjk->bik',As,Bs)
tensor([[[-1.0564, -1.5904,  3.2023,  3.1271],
        [-1.6706, -0.8097, -0.8025, -2.1183]],        [[ 4.2239,  0.3107, -0.5756, -0.2354],
        [-1.4558, -0.3460,  1.5087, -0.8530]],        [[ 2.8153,  1.8787, -4.3839, -1.2112],
        [ 0.3728, -2.1131,  0.0921,  0.8305]]])>>> # with sublist format and ellipsis
>>> torch.einsum(As,[...,0,1],Bs,[...,1,2],[...,0,2])
tensor([[[-1.0564, -1.5904,  3.2023,  3.1271],
        [-1.6706, -0.8097, -0.8025, -2.1183]],        [[ 4.2239,  0.3107, -0.5756, -0.2354],
        [-1.4558, -0.3460,  1.5087, -0.8530]],        [[ 2.8153,  1.8787, -4.3839, -1.2112],
        [ 0.3728, -2.1131,  0.0921,  0.8305]]])>>> # batch permute
>>> A=torch.randn(2,3,4,5)
>>> torch.einsum('...ij->...ji',A).shape
torch.Size([2, 3, 5, 4])>>> # equivalent to torch.nn.functional.bilinear
>>> A=torch.randn(3,5,4)
>>> l=torch.randn(2,5)
>>> r=torch.randn(2,4)
>>> torch.einsum('bn,anm,bm->ba',l,A,r)
tensor([[-0.3430, -5.2405,  0.4494],
        [ 0.3311,  5.5201, -3.0356]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. flatten ( input ,  start_dim ,  end_dim )   → ¶",">>> t=torch.tensor([[[1,2],
... [3,4]],
... [[5,6],
... [7,8]]])
>>> torch.flatten(t)
tensor([1, 2, 3, 4, 5, 6, 7, 8])
>>> torch.flatten(t,start_dim=1)
tensor([[1, 2, 3, 4],
        [5, 6, 7, 8]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. flip ( input ,  dims )   → ¶",">>> x=torch.arange(8).view(2,2,2)
>>> x
tensor([[[ 0,  1],
         [ 2,  3]],        [[ 4,  5],
         [ 6,  7]]])
>>> torch.flip(x,[0,1])
tensor([[[ 6,  7],
         [ 4,  5]],        [[ 2,  3],
         [ 0,  1]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. fliplr ( input )   → ¶",">>> x=torch.arange(4).view(2,2)
>>> x
tensor([[0, 1],
        [2, 3]])
>>> torch.fliplr(x)
tensor([[1, 0],
        [3, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. flipud ( input )   → ¶",">>> x=torch.arange(4).view(2,2)
>>> x
tensor([[0, 1],
        [2, 3]])
>>> torch.flipud(x)
tensor([[2, 3],
        [0, 1]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. kron ( input ,  other ,  * ,  out )   → ¶",">>> mat1=torch.eye(2)
>>> mat2=torch.ones(2,2)
>>> torch.kron(mat1,mat2)
tensor([[1., 1., 0., 0.],
        [1., 1., 0., 0.],
        [0., 0., 1., 1.],
        [0., 0., 1., 1.]])>>> mat1=torch.eye(2)
>>> mat2=torch.arange(1,5).reshape(2,2)
>>> torch.kron(mat1,mat2)
tensor([[1., 2., 0., 0.],
        [3., 4., 0., 0.],
        [0., 0., 1., 2.],
        [0., 0., 3., 4.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. rot90 ( input ,  k ,  dims )   → ¶",">>> x=torch.arange(4).view(2,2)
>>> x
tensor([[0, 1],
        [2, 3]])
>>> torch.rot90(x,1,[0,1])
tensor([[1, 3],
        [0, 2]])>>> x=torch.arange(8).view(2,2,2)
>>> x
tensor([[[0, 1],
         [2, 3]],        [[4, 5],
         [6, 7]]])
>>> torch.rot90(x,1,[1,2])
tensor([[[1, 3],
         [0, 2]],        [[5, 7],
         [4, 6]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. gcd ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor([5,10,15])
>>> b=torch.tensor([3,4,5])
>>> torch.gcd(a,b)
tensor([1, 2, 5])
>>> c=torch.tensor([3])
>>> torch.gcd(a,c)
tensor([1, 1, 3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. histc ( input ,  bins ,  min ,  max ,  * ,  out )   → ¶",">>> torch.histc(torch.tensor([1.,2,1]),bins=4,min=0,max=3)
tensor([ 0.,  2.,  1.,  0.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. histogram ( input ,  bins ,  * ,  range ,  weight ,  density ,  out ) ¶",">>> torch.histogram(torch.tensor([1.,2,1]),bins=4,range=(0.,3.),weight=torch.tensor([1.,2.,4.]))
(tensor([ 0.,  5.,  2.,  0.]), tensor([0., 0.75, 1.5, 2.25, 3.]))
>>> torch.histogram(torch.tensor([1.,2,1]),bins=4,range=(0.,3.),weight=torch.tensor([1.,2.,4.]),density=True)
(tensor([ 0.,  0.9524,  0.3810,  0.]), tensor([0., 0.75, 1.5, 2.25, 3.]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. meshgrid ( * ,  indexing ) [source] ¶",">>> x=torch.tensor([1,2,3])
>>> y=torch.tensor([4,5,6])Observe the element-wise pairings across the grid, (1, 4),
(1, 5), ..., (3, 6). This is the same thing as the
cartesian product.
>>> grid_x,grid_y=torch.meshgrid(x,y,indexing='ij')
>>> grid_x
tensor([[1, 1, 1],
        [2, 2, 2],
        [3, 3, 3]])
>>> grid_y
tensor([[4, 5, 6],
        [4, 5, 6],
        [4, 5, 6]])This correspondence can be seen when these grids are
stacked properly.
>>> torch.equal(torch.cat(tuple(torch.dstack([grid_x,grid_y]))),
... torch.cartesian_prod(x,y))
True`torch.meshgrid` is commonly used to produce a grid for
plotting.
>>> importmatplotlib.pyplotasplt
>>> xs=torch.linspace(-5,5,steps=100)
>>> ys=torch.linspace(-5,5,steps=100)
>>> x,y=torch.meshgrid(xs,ys,indexing='xy')
>>> z=torch.sin(torch.sqrt(x*x+y*y))
>>> ax=plt.axes(projection='3d')
>>> ax.plot_surface(x.numpy(),y.numpy(),z.numpy())
>>> plt.show()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lcm ( input ,  other ,  * ,  out )   → ¶",">>> a=torch.tensor([5,10,15])
>>> b=torch.tensor([3,4,5])
>>> torch.lcm(a,b)
tensor([15, 20, 15])
>>> c=torch.tensor([3])
>>> torch.lcm(a,c)
tensor([15, 30, 15])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logcumsumexp ( input ,  dim ,  * ,  out )   → ¶",">>> a=torch.randn(10)
>>> torch.logcumsumexp(a,dim=0)
tensor([-0.42296738, -0.04462666,  0.86278635,  0.94622083,  1.05277811,
         1.39202815,  1.83525007,  1.84492621,  2.06084887,  2.06844475]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. ravel ( input )   → ¶",">>> t=torch.tensor([[[1,2],
... [3,4]],
... [[5,6],
... [7,8]]])
>>> torch.ravel(t)
tensor([1, 2, 3, 4, 5, 6, 7, 8])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. renorm ( input ,  p ,  dim ,  maxnorm ,  * ,  out )   → ¶",">>> x=torch.ones(3,3)
>>> x[1].fill_(2)
tensor([ 2.,  2.,  2.])
>>> x[2].fill_(3)
tensor([ 3.,  3.,  3.])
>>> x
tensor([[ 1.,  1.,  1.],
        [ 2.,  2.,  2.],
        [ 3.,  3.,  3.]])
>>> torch.renorm(x,1,0,5)
tensor([[ 1.0000,  1.0000,  1.0000],
        [ 1.6667,  1.6667,  1.6667],
        [ 1.6667,  1.6667,  1.6667]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. repeat_interleave ( input ,  repeats ,  dim ,  * ,  output_size )   → ¶",">>> x=torch.tensor([1,2,3])
>>> x.repeat_interleave(2)
tensor([1, 1, 2, 2, 3, 3])
>>> y=torch.tensor([[1,2],[3,4]])
>>> torch.repeat_interleave(y,2)
tensor([1, 1, 2, 2, 3, 3, 4, 4])
>>> torch.repeat_interleave(y,3,dim=1)
tensor([[1, 1, 1, 2, 2, 2],
        [3, 3, 3, 4, 4, 4]])
>>> torch.repeat_interleave(y,torch.tensor([1,2]),dim=0)
tensor([[1, 2],
        [3, 4],
        [3, 4]])
>>> torch.repeat_interleave(y,torch.tensor([1,2]),dim=0,output_size=3)
tensor([[1, 2],
        [3, 4],
        [3, 4]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. roll ( input ,  shifts ,  dims )   → ¶",">>> x=torch.tensor([1,2,3,4,5,6,7,8]).view(4,2)
>>> x
tensor([[1, 2],
        [3, 4],
        [5, 6],
        [7, 8]])
>>> torch.roll(x,1)
tensor([[8, 1],
        [2, 3],
        [4, 5],
        [6, 7]])
>>> torch.roll(x,1,0)
tensor([[7, 8],
        [1, 2],
        [3, 4],
        [5, 6]])
>>> torch.roll(x,-1,0)
tensor([[3, 4],
        [5, 6],
        [7, 8],
        [1, 2]])
>>> torch.roll(x,shifts=(2,1),dims=(0,1))
tensor([[6, 5],
        [8, 7],
        [2, 1],
        [4, 3]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. searchsorted ( sorted_sequence ,  values ,  * ,  out_int32 ,  right ,  side ,  out ,  sorter )   → ¶",">>> sorted_sequence=torch.tensor([[1,3,5,7,9],[2,4,6,8,10]])
>>> sorted_sequence
tensor([[ 1,  3,  5,  7,  9],
        [ 2,  4,  6,  8, 10]])
>>> values=torch.tensor([[3,6,9],[3,6,9]])
>>> values
tensor([[3, 6, 9],
        [3, 6, 9]])
>>> torch.searchsorted(sorted_sequence,values)
tensor([[1, 3, 4],
        [1, 2, 4]])
>>> torch.searchsorted(sorted_sequence,values,side='right')
tensor([[2, 3, 5],
        [1, 3, 4]])>>> sorted_sequence_1d=torch.tensor([1,3,5,7,9])
>>> sorted_sequence_1d
tensor([1, 3, 5, 7, 9])
>>> torch.searchsorted(sorted_sequence_1d,values)
tensor([[1, 3, 4],
        [1, 3, 4]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tensordot ( a ,  b ,  dims ,  out ) [source] ¶",">>> a=torch.arange(60.).reshape(3,4,5)
>>> b=torch.arange(24.).reshape(4,3,2)
>>> torch.tensordot(a,b,dims=([1,0],[0,1]))
tensor([[4400., 4730.],
        [4532., 4874.],
        [4664., 5018.],
        [4796., 5162.],
        [4928., 5306.]])>>> a=torch.randn(3,4,5,device='cuda')
>>> b=torch.randn(4,5,6,device='cuda')
>>> c=torch.tensordot(a,b,dims=2).cpu()
tensor([[ 8.3504, -2.5436,  6.2922,  2.7556, -1.0732,  3.2741],
        [ 3.3161,  0.0704,  5.0187, -0.4079, -4.3126,  4.8744],
        [ 0.8223,  3.9445,  3.2168, -0.2400,  3.4117,  1.7780]])>>> a=torch.randn(3,5,4,6)
>>> b=torch.randn(6,4,5,3)
>>> torch.tensordot(a,b,dims=([2,1,3],[1,2,0]))
tensor([[  7.7193,  -2.4867, -10.3204],
        [  1.5513, -14.4737,  -6.5113],
        [ -0.2850,   4.2573,  -3.5997]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. trace ( input )   → ¶",">>> x=torch.arange(1.,10.).view(3,3)
>>> x
tensor([[ 1.,  2.,  3.],
        [ 4.,  5.,  6.],
        [ 7.,  8.,  9.]])
>>> torch.trace(x)
tensor(15.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tril ( input ,  diagonal ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a
tensor([[-1.0813, -0.8619,  0.7105],
        [ 0.0935,  0.1380,  2.2112],
        [-0.3409, -0.9828,  0.0289]])
>>> torch.tril(a)
tensor([[-1.0813,  0.0000,  0.0000],
        [ 0.0935,  0.1380,  0.0000],
        [-0.3409, -0.9828,  0.0289]])>>> b=torch.randn(4,6)
>>> b
tensor([[ 1.2219,  0.5653, -0.2521, -0.2345,  1.2544,  0.3461],
        [ 0.4785, -0.4477,  0.6049,  0.6368,  0.8775,  0.7145],
        [ 1.1502,  3.2716, -1.1243, -0.5413,  0.3615,  0.6864],
        [-0.0614, -0.7344, -1.3164, -0.7648, -1.4024,  0.0978]])
>>> torch.tril(b,diagonal=1)
tensor([[ 1.2219,  0.5653,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.4785, -0.4477,  0.6049,  0.0000,  0.0000,  0.0000],
        [ 1.1502,  3.2716, -1.1243, -0.5413,  0.0000,  0.0000],
        [-0.0614, -0.7344, -1.3164, -0.7648, -1.4024,  0.0000]])
>>> torch.tril(b,diagonal=-1)
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.4785,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 1.1502,  3.2716,  0.0000,  0.0000,  0.0000,  0.0000],
        [-0.0614, -0.7344, -1.3164,  0.0000,  0.0000,  0.0000]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. tril_indices ( row ,  col ,  offset ,  * ,  dtype ,  device ,  layout )   → ¶",">>> a=torch.tril_indices(3,3)
>>> a
tensor([[0, 1, 1, 2, 2, 2],
        [0, 0, 1, 0, 1, 2]])>>> a=torch.tril_indices(4,3,-1)
>>> a
tensor([[1, 2, 2, 3, 3, 3],
        [0, 0, 1, 0, 1, 2]])>>> a=torch.tril_indices(4,3,1)
>>> a
tensor([[0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3],
        [0, 1, 0, 1, 2, 0, 1, 2, 0, 1, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. triu ( input ,  diagonal ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a
tensor([[ 0.2309,  0.5207,  2.0049],
        [ 0.2072, -1.0680,  0.6602],
        [ 0.3480, -0.5211, -0.4573]])
>>> torch.triu(a)
tensor([[ 0.2309,  0.5207,  2.0049],
        [ 0.0000, -1.0680,  0.6602],
        [ 0.0000,  0.0000, -0.4573]])
>>> torch.triu(a,diagonal=1)
tensor([[ 0.0000,  0.5207,  2.0049],
        [ 0.0000,  0.0000,  0.6602],
        [ 0.0000,  0.0000,  0.0000]])
>>> torch.triu(a,diagonal=-1)
tensor([[ 0.2309,  0.5207,  2.0049],
        [ 0.2072, -1.0680,  0.6602],
        [ 0.0000, -0.5211, -0.4573]])>>> b=torch.randn(4,6)
>>> b
tensor([[ 0.5876, -0.0794, -1.8373,  0.6654,  0.2604,  1.5235],
        [-0.2447,  0.9556, -1.2919,  1.3378, -0.1768, -1.0857],
        [ 0.4333,  0.3146,  0.6576, -1.0432,  0.9348, -0.4410],
        [-0.9888,  1.0679, -1.3337, -1.6556,  0.4798,  0.2830]])
>>> torch.triu(b,diagonal=1)
tensor([[ 0.0000, -0.0794, -1.8373,  0.6654,  0.2604,  1.5235],
        [ 0.0000,  0.0000, -1.2919,  1.3378, -0.1768, -1.0857],
        [ 0.0000,  0.0000,  0.0000, -1.0432,  0.9348, -0.4410],
        [ 0.0000,  0.0000,  0.0000,  0.0000,  0.4798,  0.2830]])
>>> torch.triu(b,diagonal=-1)
tensor([[ 0.5876, -0.0794, -1.8373,  0.6654,  0.2604,  1.5235],
        [-0.2447,  0.9556, -1.2919,  1.3378, -0.1768, -1.0857],
        [ 0.0000,  0.3146,  0.6576, -1.0432,  0.9348, -0.4410],
        [ 0.0000,  0.0000, -1.3337, -1.6556,  0.4798,  0.2830]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. triu_indices ( row ,  col ,  offset ,  * ,  dtype ,  device ,  layout )   → ¶",">>> a=torch.triu_indices(3,3)
>>> a
tensor([[0, 0, 0, 1, 1, 2],
        [0, 1, 2, 1, 2, 2]])>>> a=torch.triu_indices(4,3,-1)
>>> a
tensor([[0, 0, 0, 1, 1, 1, 2, 2, 3],
        [0, 1, 2, 0, 1, 2, 1, 2, 2]])>>> a=torch.triu_indices(4,3,1)
>>> a
tensor([[0, 0, 1],
        [1, 2, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. vander ( x ,  N ,  increasing )   → ¶",">>> x=torch.tensor([1,2,3,5])
>>> torch.vander(x)
tensor([[  1,   1,   1,   1],
        [  8,   4,   2,   1],
        [ 27,   9,   3,   1],
        [125,  25,   5,   1]])
>>> torch.vander(x,N=3)
tensor([[ 1,  1,  1],
        [ 4,  2,  1],
        [ 9,  3,  1],
        [25,  5,  1]])
>>> torch.vander(x,N=3,increasing=True)
tensor([[ 1,  1,  1],
        [ 1,  2,  4],
        [ 1,  3,  9],
        [ 1,  5, 25]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. view_as_real ( input )   → ¶",">>> x=torch.randn(4,dtype=torch.cfloat)
>>> x
tensor([(0.4737-0.3839j), (-0.2098-0.6699j), (0.3470-0.9451j), (-0.5174-1.3136j)])
>>> torch.view_as_real(x)
tensor([[ 0.4737, -0.3839],
        [-0.2098, -0.6699],
        [ 0.3470, -0.9451],
        [-0.5174, -1.3136]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. view_as_complex ( input )   → ¶",">>> x=torch.randn(4,2)
>>> x
tensor([[ 1.6116, -0.5772],
        [-1.4606, -0.9120],
        [ 0.0786, -1.7497],
        [-0.6561, -1.6623]])
>>> torch.view_as_complex(x)
tensor([(1.6116-0.5772j), (-1.4606-0.9120j), (0.0786-1.7497j), (-0.6561-1.6623j)])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. resolve_conj ( input )   → ¶",">>> x=torch.tensor([-1+1j,-2+2j,3-3j])
>>> y=x.conj()
>>> y.is_conj()
True
>>> z=y.resolve_conj()
>>> z
tensor([-1 - 1j, -2 - 2j, 3 + 3j])
>>> z.is_conj()
False
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. resolve_neg ( input )   → ¶",">>> x=torch.tensor([-1+1j,-2+2j,3-3j])
>>> y=x.conj()
>>> z=y.imag
>>> z.is_neg()
True
>>> out=y.resolve_neg()
>>> out
tensor([-1, -2, -3])
>>> out.is_neg()
False
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addbmm ( input ,  batch1 ,  batch2 ,  * ,  beta ,  alpha ,  out )   → ¶",">>> M=torch.randn(3,5)
>>> batch1=torch.randn(10,3,4)
>>> batch2=torch.randn(10,4,5)
>>> torch.addbmm(M,batch1,batch2)
tensor([[  6.6311,   0.0503,   6.9768, -12.0362,  -2.1653],
        [ -4.8185,  -1.4255,  -6.6760,   8.9453,   2.5743],
        [ -3.8202,   4.3691,   1.0943,  -1.1109,   5.4730]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addmm ( input ,  mat1 ,  mat2 ,  * ,  beta ,  alpha ,  out )   → ¶",">>> M=torch.randn(2,3)
>>> mat1=torch.randn(2,3)
>>> mat2=torch.randn(3,3)
>>> torch.addmm(M,mat1,mat2)
tensor([[-4.8716,  1.4671, -1.3746],
        [ 0.7573, -3.9555, -2.8681]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addmv ( input ,  mat ,  vec ,  * ,  beta ,  alpha ,  out )   → ¶",">>> M=torch.randn(2)
>>> mat=torch.randn(2,3)
>>> vec=torch.randn(3)
>>> torch.addmv(M,mat,vec)
tensor([-0.3768, -5.5565])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. addr ( input ,  vec1 ,  vec2 ,  * ,  beta ,  alpha ,  out )   → ¶",">>> vec1=torch.arange(1.,4.)
>>> vec2=torch.arange(1.,3.)
>>> M=torch.zeros(3,2)
>>> torch.addr(M,vec1,vec2)
tensor([[ 1.,  2.],
        [ 2.,  4.],
        [ 3.,  6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. baddbmm ( input ,  batch1 ,  batch2 ,  * ,  beta ,  alpha ,  out )   → ¶",">>> M=torch.randn(10,3,5)
>>> batch1=torch.randn(10,3,4)
>>> batch2=torch.randn(10,4,5)
>>> torch.baddbmm(M,batch1,batch2).size()
torch.Size([10, 3, 5])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. bmm ( input ,  mat2 ,  * ,  out )   → ¶",">>> input=torch.randn(10,3,4)
>>> mat2=torch.randn(10,4,5)
>>> res=torch.bmm(input,mat2)
>>> res.size()
torch.Size([10, 3, 5])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. chain_matmul ( * ,  out ) [source] ¶",">>> a=torch.randn(3,4)
>>> b=torch.randn(4,5)
>>> c=torch.randn(5,6)
>>> d=torch.randn(6,7)
>>> # will raise a deprecation warning
>>> torch.chain_matmul(a,b,c,d)
tensor([[ -2.3375,  -3.9790,  -4.1119,  -6.6577,   9.5609, -11.5095,  -3.2614],
        [ 21.4038,   3.3378,  -8.4982,  -5.2457, -10.2561,  -2.4684,   2.7163],
        [ -0.9647,  -5.8917,  -2.3213,  -5.2284,  12.8615, -12.2816,  -2.5095]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cholesky ( input ,  upper ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a=a@a.mT+1e-3# make symmetric positive-definite
>>> l=torch.cholesky(a)
>>> a
tensor([[ 2.4112, -0.7486,  1.4551],
        [-0.7486,  1.3544,  0.1294],
        [ 1.4551,  0.1294,  1.6724]])
>>> l
tensor([[ 1.5528,  0.0000,  0.0000],
        [-0.4821,  1.0592,  0.0000],
        [ 0.9371,  0.5487,  0.7023]])
>>> l@l.mT
tensor([[ 2.4112, -0.7486,  1.4551],
        [-0.7486,  1.3544,  0.1294],
        [ 1.4551,  0.1294,  1.6724]])
>>> a=torch.randn(3,2,2)# Example for batched input
>>> a=a@a.mT+1e-03# make symmetric positive-definite
>>> l=torch.cholesky(a)
>>> z=l@l.mT
>>> torch.dist(z,a)
tensor(2.3842e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cholesky_inverse ( input ,  upper ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a=torch.mm(a,a.t())+1e-05*torch.eye(3)# make symmetric positive definite
>>> u=torch.linalg.cholesky(a)
>>> a
tensor([[  0.9935,  -0.6353,   1.5806],
        [ -0.6353,   0.8769,  -1.7183],
        [  1.5806,  -1.7183,  10.6618]])
>>> torch.cholesky_inverse(u)
tensor([[ 1.9314,  1.2251, -0.0889],
        [ 1.2251,  2.4439,  0.2122],
        [-0.0889,  0.2122,  0.1412]])
>>> a.inverse()
tensor([[ 1.9314,  1.2251, -0.0889],
        [ 1.2251,  2.4439,  0.2122],
        [-0.0889,  0.2122,  0.1412]])
>>> a=torch.randn(3,2,2)# Example for batched input
>>> a=a@a.mT+1e-03# make symmetric positive-definite
>>> l=torch.linalg.cholesky(a)
>>> z=l@l.mT
>>> torch.dist(z,a)
tensor(3.5894e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cholesky_solve ( input ,  input2 ,  upper ,  * ,  out )   → ¶",">>> a=torch.randn(3,3)
>>> a=torch.mm(a,a.t())# make symmetric positive definite
>>> u=torch.linalg.cholesky(a)
>>> a
tensor([[ 0.7747, -1.9549,  1.3086],
        [-1.9549,  6.7546, -5.4114],
        [ 1.3086, -5.4114,  4.8733]])
>>> b=torch.randn(3,2)
>>> b
tensor([[-0.6355,  0.9891],
        [ 0.1974,  1.4706],
        [-0.4115, -0.6225]])
>>> torch.cholesky_solve(b,u)
tensor([[ -8.1625,  19.6097],
        [ -5.8398,  14.2387],
        [ -4.3771,  10.4173]])
>>> torch.mm(a.inverse(),b)
tensor([[ -8.1626,  19.6097],
        [ -5.8398,  14.2387],
        [ -4.3771,  10.4173]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. dot ( input ,  other ,  * ,  out )   → ¶",">>> torch.dot(torch.tensor([2,3]),torch.tensor([2,1]))
tensor(7)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. outer ( input ,  vec2 ,  * ,  out )   → ¶",">>> v1=torch.arange(1.,5.)
>>> v2=torch.arange(1.,4.)
>>> torch.outer(v1,v2)
tensor([[  1.,   2.,   3.],
        [  2.,   4.,   6.],
        [  3.,   6.,   9.],
        [  4.,   8.,  12.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. inner ( input ,  other ,  * ,  out )   → ¶","# Dot product
>>>torch.inner(torch.tensor([1,2,3]),torch.tensor([0,2,1]))
tensor(7)# Multidimensional input tensors
>>>a=torch.randn(2,3)
>>>a
tensor([[0.8173,1.0874,1.1784],[0.3279,0.1234,2.7894]])
>>>b=torch.randn(2,4,3)
>>>b
tensor([[[-0.4682,-0.7159,0.1506],[0.4034,-0.3657,1.0387],[0.9892,-0.6684,0.1774],[0.9482,1.3261,0.3917]],[[0.4537,0.7493,1.1724],[0.2291,0.5749,-0.2267],[-0.7920,0.3607,-0.3701],[1.3666,-0.5850,-1.7242]]])
>>>torch.inner(a,b)
tensor([[[-0.9837,1.1560,0.2907,2.6785],[2.5671,0.5452,-0.6912,-1.5509]],[[0.1782,2.9843,0.7366,1.5672],[3.5115,-0.4864,-1.2476,-4.4337]]])# Scalar input
>>>torch.inner(a,torch.tensor(2))
tensor([[1.6347,2.1748,2.3567],[0.6558,0.2469,5.5787]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. inv ( A ,  * ,  out )   → ¶",">>> A=torch.randn(4,4)
>>> Ainv=torch.linalg.inv(A)
>>> torch.dist(A@Ainv,torch.eye(4))
tensor(1.1921e-07)>>> A=torch.randn(2,3,4,4)# Batch of matrices
>>> Ainv=torch.linalg.inv(A)
>>> torch.dist(A@Ainv,torch.eye(4))
tensor(1.9073e-06)>>> A=torch.randn(4,4,dtype=torch.complex128)# Complex matrix
>>> Ainv=torch.linalg.inv(A)
>>> torch.dist(A@Ainv,torch.eye(4))
tensor(7.5107e-16, dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. det ( A ,  * ,  out )   → ¶",">>> A=torch.randn(3,3)
>>> torch.linalg.det(A)
tensor(0.0934)>>> A=torch.randn(3,2,2)
>>> torch.linalg.det(A)
tensor([1.1990, 0.4099, 0.7386])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. logdet ( input )   → ¶",">>> A=torch.randn(3,3)
>>> torch.det(A)
tensor(0.2611)
>>> torch.logdet(A)
tensor(-1.3430)
>>> A
tensor([[[ 0.9254, -0.6213],
         [-0.5787,  1.6843]],        [[ 0.3242, -0.9665],
         [ 0.4539, -0.0887]],        [[ 1.1336, -0.4025],
         [-0.7089,  0.9032]]])
>>> A.det()
tensor([1.1990, 0.4099, 0.7386])
>>> A.det().log()
tensor([ 0.1815, -0.8917, -0.3031])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. slogdet ( A ,  * ,  out ) ¶",">>> A=torch.randn(3,3)
>>> A
tensor([[ 0.0032, -0.2239, -1.1219],
        [-0.6690,  0.1161,  0.4053],
        [-1.6218, -0.9273, -0.0082]])
>>> torch.linalg.det(A)
tensor(-0.7576)
>>> torch.logdet(A)
tensor(nan)
>>> torch.linalg.slogdet(A)
torch.return_types.linalg_slogdet(sign=tensor(-1.), logabsdet=tensor(-0.2776))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lu ( * ,  ** ) ¶",">>> A=torch.randn(2,3,3)
>>> A_LU,pivots=torch.lu(A)
>>> A_LU
tensor([[[ 1.3506,  2.5558, -0.0816],
         [ 0.1684,  1.1551,  0.1940],
         [ 0.1193,  0.6189, -0.5497]],        [[ 0.4526,  1.2526, -0.3285],
         [-0.7988,  0.7175, -0.9701],
         [ 0.2634, -0.9255, -0.3459]]])
>>> pivots
tensor([[ 3,  3,  3],
        [ 3,  3,  3]], dtype=torch.int32)
>>> A_LU,pivots,info=torch.lu(A,get_infos=True)
>>> ifinfo.nonzero().size(0)==0:
... print('LU factorization succeeded for all samples!')
LU factorization succeeded for all samples!
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lu_solve ( b ,  LU_data ,  LU_pivots ,  * ,  out )   → ¶",">>> A=torch.randn(2,3,3)
>>> b=torch.randn(2,3,1)
>>> LU,pivots=torch.linalg.lu_factor(A)
>>> x=torch.lu_solve(b,LU,pivots)
>>> torch.dist(A@x,b)
tensor(1.00000e-07 *
       2.8312)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. lu_factor ( A ,  * ,  bool ,  out=None) ,  Tensor ) ¶",">>> A=torch.randn(2,3,3)
>>> B1=torch.randn(2,3,4)
>>> B2=torch.randn(2,3,7)
>>> A_factor=torch.linalg.lu_factor(A)
>>> X1=torch.linalg.lu_solve(A_factor,B1)
>>> X2=torch.linalg.lu_solve(A_factor,B2)
>>> torch.allclose(A@X1,B1)
True
>>> torch.allclose(A@X2,B2)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. lu_unpack ( LU_data ,  LU_pivots ,  unpack_data ,  unpack_pivots ,  * ,  out ) ¶",">>> A=torch.randn(2,3,3)
>>> LU,pivots=torch.linalg.lu_factor(A)
>>> P,L,U=torch.lu_unpack(LU,pivots)
>>> # We can recover A from the factorization
>>> A_=P@L@U
>>> torch.allclose(A,A_)
True>>> # LU factorization of a rectangular matrix:
>>> A=torch.randn(2,3,2)
>>> LU,pivots=torch.linalg.lu_factor(A)
>>> P,L,U=torch.lu_unpack(LU,pivots)
>>> # P, L, U are the same as returned by linalg.lu
>>> P_,L_,U_=torch.linalg.lu(A)
>>> torch.allclose(P,P_)andtorch.allclose(L,L_)andtorch.allclose(U,U_)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. matmul ( input ,  other ,  * ,  out )   → ¶",">>> # vector x vector
>>> tensor1=torch.randn(3)
>>> tensor2=torch.randn(3)
>>> torch.matmul(tensor1,tensor2).size()
torch.Size([])
>>> # matrix x vector
>>> tensor1=torch.randn(3,4)
>>> tensor2=torch.randn(4)
>>> torch.matmul(tensor1,tensor2).size()
torch.Size([3])
>>> # batched matrix x broadcasted vector
>>> tensor1=torch.randn(10,3,4)
>>> tensor2=torch.randn(4)
>>> torch.matmul(tensor1,tensor2).size()
torch.Size([10, 3])
>>> # batched matrix x batched matrix
>>> tensor1=torch.randn(10,3,4)
>>> tensor2=torch.randn(10,4,5)
>>> torch.matmul(tensor1,tensor2).size()
torch.Size([10, 3, 5])
>>> # batched matrix x broadcasted matrix
>>> tensor1=torch.randn(10,3,4)
>>> tensor2=torch.randn(4,5)
>>> torch.matmul(tensor1,tensor2).size()
torch.Size([10, 3, 5])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. matrix_power ( A ,  n ,  * ,  out )   → ¶",">>> A=torch.randn(3,3)
>>> torch.linalg.matrix_power(A,0)
tensor([[1., 0., 0.],
        [0., 1., 0.],
        [0., 0., 1.]])
>>> torch.linalg.matrix_power(A,3)
tensor([[ 1.0756,  0.4980,  0.0100],
        [-1.6617,  1.4994, -1.9980],
        [-0.4509,  0.2731,  0.8001]])
>>> torch.linalg.matrix_power(A.expand(2,-1,-1),-2)
tensor([[[ 0.2640,  0.4571, -0.5511],
        [-1.0163,  0.3491, -1.5292],
        [-0.4899,  0.0822,  0.2773]],
        [[ 0.2640,  0.4571, -0.5511],
        [-1.0163,  0.3491, -1.5292],
        [-0.4899,  0.0822,  0.2773]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. matrix_exp ( A )   → ¶",">>> A=torch.empty(2,2,2)
>>> A[0,:,:]=torch.eye(2,2)
>>> A[1,:,:]=2*torch.eye(2,2)
>>> A
tensor([[[1., 0.],
         [0., 1.]],        [[2., 0.],
         [0., 2.]]])
>>> torch.linalg.matrix_exp(A)
tensor([[[2.7183, 0.0000],
         [0.0000, 2.7183]],         [[7.3891, 0.0000],
          [0.0000, 7.3891]]])>>> importmath
>>> A=torch.tensor([[0,math.pi/3],[-math.pi/3,0]])# A is skew-symmetric
>>> torch.linalg.matrix_exp(A)# matrix_exp(A) = [[cos(pi/3), sin(pi/3)], [-sin(pi/3), cos(pi/3)]]
tensor([[ 0.5000,  0.8660],
        [-0.8660,  0.5000]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mm ( input ,  mat2 ,  * ,  out )   → ¶",">>> mat1=torch.randn(2,3)
>>> mat2=torch.randn(3,3)
>>> torch.mm(mat1,mat2)
tensor([[ 0.4851,  0.5037, -0.3633],
        [-0.0760, -3.6705,  2.4784]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. mv ( input ,  vec ,  * ,  out )   → ¶",">>> mat=torch.randn(2,3)
>>> vec=torch.randn(3)
>>> torch.mv(mat,vec)
tensor([ 1.0404, -0.6361])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. householder_product ( A ,  tau ,  * ,  out )   → ¶",">>> A=torch.randn(2,2)
>>> h,tau=torch.geqrf(A)
>>> Q=torch.linalg.householder_product(h,tau)
>>> torch.dist(Q,torch.linalg.qr(A).Q)
tensor(0.)>>> h=torch.randn(3,2,2,dtype=torch.complex128)
>>> tau=torch.randn(3,1,dtype=torch.complex128)
>>> Q=torch.linalg.householder_product(h,tau)
>>> Q
tensor([[[ 1.8034+0.4184j,  0.2588-1.0174j],
        [-0.6853+0.7953j,  2.0790+0.5620j]],        [[ 1.4581+1.6989j, -1.5360+0.1193j],
        [ 1.3877-0.6691j,  1.3512+1.3024j]],        [[ 1.4766+0.5783j,  0.0361+0.6587j],
        [ 0.6396+0.1612j,  1.3693+0.4481j]]], dtype=torch.complex128)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. pinv ( A ,  * ,  atol ,  rtol ,  hermitian ,  out )   → ¶",">>> A=torch.randn(3,5)
>>> A
tensor([[ 0.5495,  0.0979, -1.4092, -0.1128,  0.4132],
        [-1.1143, -0.3662,  0.3042,  1.6374, -0.9294],
        [-0.3269, -0.5745, -0.0382, -0.5922, -0.6759]])
>>> torch.linalg.pinv(A)
tensor([[ 0.0600, -0.1933, -0.2090],
        [-0.0903, -0.0817, -0.4752],
        [-0.7124, -0.1631, -0.2272],
        [ 0.1356,  0.3933, -0.5023],
        [-0.0308, -0.1725, -0.5216]])>>> A=torch.randn(2,6,3)
>>> Apinv=torch.linalg.pinv(A)
>>> torch.dist(Apinv@A,torch.eye(3))
tensor(8.5633e-07)>>> A=torch.randn(3,3,dtype=torch.complex64)
>>> A=A+A.T.conj()# creates a Hermitian matrix
>>> Apinv=torch.linalg.pinv(A,hermitian=True)
>>> torch.dist(Apinv@A,torch.eye(3))
tensor(1.0830e-06)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. qr ( input ,  some ,  * ,  out ) ¶",">>> a=torch.tensor([[12.,-51,4],[6,167,-68],[-4,24,-41]])
>>> q,r=torch.qr(a)
>>> q
tensor([[-0.8571,  0.3943,  0.3314],
        [-0.4286, -0.9029, -0.0343],
        [ 0.2857, -0.1714,  0.9429]])
>>> r
tensor([[ -14.0000,  -21.0000,   14.0000],
        [   0.0000, -175.0000,   70.0000],
        [   0.0000,    0.0000,  -35.0000]])
>>> torch.mm(q,r).round()
tensor([[  12.,  -51.,    4.],
        [   6.,  167.,  -68.],
        [  -4.,   24.,  -41.]])
>>> torch.mm(q.t(),q).round()
tensor([[ 1.,  0.,  0.],
        [ 0.,  1., -0.],
        [ 0., -0.,  1.]])
>>> a=torch.randn(3,4,5)
>>> q,r=torch.qr(a,some=False)
>>> torch.allclose(torch.matmul(q,r),a)
True
>>> torch.allclose(torch.matmul(q.mT,q),torch.eye(5))
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. svd ( input ,  some ,  compute_uv ,  * ,  out ) ¶",">>> a=torch.randn(5,3)
>>> a
tensor([[ 0.2364, -0.7752,  0.6372],
        [ 1.7201,  0.7394, -0.0504],
        [-0.3371, -1.0584,  0.5296],
        [ 0.3550, -0.4022,  1.5569],
        [ 0.2445, -0.0158,  1.1414]])
>>> u,s,v=torch.svd(a)
>>> u
tensor([[ 0.4027,  0.0287,  0.5434],
        [-0.1946,  0.8833,  0.3679],
        [ 0.4296, -0.2890,  0.5261],
        [ 0.6604,  0.2717, -0.2618],
        [ 0.4234,  0.2481, -0.4733]])
>>> s
tensor([2.3289, 2.0315, 0.7806])
>>> v
tensor([[-0.0199,  0.8766,  0.4809],
        [-0.5080,  0.4054, -0.7600],
        [ 0.8611,  0.2594, -0.4373]])
>>> torch.dist(a,torch.mm(torch.mm(u,torch.diag(s)),v.t()))
tensor(8.6531e-07)
>>> a_big=torch.randn(7,5,3)
>>> u,s,v=torch.svd(a_big)
>>> torch.dist(a_big,torch.matmul(torch.matmul(u,torch.diag_embed(s)),v.mT))
tensor(2.6503e-06)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. symeig ( input ,  eigenvectors ,  upper ,  * ,  out ) ¶",">>> a=torch.randn(5,5)
>>> a=a+a.t()# To make a symmetric
>>> a
tensor([[-5.7827,  4.4559, -0.2344, -1.7123, -1.8330],
        [ 4.4559,  1.4250, -2.8636, -3.2100, -0.1798],
        [-0.2344, -2.8636,  1.7112, -5.5785,  7.1988],
        [-1.7123, -3.2100, -5.5785, -2.6227,  3.1036],
        [-1.8330, -0.1798,  7.1988,  3.1036, -5.1453]])
>>> e,v=torch.symeig(a,eigenvectors=True)
>>> e
tensor([-13.7012,  -7.7497,  -2.3163,   5.2477,   8.1050])
>>> v
tensor([[ 0.1643,  0.9034, -0.0291,  0.3508,  0.1817],
        [-0.2417, -0.3071, -0.5081,  0.6534,  0.4026],
        [-0.5176,  0.1223, -0.0220,  0.3295, -0.7798],
        [-0.4850,  0.2695, -0.5773, -0.5840,  0.1337],
        [ 0.6415, -0.0447, -0.6381, -0.0193, -0.4230]])
>>> a_big=torch.randn(5,2,2)
>>> a_big=a_big+a_big.mT# To make a_big symmetric
>>> e,v=a_big.symeig(eigenvectors=True)
>>> torch.allclose(torch.matmul(v,torch.matmul(e.diag_embed(),v.mT)),a_big)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. trapezoid ( y ,  x ,  * ,  dx ,  dim )   → ¶",">>> # Computes the trapezoidal rule in 1D, spacing is implicitly 1
>>> y=torch.tensor([1,5,10])
>>> torch.trapezoid(y)
tensor(10.5)>>> # Computes the same trapezoidal rule directly to verify
>>> (1+10+10)/2
10.5>>> # Computes the trapezoidal rule in 1D with constant spacing of 2
>>> # NOTE: the result is the same as before, but multiplied by 2
>>> torch.trapezoid(y,dx=2)
21.0>>> # Computes the trapezoidal rule in 1D with arbitrary spacing
>>> x=torch.tensor([1,3,6])
>>> torch.trapezoid(y,x)
28.5>>> # Computes the same trapezoidal rule directly to verify
>>> ((3-1)*(1+5)+(6-3)*(5+10))/2
28.5>>> # Computes the trapezoidal rule for each row of a 3x3 matrix
>>> y=torch.arange(9).reshape(3,3)
tensor([[0, 1, 2],
        [3, 4, 5],
        [6, 7, 8]])
>>> torch.trapezoid(y)
tensor([ 2., 8., 14.])>>> # Computes the trapezoidal rule for each column of the matrix
>>> torch.trapezoid(y,dim=0)
tensor([ 6., 8., 10.])>>> # Computes the trapezoidal rule for each row of a 3x3 ones matrix
>>> #   with the same arbitrary spacing
>>> y=torch.ones(3,3)
>>> x=torch.tensor([1,3,6])
>>> torch.trapezoid(y,x)
array([5., 5., 5.])>>> # Computes the trapezoidal rule for each row of a 3x3 ones matrix
>>> #   with different arbitrary spacing per row
>>> y=torch.ones(3,3)
>>> x=torch.tensor([[1,2,3],[1,3,5],[1,4,7]])
>>> torch.trapezoid(y,x)
array([2., 4., 6.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. cumulative_trapezoid ( y ,  x ,  * ,  dx ,  dim )   → ¶",">>> # Cumulatively computes the trapezoidal rule in 1D, spacing is implicitly 1.
>>> y=torch.tensor([1,5,10])
>>> torch.cumulative_trapezoid(y)
tensor([3., 10.5])>>> # Computes the same trapezoidal rule directly up to each element to verify
>>> (1+5)/2
3.0
>>> (1+10+10)/2
10.5>>> # Cumulatively computes the trapezoidal rule in 1D with constant spacing of 2
>>> # NOTE: the result is the same as before, but multiplied by 2
>>> torch.cumulative_trapezoid(y,dx=2)
tensor([6., 21.])>>> # Cumulatively computes the trapezoidal rule in 1D with arbitrary spacing
>>> x=torch.tensor([1,3,6])
>>> torch.cumulative_trapezoid(y,x)
tensor([6., 28.5])>>> # Computes the same trapezoidal rule directly up to each element to verify
>>> ((3-1)*(1+5))/2
6.0
>>> ((3-1)*(1+5)+(6-3)*(5+10))/2
28.5>>> # Cumulatively computes the trapezoidal rule for each row of a 3x3 matrix
>>> y=torch.arange(9).reshape(3,3)
tensor([[0, 1, 2],
        [3, 4, 5],
        [6, 7, 8]])
>>> torch.cumulative_trapezoid(y)
tensor([[ 0.5,  2.],
        [ 3.5,  8.],
        [ 6.5, 14.]])>>> # Cumulatively computes the trapezoidal rule for each column of the matrix
>>> torch.cumulative_trapezoid(y,dim=0)
tensor([[ 1.5,  2.5,  3.5],
        [ 6.0,  8.0, 10.0]])>>> # Cumulatively computes the trapezoidal rule for each row of a 3x3 ones matrix
>>> #   with the same arbitrary spacing
>>> y=torch.ones(3,3)
>>> x=torch.tensor([1,3,6])
>>> torch.cumulative_trapezoid(y,x)
tensor([[2., 5.],
        [2., 5.],
        [2., 5.]])>>> # Cumulatively computes the trapezoidal rule for each row of a 3x3 ones matrix
>>> #   with different arbitrary spacing per row
>>> y=torch.ones(3,3)
>>> x=torch.tensor([[1,2,3],[1,3,5],[1,4,7]])
>>> torch.cumulative_trapezoid(y,x)
tensor([[1., 2.],
        [2., 4.],
        [3., 6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. triangular_solve ( b ,  A ,  upper ,  transpose ,  unitriangular ,  * ,  out ) ¶",">>> A=torch.randn(2,2).triu()
>>> A
tensor([[ 1.1527, -1.0753],
        [ 0.0000,  0.7986]])
>>> b=torch.randn(2,3)
>>> b
tensor([[-0.0210,  2.3513, -1.5492],
        [ 1.5429,  0.7403, -1.0243]])
>>> torch.triangular_solve(b,A)
torch.return_types.triangular_solve(
solution=tensor([[ 1.7841,  2.9046, -2.5405],
        [ 1.9320,  0.9270, -1.2826]]),
cloned_coefficient=tensor([[ 1.1527, -1.0753],
        [ 0.0000,  0.7986]]))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. vdot ( input ,  other ,  * ,  out )   → ¶",">>> torch.vdot(torch.tensor([2,3]),torch.tensor([2,1]))
tensor(7)
>>> a=torch.tensor((1+2j,3-1j))
>>> b=torch.tensor((2+1j,4-0j))
>>> torch.vdot(a,b)
tensor([16.+1.j])
>>> torch.vdot(b,a)
tensor([16.-1.j])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. result_type ( tensor1 ,  tensor2 )   → ¶",">>> torch.result_type(torch.tensor([1,2],dtype=torch.int),1.0)
torch.float32
>>> torch.result_type(torch.tensor([1,2],dtype=torch.uint8),torch.tensor(1))
torch.uint8
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. can_cast ( from ,  to )   → ¶",">>> torch.can_cast(torch.double,torch.float)
True
>>> torch.can_cast(torch.float,torch.int)
False
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. promote_types ( type1 ,  type2 )   → ¶",">>> torch.promote_types(torch.int32,torch.float32)
torch.float32
>>> torch.promote_types(torch.uint8,torch.long)
torch.long
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. use_deterministic_algorithms ( mode ,  * ,  warn_only ) [source] ¶",">>> torch.use_deterministic_algorithms(True)# Forward mode nondeterministic error
>>> torch.randn(10,device='cuda').kthvalue(0)
...
RuntimeError: kthvalue CUDA does not have a deterministic implementation...# Backward mode nondeterministic error
>>> torch.nn.AvgPool3d(1)(torch.randn(3,4,5,6,requires_grad=True).cuda()).sum().backward()
...
RuntimeError: avg_pool3d_backward_cuda does not have a deterministic implementation...
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ModuleList ( modules ) [source] ¶","classMyModule(nn.Module):def__init__(self):super(MyModule,self).__init__()self.linears=nn.ModuleList([nn.Linear(10,10)foriinrange(10)])defforward(self,x):# ModuleList can act as an iterable, or be indexed using intsfori,linenumerate(self.linears):x=self.linears[i//2](x)+l(x)returnx
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    n
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ModuleDict ( modules ) [source] ¶","classMyModule(nn.Module):def__init__(self):super(MyModule,self).__init__()self.choices=nn.ModuleDict({'conv':nn.Conv2d(10,10,3),'pool':nn.MaxPool2d(3)})self.activations=nn.ModuleDict([['lrelu',nn.LeakyReLU()],['prelu',nn.PReLU()]])defforward(self,x,choice,act):x=self.choices[choice](x)x=self.activations[act](x)returnx
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    n
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ParameterList ( values ) [source] ¶","classMyModule(nn.Module):def__init__(self):super(MyModule,self).__init__()self.params=nn.ParameterList([nn.Parameter(torch.randn(10,10))foriinrange(10)])defforward(self,x):# ParameterList can act as an iterable, or be indexed using intsfori,pinenumerate(self.params):x=self.params[i//2].mm(x)+p.mm(x)returnx
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    n
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ParameterDict ( parameters ) [source] ¶","classMyModule(nn.Module):def__init__(self):super(MyModule,self).__init__()self.params=nn.ParameterDict({'left':nn.Parameter(torch.randn(5,10)),'right':nn.Parameter(torch.randn(5,10))})defforward(self,x,choice):x=self.params[choice].mm(x)returnx
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    n
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Conv1d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  dilation ,  groups ,  bias ,  padding_mode ,  device ,  dtype ) [source] ¶",">>> m=nn.Conv1d(16,33,3,stride=2)
>>> input=torch.randn(20,16,50)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Conv3d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  dilation ,  groups ,  bias ,  padding_mode ,  device ,  dtype ) [source] ¶",">>> # With square kernels and equal stride
>>> m=nn.Conv3d(16,33,3,stride=2)
>>> # non-square kernels and unequal stride and with padding
>>> m=nn.Conv3d(16,33,(3,5,2),stride=(2,1,1),padding=(4,2,0))
>>> input=torch.randn(20,16,10,50,100)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ConvTranspose2d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  output_padding ,  groups ,  bias ,  dilation ,  padding_mode ,  device ,  dtype ) [source] ¶",">>> # With square kernels and equal stride
>>> m=nn.ConvTranspose2d(16,33,3,stride=2)
>>> # non-square kernels and unequal stride and with padding
>>> m=nn.ConvTranspose2d(16,33,(3,5),stride=(2,1),padding=(4,2))
>>> input=torch.randn(20,16,50,100)
>>> output=m(input)
>>> # exact output size can be also specified as an argument
>>> input=torch.randn(1,16,12,12)
>>> downsample=nn.Conv2d(16,16,3,stride=2,padding=1)
>>> upsample=nn.ConvTranspose2d(16,16,3,stride=2,padding=1)
>>> h=downsample(input)
>>> h.size()
torch.Size([1, 16, 6, 6])
>>> output=upsample(h,output_size=input.size())
>>> output.size()
torch.Size([1, 16, 12, 12])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ConvTranspose3d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  output_padding ,  groups ,  bias ,  dilation ,  padding_mode ,  device ,  dtype ) [source] ¶",">>> # With square kernels and equal stride
>>> m=nn.ConvTranspose3d(16,33,3,stride=2)
>>> # non-square kernels and unequal stride and with padding
>>> m=nn.ConvTranspose3d(16,33,(3,5,2),stride=(2,1,1),padding=(0,4,2))
>>> input=torch.randn(20,16,10,50,100)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Unfold ( kernel_size ,  dilation ,  padding ,  stride ) [source] ¶",">>> unfold=nn.Unfold(kernel_size=(2,3))
>>> input=torch.randn(2,5,3,4)
>>> output=unfold(input)
>>> # each patch contains 30 values (2x3=6 vectors, each of 5 channels)
>>> # 4 blocks (2x3 kernels) in total in the 3x4 input
>>> output.size()
torch.Size([2, 30, 4])>>> # Convolution is equivalent with Unfold + Matrix Multiplication + Fold (or view to output shape)
>>> inp=torch.randn(1,3,10,12)
>>> w=torch.randn(2,3,4,5)
>>> inp_unf=torch.nn.functional.unfold(inp,(4,5))
>>> out_unf=inp_unf.transpose(1,2).matmul(w.view(w.size(0),-1).t()).transpose(1,2)
>>> out=torch.nn.functional.fold(out_unf,(7,8),(1,1))
>>> # or equivalently (and avoiding a copy),
>>> # out = out_unf.view(1, 2, 7, 8)
>>> (torch.nn.functional.conv2d(inp,w)-out).abs().max()
tensor(1.9073e-06)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Fold ( output_size ,  kernel_size ,  dilation ,  padding ,  stride ) [source] ¶",">>> fold=nn.Fold(output_size=(4,5),kernel_size=(2,2))
>>> input=torch.randn(1,3*2*2,12)
>>> output=fold(input)
>>> output.size()
torch.Size([1, 3, 4, 5])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxPool1d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶",">>> # pool of size=3, stride=2
>>> m=nn.MaxPool1d(3,stride=2)
>>> input=torch.randn(20,16,50)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxPool2d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶",">>> # pool of square window of size=3, stride=2
>>> m=nn.MaxPool2d(3,stride=2)
>>> # pool of non-square window
>>> m=nn.MaxPool2d((3,2),stride=(2,1))
>>> input=torch.randn(20,16,50,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxPool3d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶",">>> # pool of square window of size=3, stride=2
>>> m=nn.MaxPool3d(3,stride=2)
>>> # pool of non-square window
>>> m=nn.MaxPool3d((3,2,2),stride=(2,1,2))
>>> input=torch.randn(20,16,50,44,31)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxUnpool1d ( kernel_size ,  stride ,  padding ) [source] ¶",">>> pool=nn.MaxPool1d(2,stride=2,return_indices=True)
>>> unpool=nn.MaxUnpool1d(2,stride=2)
>>> input=torch.tensor([[[1.,2,3,4,5,6,7,8]]])
>>> output,indices=pool(input)
>>> unpool(output,indices)
tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0., 8.]]])>>> # Example showcasing the use of output_size
>>> input=torch.tensor([[[1.,2,3,4,5,6,7,8,9]]])
>>> output,indices=pool(input)
>>> unpool(output,indices,output_size=input.size())
tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0., 8.,  0.]]])>>> unpool(output,indices)
tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0., 8.]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxUnpool2d ( kernel_size ,  stride ,  padding ) [source] ¶",">>> pool=nn.MaxPool2d(2,stride=2,return_indices=True)
>>> unpool=nn.MaxUnpool2d(2,stride=2)
>>> input=torch.tensor([[[[1.,2.,3.,4.],
                            [ 5.,  6.,  7.,  8.],
                            [ 9., 10., 11., 12.],
                            [13., 14., 15., 16.]]]])
>>> output,indices=pool(input)
>>> unpool(output,indices)
tensor([[[[  0.,   0.,   0.,   0.],
          [  0.,   6.,   0.,   8.],
          [  0.,   0.,   0.,   0.],
          [  0.,  14.,   0.,  16.]]]])
>>> # Now using output_size to resolve an ambiguous size for the inverse
>>> input=torch.torch.tensor([[[[1.,2.,3.,4.,5.],
                                  [ 6.,  7.,  8., 9., 10.],
                                  [11., 12., 13., 14., 15.],
                                  [16., 17., 18., 19., 20.]]]])
>>> output,indices=pool(input)
>>> # This call will not work without specifying output_size
>>> unpool(output,indices,output_size=input.size())
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  7.,  0.,  9.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0., 17.,  0., 19.,  0.]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxUnpool3d ( kernel_size ,  stride ,  padding ) [source] ¶",">>> # pool of square window of size=3, stride=2
>>> pool=nn.MaxPool3d(3,stride=2,return_indices=True)
>>> unpool=nn.MaxUnpool3d(3,stride=2)
>>> output,indices=pool(torch.randn(20,16,51,33,15))
>>> unpooled_output=unpool(output,indices)
>>> unpooled_output.size()
torch.Size([20, 16, 51, 33, 15])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. AvgPool1d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ) [source] ¶",">>> # pool with window of size=3, stride=2
>>> m=nn.AvgPool1d(3,stride=2)
>>> m(torch.tensor([[[1.,2,3,4,5,6,7]]]))
tensor([[[2., 4., 6.]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. AvgPool2d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ,  divisor_override ) [source] ¶",">>> # pool of square window of size=3, stride=2
>>> m=nn.AvgPool2d(3,stride=2)
>>> # pool of non-square window
>>> m=nn.AvgPool2d((3,2),stride=(2,1))
>>> input=torch.randn(20,16,50,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. AvgPool3d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ,  divisor_override ) [source] ¶",">>> # pool of square window of size=3, stride=2
>>> m=nn.AvgPool3d(3,stride=2)
>>> # pool of non-square window
>>> m=nn.AvgPool3d((3,2,2),stride=(2,1,2))
>>> input=torch.randn(20,16,50,44,31)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LPPool2d ( norm_type ,  kernel_size ,  stride ,  ceil_mode ) [source] ¶",">>> # power-2 pool of square window of size=3, stride=2
>>> m=nn.LPPool2d(2,3,stride=2)
>>> # pool of non-square window of power 1.2
>>> m=nn.LPPool2d(1.2,(3,2),stride=(2,1))
>>> input=torch.randn(20,16,50,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReflectionPad1d ( padding ) [source] ¶",">>> m=nn.ReflectionPad1d(2)
>>> input=torch.arange(8,dtype=torch.float).reshape(1,2,4)
>>> input
tensor([[[0., 1., 2., 3.],
         [4., 5., 6., 7.]]])
>>> m(input)
tensor([[[2., 1., 0., 1., 2., 3., 2., 1.],
         [6., 5., 4., 5., 6., 7., 6., 5.]]])
>>> # using different paddings for different sides
>>> m=nn.ReflectionPad1d((3,1))
>>> m(input)
tensor([[[3., 2., 1., 0., 1., 2., 3., 2.],
         [7., 6., 5., 4., 5., 6., 7., 6.]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReflectionPad2d ( padding ) [source] ¶",">>> m=nn.ReflectionPad2d(2)
>>> input=torch.arange(9,dtype=torch.float).reshape(1,1,3,3)
>>> input
tensor([[[[0., 1., 2.],
          [3., 4., 5.],
          [6., 7., 8.]]]])
>>> m(input)
tensor([[[[8., 7., 6., 7., 8., 7., 6.],
          [5., 4., 3., 4., 5., 4., 3.],
          [2., 1., 0., 1., 2., 1., 0.],
          [5., 4., 3., 4., 5., 4., 3.],
          [8., 7., 6., 7., 8., 7., 6.],
          [5., 4., 3., 4., 5., 4., 3.],
          [2., 1., 0., 1., 2., 1., 0.]]]])
>>> # using different paddings for different sides
>>> m=nn.ReflectionPad2d((1,1,2,0))
>>> m(input)
tensor([[[[7., 6., 7., 8., 7.],
          [4., 3., 4., 5., 4.],
          [1., 0., 1., 2., 1.],
          [4., 3., 4., 5., 4.],
          [7., 6., 7., 8., 7.]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReflectionPad3d ( padding ) [source] ¶",">>> m=nn.ReflectionPad3d(1)
>>> input=torch.arange(8,dtype=torch.float).reshape(1,1,2,2,2)
>>> m(input)
tensor([[[[[7., 6., 7., 6.],
           [5., 4., 5., 4.],
           [7., 6., 7., 6.],
           [5., 4., 5., 4.]],
          [[3., 2., 3., 2.],
           [1., 0., 1., 0.],
           [3., 2., 3., 2.],
           [1., 0., 1., 0.]],
          [[7., 6., 7., 6.],
           [5., 4., 5., 4.],
           [7., 6., 7., 6.],
           [5., 4., 5., 4.]],
          [[3., 2., 3., 2.],
           [1., 0., 1., 0.],
           [3., 2., 3., 2.],
           [1., 0., 1., 0.]]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReplicationPad1d ( padding ) [source] ¶",">>> m=nn.ReplicationPad1d(2)
>>> input=torch.arange(8,dtype=torch.float).reshape(1,2,4)
>>> input
tensor([[[0., 1., 2., 3.],
         [4., 5., 6., 7.]]])
>>> m(input)
tensor([[[0., 0., 0., 1., 2., 3., 3., 3.],
         [4., 4., 4., 5., 6., 7., 7., 7.]]])
>>> # using different paddings for different sides
>>> m=nn.ReplicationPad1d((3,1))
>>> m(input)
tensor([[[0., 0., 0., 0., 1., 2., 3., 3.],
         [4., 4., 4., 4., 5., 6., 7., 7.]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReplicationPad2d ( padding ) [source] ¶",">>> m=nn.ReplicationPad2d(2)
>>> input=torch.arange(9,dtype=torch.float).reshape(1,1,3,3)
>>> input
tensor([[[[0., 1., 2.],
          [3., 4., 5.],
          [6., 7., 8.]]]])
>>> m(input)
tensor([[[[0., 0., 0., 1., 2., 2., 2.],
          [0., 0., 0., 1., 2., 2., 2.],
          [0., 0., 0., 1., 2., 2., 2.],
          [3., 3., 3., 4., 5., 5., 5.],
          [6., 6., 6., 7., 8., 8., 8.],
          [6., 6., 6., 7., 8., 8., 8.],
          [6., 6., 6., 7., 8., 8., 8.]]]])
>>> # using different paddings for different sides
>>> m=nn.ReplicationPad2d((1,1,2,0))
>>> m(input)
tensor([[[[0., 0., 1., 2., 2.],
          [0., 0., 1., 2., 2.],
          [0., 0., 1., 2., 2.],
          [3., 3., 4., 5., 5.],
          [6., 6., 7., 8., 8.]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ReplicationPad3d ( padding ) [source] ¶",">>> m=nn.ReplicationPad3d(3)
>>> input=torch.randn(16,3,8,320,480)
>>> output=m(input)
>>> # using different paddings for different sides
>>> m=nn.ReplicationPad3d((3,3,6,6,1,1))
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ZeroPad2d ( padding ) [source] ¶",">>> m=nn.ZeroPad2d(2)
>>> input=torch.randn(1,1,3,3)
>>> input
tensor([[[[-0.1678, -0.4418,  1.9466],
          [ 0.9604, -0.4219, -0.5241],
          [-0.9162, -0.5436, -0.6446]]]])
>>> m(input)
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.1678, -0.4418,  1.9466,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.9604, -0.4219, -0.5241,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.9162, -0.5436, -0.6446,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]])
>>> # using different paddings for different sides
>>> m=nn.ZeroPad2d((1,1,2,0))
>>> m(input)
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1678, -0.4418,  1.9466,  0.0000],
          [ 0.0000,  0.9604, -0.4219, -0.5241,  0.0000],
          [ 0.0000, -0.9162, -0.5436, -0.6446,  0.0000]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ConstantPad1d ( padding ,  value ) [source] ¶",">>> m=nn.ConstantPad1d(2,3.5)
>>> input=torch.randn(1,2,4)
>>> input
tensor([[[-1.0491, -0.7152, -0.0749,  0.8530],
         [-1.3287,  1.8966,  0.1466, -0.2771]]])
>>> m(input)
tensor([[[ 3.5000,  3.5000, -1.0491, -0.7152, -0.0749,  0.8530,  3.5000,
           3.5000],
         [ 3.5000,  3.5000, -1.3287,  1.8966,  0.1466, -0.2771,  3.5000,
           3.5000]]])
>>> m=nn.ConstantPad1d(2,3.5)
>>> input=torch.randn(1,2,3)
>>> input
tensor([[[ 1.6616,  1.4523, -1.1255],
         [-3.6372,  0.1182, -1.8652]]])
>>> m(input)
tensor([[[ 3.5000,  3.5000,  1.6616,  1.4523, -1.1255,  3.5000,  3.5000],
         [ 3.5000,  3.5000, -3.6372,  0.1182, -1.8652,  3.5000,  3.5000]]])
>>> # using different paddings for different sides
>>> m=nn.ConstantPad1d((3,1),3.5)
>>> m(input)
tensor([[[ 3.5000,  3.5000,  3.5000,  1.6616,  1.4523, -1.1255,  3.5000],
         [ 3.5000,  3.5000,  3.5000, -3.6372,  0.1182, -1.8652,  3.5000]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ConstantPad2d ( padding ,  value ) [source] ¶",">>> m=nn.ConstantPad2d(2,3.5)
>>> input=torch.randn(1,2,2)
>>> input
tensor([[[ 1.6585,  0.4320],
         [-0.8701, -0.4649]]])
>>> m(input)
tensor([[[ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  1.6585,  0.4320,  3.5000,  3.5000],
         [ 3.5000,  3.5000, -0.8701, -0.4649,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000,  3.5000]]])
>>> # using different paddings for different sides
>>> m=nn.ConstantPad2d((3,0,2,1),3.5)
>>> m(input)
tensor([[[ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000],
         [ 3.5000,  3.5000,  3.5000,  1.6585,  0.4320],
         [ 3.5000,  3.5000,  3.5000, -0.8701, -0.4649],
         [ 3.5000,  3.5000,  3.5000,  3.5000,  3.5000]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ConstantPad3d ( padding ,  value ) [source] ¶",">>> m=nn.ConstantPad3d(3,3.5)
>>> input=torch.randn(16,3,10,20,30)
>>> output=m(input)
>>> # using different paddings for different sides
>>> m=nn.ConstantPad3d((3,3,6,6,0,1),3.5)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MultiheadAttention ( embed_dim ,  num_heads ,  dropout ,  bias ,  add_bias_kv ,  add_zero_attn ,  kdim ,  vdim ,  batch_first ,  device ,  dtype ) [source] ¶",">>> multihead_attn=nn.MultiheadAttention(embed_dim,num_heads)
>>> attn_output,attn_output_weights=multihead_attn(query,key,value)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Threshold ( threshold ,  value ,  inplace ) [source] ¶",">>> m=nn.Threshold(0.1,20)
>>> input=torch.randn(2)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. GLU ( dim ) [source] ¶",">>> m=nn.GLU()
>>> input=torch.randn(4,2)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Softmin ( dim ) [source] ¶",">>> m=nn.Softmin(dim=1)
>>> input=torch.randn(2,3)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Softmax ( dim ) [source] ¶",">>> m=nn.Softmax(dim=1)
>>> input=torch.randn(2,3)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Softmax2d [source] ¶",">>> m=nn.Softmax2d()
>>> # you softmax over the 2nd dimension
>>> input=torch.randn(2,3,12,13)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LogSoftmax ( dim ) [source] ¶",">>> m=nn.LogSoftmax(dim=1)
>>> input=torch.randn(2,3)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BatchNorm1d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # With Learnable Parameters
>>> m=nn.BatchNorm1d(100)
>>> # Without Learnable Parameters
>>> m=nn.BatchNorm1d(100,affine=False)
>>> input=torch.randn(20,100)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BatchNorm2d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # With Learnable Parameters
>>> m=nn.BatchNorm2d(100)
>>> # Without Learnable Parameters
>>> m=nn.BatchNorm2d(100,affine=False)
>>> input=torch.randn(20,100,35,45)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BatchNorm3d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # With Learnable Parameters
>>> m=nn.BatchNorm3d(100)
>>> # Without Learnable Parameters
>>> m=nn.BatchNorm3d(100,affine=False)
>>> input=torch.randn(20,100,35,45,10)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. GroupNorm ( num_groups ,  num_channels ,  eps ,  affine ,  device ,  dtype ) [source] ¶",">>> input=torch.randn(20,6,10,10)
>>> # Separate 6 channels into 3 groups
>>> m=nn.GroupNorm(3,6)
>>> # Separate 6 channels into 6 groups (equivalent with InstanceNorm)
>>> m=nn.GroupNorm(6,6)
>>> # Put all 6 channels into a single group (equivalent with LayerNorm)
>>> m=nn.GroupNorm(1,6)
>>> # Activating the module
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. SyncBatchNorm ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  process_group ,  device ,  dtype ) [source] ¶",">>> # With Learnable Parameters
>>> m=nn.SyncBatchNorm(100)
>>> # creating process group (optional)
>>> # ranks is a list of int identifying rank ids.
>>> ranks=list(range(8))
>>> r1,r2=ranks[:4],ranks[4:]
>>> # Note: every rank calls into new_group for every
>>> # process group created, even if that rank is not
>>> # part of the group.
>>> process_groups=[torch.distributed.new_group(pids)forpidsin[r1,r2]]
>>> process_group=process_groups[0ifdist.get_rank()<=3else1]
>>> # Without Learnable Parameters
>>> m=nn.BatchNorm3d(100,affine=False,process_group=process_group)
>>> input=torch.randn(20,100,35,45,10)
>>> output=m(input)>>> # network is nn.BatchNorm layer
>>> sync_bn_network=nn.SyncBatchNorm.convert_sync_batchnorm(network,process_group)
>>> # only single gpu per process is currently supported
>>> ddp_sync_bn_network=torch.nn.parallel.DistributedDataParallel(
>>> sync_bn_network,
>>> device_ids=[args.local_rank],
>>> output_device=args.local_rank)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. InstanceNorm1d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # Without Learnable Parameters
>>> m=nn.InstanceNorm1d(100)
>>> # With Learnable Parameters
>>> m=nn.InstanceNorm1d(100,affine=True)
>>> input=torch.randn(20,100,40)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. InstanceNorm2d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # Without Learnable Parameters
>>> m=nn.InstanceNorm2d(100)
>>> # With Learnable Parameters
>>> m=nn.InstanceNorm2d(100,affine=True)
>>> input=torch.randn(20,100,35,45)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. InstanceNorm3d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶",">>> # Without Learnable Parameters
>>> m=nn.InstanceNorm3d(100)
>>> # With Learnable Parameters
>>> m=nn.InstanceNorm3d(100,affine=True)
>>> input=torch.randn(20,100,35,45,10)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LayerNorm ( normalized_shape ,  eps ,  elementwise_affine ,  device ,  dtype ) [source] ¶",">>> # NLP Example
>>> batch,sentence_length,embedding_dim=20,5,10
>>> embedding=torch.randn(batch,sentence_length,embedding_dim)
>>> layer_norm=nn.LayerNorm(embedding_dim)
>>> # Activate module
>>> layer_norm(embedding)
>>>
>>> # Image Example
>>> N,C,H,W=20,5,10,10
>>> input=torch.randn(N,C,H,W)
>>> # Normalize over the last three dimensions (i.e. the channel and spatial dimensions)
>>> # as shown in the image below
>>> layer_norm=nn.LayerNorm([C,H,W])
>>> output=layer_norm(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LocalResponseNorm ( size ,  alpha ,  beta ,  k ) [source] ¶",">>> lrn=nn.LocalResponseNorm(2)
>>> signal_2d=torch.randn(32,5,24,24)
>>> signal_4d=torch.randn(16,5,7,7,7,7)
>>> output_2d=lrn(signal_2d)
>>> output_4d=lrn(signal_4d)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. RNN ( * ,  ** ) [source] ¶",">>> rnn=nn.RNN(10,20,2)
>>> input=torch.randn(5,3,10)
>>> h0=torch.randn(2,3,20)
>>> output,hn=rnn(input,h0)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LSTM ( * ,  ** ) [source] ¶",">>> rnn=nn.LSTM(10,20,2)
>>> input=torch.randn(5,3,10)
>>> h0=torch.randn(2,3,20)
>>> c0=torch.randn(2,3,20)
>>> output,(hn,cn)=rnn(input,(h0,c0))
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. GRU ( * ,  ** ) [source] ¶",">>> rnn=nn.GRU(10,20,2)
>>> input=torch.randn(5,3,10)
>>> h0=torch.randn(2,3,20)
>>> output,hn=rnn(input,h0)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. RNNCell ( input_size ,  hidden_size ,  bias ,  nonlinearity ,  device ,  dtype ) [source] ¶",">>> rnn=nn.RNNCell(10,20)
>>> input=torch.randn(6,3,10)
>>> hx=torch.randn(3,20)
>>> output=[]
>>> foriinrange(6):
... hx=rnn(input[i],hx)
... output.append(hx)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LSTMCell ( input_size ,  hidden_size ,  bias ,  device ,  dtype ) [source] ¶",">>> rnn=nn.LSTMCell(10,20)# (input_size, hidden_size)
>>> input=torch.randn(2,3,10)# (time_steps, batch, input_size)
>>> hx=torch.randn(3,20)# (batch, hidden_size)
>>> cx=torch.randn(3,20)
>>> output=[]
>>> foriinrange(input.size()[0]):
... hx,cx=rnn(input[i],(hx,cx))
... output.append(hx)
>>> output=torch.stack(output,dim=0)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. GRUCell ( input_size ,  hidden_size ,  bias ,  device ,  dtype ) [source] ¶",">>> rnn=nn.GRUCell(10,20)
>>> input=torch.randn(6,3,10)
>>> hx=torch.randn(3,20)
>>> output=[]
>>> foriinrange(6):
... hx=rnn(input[i],hx)
... output.append(hx)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Identity ( * ,  ** ) [source] ¶",">>> m=nn.Identity(54,unused_argument1=0.1,unused_argument2=False)
>>> input=torch.randn(128,20)
>>> output=m(input)
>>> print(output.size())
torch.Size([128, 20])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Linear ( in_features ,  out_features ,  bias ,  device ,  dtype ) [source] ¶",">>> m=nn.Linear(20,30)
>>> input=torch.randn(128,20)
>>> output=m(input)
>>> print(output.size())
torch.Size([128, 30])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Bilinear ( in1_features ,  in2_features ,  out_features ,  bias ,  device ,  dtype ) [source] ¶",">>> m=nn.Bilinear(20,30,40)
>>> input1=torch.randn(128,20)
>>> input2=torch.randn(128,30)
>>> output=m(input1,input2)
>>> print(output.size())
torch.Size([128, 40])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Dropout ( p ,  inplace ) [source] ¶",">>> m=nn.Dropout(p=0.2)
>>> input=torch.randn(20,16)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Dropout1d ( p ,  inplace ) [source] ¶",">>> m=nn.Dropout1d(p=0.2)
>>> input=torch.randn(20,16,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Dropout2d ( p ,  inplace ) [source] ¶",">>> m=nn.Dropout2d(p=0.2)
>>> input=torch.randn(20,16,32,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Dropout3d ( p ,  inplace ) [source] ¶",">>> m=nn.Dropout3d(p=0.2)
>>> input=torch.randn(20,16,4,32,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. AlphaDropout ( p ,  inplace ) [source] ¶",">>> m=nn.AlphaDropout(p=0.2)
>>> input=torch.randn(20,16)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. FeatureAlphaDropout ( p ,  inplace ) [source] ¶",">>> m=nn.FeatureAlphaDropout(p=0.2)
>>> input=torch.randn(20,16,4,32,32)
>>> output=m(input)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Embedding ( num_embeddings ,  embedding_dim ,  padding_idx ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  sparse ,  _weight ,  device ,  dtype ) [source] ¶",">>> # an Embedding module containing 10 tensors of size 3
>>> embedding=nn.Embedding(10,3)
>>> # a batch of 2 samples of 4 indices each
>>> input=torch.LongTensor([[1,2,4,5],[4,3,2,9]])
>>> embedding(input)
tensor([[[-0.0251, -1.6902,  0.7172],
         [-0.6431,  0.0748,  0.6969],
         [ 1.4970,  1.3448, -0.9685],
         [-0.3677, -2.7265, -0.1685]],        [[ 1.4970,  1.3448, -0.9685],
         [ 0.4362, -0.4004,  0.9400],
         [-0.6431,  0.0748,  0.6969],
         [ 0.9124, -2.3616,  1.1151]]])>>> # example with padding_idx
>>> embedding=nn.Embedding(10,3,padding_idx=0)
>>> input=torch.LongTensor([[0,2,0,5]])
>>> embedding(input)
tensor([[[ 0.0000,  0.0000,  0.0000],
         [ 0.1535, -2.0309,  0.9315],
         [ 0.0000,  0.0000,  0.0000],
         [-0.1655,  0.9897,  0.0635]]])>>> # example of changing `pad` vector
>>> padding_idx=0
>>> embedding=nn.Embedding(3,3,padding_idx=padding_idx)
>>> embedding.weight
Parameter containing:
tensor([[ 0.0000,  0.0000,  0.0000],
        [-0.7895, -0.7089, -0.0364],
        [ 0.6778,  0.5803,  0.2678]], requires_grad=True)
>>> withtorch.no_grad():
... embedding.weight[padding_idx]=torch.ones(3)
>>> embedding.weight
Parameter containing:
tensor([[ 1.0000,  1.0000,  1.0000],
        [-0.7895, -0.7089, -0.0364],
        [ 0.6778,  0.5803,  0.2678]], requires_grad=True)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. EmbeddingBag ( num_embeddings ,  embedding_dim ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  mode ,  sparse ,  _weight ,  include_last_offset ,  padding_idx ,  device ,  dtype ) [source] ¶",">>> # an EmbeddingBag module containing 10 tensors of size 3
>>> embedding_sum=nn.EmbeddingBag(10,3,mode='sum')
>>> # a batch of 2 samples of 4 indices each
>>> input=torch.tensor([1,2,4,5,4,3,2,9],dtype=torch.long)
>>> offsets=torch.tensor([0,4],dtype=torch.long)
>>> embedding_sum(input,offsets)
tensor([[-0.8861, -5.4350, -0.0523],
        [ 1.1306, -2.5798, -1.0044]])>>> # Example with padding_idx
>>> embedding_sum=nn.EmbeddingBag(10,3,mode='sum',padding_idx=2)
>>> input=torch.tensor([2,2,2,2,4,3,2,9],dtype=torch.long)
>>> offsets=torch.tensor([0,4],dtype=torch.long)
>>> embedding_sum(input,offsets)
tensor([[ 0.0000,  0.0000,  0.0000],
        [-0.7082,  3.2145, -2.6251]])>>> # An EmbeddingBag can be loaded from an Embedding like so
>>> embedding=nn.Embedding(10,3,padding_idx=2)
>>> embedding_sum=nn.EmbeddingBag.from_pretrained(
        embedding.weight,
        padding_idx=embedding.padding_idx,
        mode='sum')
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. L1Loss ( size_average ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.L1Loss()
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.randn(3,5)
>>> output=loss(input,target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MSELoss ( size_average ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.MSELoss()
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.randn(3,5)
>>> output=loss(input,target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. CrossEntropyLoss ( weight ,  size_average ,  ignore_index ,  reduce ,  reduction ,  label_smoothing ) [source] ¶",">>> # Example of target with class indices
>>> loss=nn.CrossEntropyLoss()
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.empty(3,dtype=torch.long).random_(5)
>>> output=loss(input,target)
>>> output.backward()
>>>
>>> # Example of target with class probabilities
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.randn(3,5).softmax(dim=1)
>>> output=loss(input,target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. CTCLoss ( blank ,  reduction ,  zero_infinity ) [source] ¶",">>> # Target are to be padded
>>> T=50# Input sequence length
>>> C=20# Number of classes (including blank)
>>> N=16# Batch size
>>> S=30# Target sequence length of longest target in batch (padding length)
>>> S_min=10# Minimum target length, for demonstration purposes
>>>
>>> # Initialize random batch of input vectors, for *size = (T,N,C)
>>> input=torch.randn(T,N,C).log_softmax(2).detach().requires_grad_()
>>>
>>> # Initialize random batch of targets (0 = blank, 1:C = classes)
>>> target=torch.randint(low=1,high=C,size=(N,S),dtype=torch.long)
>>>
>>> input_lengths=torch.full(size=(N,),fill_value=T,dtype=torch.long)
>>> target_lengths=torch.randint(low=S_min,high=S,size=(N,),dtype=torch.long)
>>> ctc_loss=nn.CTCLoss()
>>> loss=ctc_loss(input,target,input_lengths,target_lengths)
>>> loss.backward()
>>>
>>>
>>> # Target are to be un-padded
>>> T=50# Input sequence length
>>> C=20# Number of classes (including blank)
>>> N=16# Batch size
>>>
>>> # Initialize random batch of input vectors, for *size = (T,N,C)
>>> input=torch.randn(T,N,C).log_softmax(2).detach().requires_grad_()
>>> input_lengths=torch.full(size=(N,),fill_value=T,dtype=torch.long)
>>>
>>> # Initialize random batch of targets (0 = blank, 1:C = classes)
>>> target_lengths=torch.randint(low=1,high=T,size=(N,),dtype=torch.long)
>>> target=torch.randint(low=1,high=C,size=(sum(target_lengths),),dtype=torch.long)
>>> ctc_loss=nn.CTCLoss()
>>> loss=ctc_loss(input,target,input_lengths,target_lengths)
>>> loss.backward()
>>>
>>>
>>> # Target are to be un-padded and unbatched (effectively N=1)
>>> T=50# Input sequence length
>>> C=20# Number of classes (including blank)
>>>
>>> # Initialize random batch of input vectors, for *size = (T,C)
>>> input=torch.randn(T,C).log_softmax(2).detach().requires_grad_()
>>> input_lengths=torch.tensor(T,dtype=torch.long)
>>>
>>> # Initialize random batch of targets (0 = blank, 1:C = classes)
>>> target_lengths=torch.randint(low=1,high=T,size=(),dtype=torch.long)
>>> target=torch.randint(low=1,high=C,size=(target_lengths,),dtype=torch.long)
>>> ctc_loss=nn.CTCLoss()
>>> loss=ctc_loss(input,target,input_lengths,target_lengths)
>>> loss.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. NLLLoss ( weight ,  size_average ,  ignore_index ,  reduce ,  reduction ) [source] ¶",">>> m=nn.LogSoftmax(dim=1)
>>> loss=nn.NLLLoss()
>>> # input is of size N x C = 3 x 5
>>> input=torch.randn(3,5,requires_grad=True)
>>> # each element in target has to have 0 <= value < C
>>> target=torch.tensor([1,0,4])
>>> output=loss(m(input),target)
>>> output.backward()
>>>
>>>
>>> # 2D loss example (used, for example, with image inputs)
>>> N,C=5,4
>>> loss=nn.NLLLoss()
>>> # input is of size N x C x height x width
>>> data=torch.randn(N,16,10,10)
>>> conv=nn.Conv2d(16,C,(3,3))
>>> m=nn.LogSoftmax(dim=1)
>>> # each element in target has to have 0 <= value < C
>>> target=torch.empty(N,8,8,dtype=torch.long).random_(0,C)
>>> output=loss(m(conv(data)),target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. PoissonNLLLoss ( log_input ,  full ,  size_average ,  eps ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.PoissonNLLLoss()
>>> log_input=torch.randn(5,2,requires_grad=True)
>>> target=torch.randn(5,2)
>>> output=loss(log_input,target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. KLDivLoss ( size_average ,  reduce ,  reduction ,  log_target ) [source] ¶",">>> importtorch.nn.functionalasF
>>> kl_loss=nn.KLDivLoss(reduction=""batchmean"")
>>> # input should be a distribution in the log space
>>> input=F.log_softmax(torch.randn(3,5,requires_grad=True),dim=1)
>>> # Sample a batch of distributions. Usually this would come from the dataset
>>> target=F.softmax(torch.rand(3,5),dim=1)
>>> output=kl_loss(input,target)>>> kl_loss=nn.KLDivLoss(reduction=""batchmean"",log_target=True)
>>> log_target=F.log_softmax(torch.rand(3,5),dim=1)
>>> output=kl_loss(input,log_target)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BCELoss ( weight ,  size_average ,  reduce ,  reduction ) [source] ¶",">>> m=nn.Sigmoid()
>>> loss=nn.BCELoss()
>>> input=torch.randn(3,requires_grad=True)
>>> target=torch.empty(3).random_(2)
>>> output=loss(m(input),target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BCEWithLogitsLoss ( weight ,  size_average ,  reduce ,  reduction ,  pos_weight ) [source] ¶",">>> target=torch.ones([10,64],dtype=torch.float32)# 64 classes, batch size = 10
>>> output=torch.full([10,64],1.5)# A prediction (logit)
>>> pos_weight=torch.ones([64])# All weights are equal to 1
>>> criterion=torch.nn.BCEWithLogitsLoss(pos_weight=pos_weight)
>>> criterion(output,target)# -log(sigmoid(1.5))
tensor(0.20...)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MarginRankingLoss ( margin ,  size_average ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.MarginRankingLoss()
>>> input1=torch.randn(3,requires_grad=True)
>>> input2=torch.randn(3,requires_grad=True)
>>> target=torch.randn(3).sign()
>>> output=loss(input1,input2,target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MultiLabelMarginLoss ( size_average ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.MultiLabelMarginLoss()
>>> x=torch.FloatTensor([[0.1,0.2,0.4,0.8]])
>>> # for target y, only consider labels 3 and 0, not after label -1
>>> y=torch.LongTensor([[3,0,-1,1]])
>>> # 0.25 * ((1-(0.1-0.2)) + (1-(0.1-0.4)) + (1-(0.8-0.2)) + (1-(0.8-0.4)))
>>> loss(x,y)
tensor(0.85...)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MultiMarginLoss ( p ,  margin ,  weight ,  size_average ,  reduce ,  reduction ) [source] ¶",">>> loss=nn.MultiMarginLoss()
>>> x=torch.tensor([[0.1,0.2,0.4,0.8]])
>>> y=torch.tensor([3])
>>> # 0.25 * ((1-(0.8-0.1)) + (1-(0.8-0.2)) + (1-(0.8-0.4)))
>>> loss(x,y)
tensor(0.32...)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. TripletMarginLoss ( margin ,  p ,  eps ,  swap ,  size_average ,  reduce ,  reduction ) [source] ¶",">>> triplet_loss=nn.TripletMarginLoss(margin=1.0,p=2)
>>> anchor=torch.randn(100,128,requires_grad=True)
>>> positive=torch.randn(100,128,requires_grad=True)
>>> negative=torch.randn(100,128,requires_grad=True)
>>> output=triplet_loss(anchor,positive,negative)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. TripletMarginWithDistanceLoss ( * ,  distance_function ,  margin ,  swap ,  reduction ) [source] ¶",">>> # Initialize embeddings
>>> embedding=nn.Embedding(1000,128)
>>> anchor_ids=torch.randint(0,1000,(1,))
>>> positive_ids=torch.randint(0,1000,(1,))
>>> negative_ids=torch.randint(0,1000,(1,))
>>> anchor=embedding(anchor_ids)
>>> positive=embedding(positive_ids)
>>> negative=embedding(negative_ids)
>>>
>>> # Built-in Distance Function
>>> triplet_loss=>>> nn.TripletMarginWithDistanceLoss(distance_function=nn.PairwiseDistance())
>>> output=triplet_loss(anchor,positive,negative)
>>> output.backward()
>>>
>>> # Custom Distance Function
>>> defl_infinity(x1,x2):
>>> returntorch.max(torch.abs(x1-x2),dim=1).values
>>>
>>> triplet_loss=(
>>> nn.TripletMarginWithDistanceLoss(distance_function=l_infinity,margin=1.5))
>>> output=triplet_loss(anchor,positive,negative)
>>> output.backward()
>>>
>>> # Custom Distance Function (Lambda)
>>> triplet_loss=(
>>> nn.TripletMarginWithDistanceLoss(
>>> distance_function=lambdax,y:1.0-F.cosine_similarity(x,y)))
>>> output=triplet_loss(anchor,positive,negative)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. PixelShuffle ( upscale_factor ) [source] ¶",">>> pixel_shuffle=nn.PixelShuffle(3)
>>> input=torch.randn(1,9,4,4)
>>> output=pixel_shuffle(input)
>>> print(output.size())
torch.Size([1, 1, 12, 12])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. PixelUnshuffle ( downscale_factor ) [source] ¶",">>> pixel_unshuffle=nn.PixelUnshuffle(3)
>>> input=torch.randn(1,1,12,12)
>>> output=pixel_unshuffle(input)
>>> print(output.size())
torch.Size([1, 9, 4, 4])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Upsample ( size ,  scale_factor ,  mode ,  align_corners ,  recompute_scale_factor ) [source] ¶",">>> input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)
>>> input
tensor([[[[1., 2.],
          [3., 4.]]]])>>> m=nn.Upsample(scale_factor=2,mode='nearest')
>>> m(input)
tensor([[[[1., 1., 2., 2.],
          [1., 1., 2., 2.],
          [3., 3., 4., 4.],
          [3., 3., 4., 4.]]]])>>> m=nn.Upsample(scale_factor=2,mode='bilinear')# align_corners=False
>>> m(input)
tensor([[[[1.0000, 1.2500, 1.7500, 2.0000],
          [1.5000, 1.7500, 2.2500, 2.5000],
          [2.5000, 2.7500, 3.2500, 3.5000],
          [3.0000, 3.2500, 3.7500, 4.0000]]]])>>> m=nn.Upsample(scale_factor=2,mode='bilinear',align_corners=True)
>>> m(input)
tensor([[[[1.0000, 1.3333, 1.6667, 2.0000],
          [1.6667, 2.0000, 2.3333, 2.6667],
          [2.3333, 2.6667, 3.0000, 3.3333],
          [3.0000, 3.3333, 3.6667, 4.0000]]]])>>> # Try scaling the same data in a larger tensor
>>> input_3x3=torch.zeros(3,3).view(1,1,3,3)
>>> input_3x3[:,:,:2,:2].copy_(input)
tensor([[[[1., 2.],
          [3., 4.]]]])
>>> input_3x3
tensor([[[[1., 2., 0.],
          [3., 4., 0.],
          [0., 0., 0.]]]])>>> m=nn.Upsample(scale_factor=2,mode='bilinear')# align_corners=False
>>> # Notice that values in top left corner are the same with the small input (except at boundary)
>>> m(input_3x3)
tensor([[[[1.0000, 1.2500, 1.7500, 1.5000, 0.5000, 0.0000],
          [1.5000, 1.7500, 2.2500, 1.8750, 0.6250, 0.0000],
          [2.5000, 2.7500, 3.2500, 2.6250, 0.8750, 0.0000],
          [2.2500, 2.4375, 2.8125, 2.2500, 0.7500, 0.0000],
          [0.7500, 0.8125, 0.9375, 0.7500, 0.2500, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]])>>> m=nn.Upsample(scale_factor=2,mode='bilinear',align_corners=True)
>>> # Notice that values in top left corner are now changed
>>> m(input_3x3)
tensor([[[[1.0000, 1.4000, 1.8000, 1.6000, 0.8000, 0.0000],
          [1.8000, 2.2000, 2.6000, 2.2400, 1.1200, 0.0000],
          [2.6000, 3.0000, 3.4000, 2.8800, 1.4400, 0.0000],
          [2.4000, 2.7200, 3.0400, 2.5600, 1.2800, 0.0000],
          [1.2000, 1.3600, 1.5200, 1.2800, 0.6400, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. UpsamplingNearest2d ( size ,  scale_factor ) [source] ¶",">>> input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)
>>> input
tensor([[[[1., 2.],
          [3., 4.]]]])>>> m=nn.UpsamplingNearest2d(scale_factor=2)
>>> m(input)
tensor([[[[1., 1., 2., 2.],
          [1., 1., 2., 2.],
          [3., 3., 4., 4.],
          [3., 3., 4., 4.]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. UpsamplingBilinear2d ( size ,  scale_factor ) [source] ¶",">>> input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)
>>> input
tensor([[[[1., 2.],
          [3., 4.]]]])>>> m=nn.UpsamplingBilinear2d(scale_factor=2)
>>> m(input)
tensor([[[[1.0000, 1.3333, 1.6667, 2.0000],
          [1.6667, 2.0000, 2.3333, 2.6667],
          [2.3333, 2.6667, 3.0000, 3.3333],
          [3.0000, 3.3333, 3.6667, 4.0000]]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. ChannelShuffle ( groups ) [source] ¶",">>> channel_shuffle=nn.ChannelShuffle(2)
>>> input=torch.randn(1,4,2,2)
>>> print(input)
[[[[1, 2],
   [3, 4]],
  [[5, 6],
   [7, 8]],
  [[9, 10],
   [11, 12]],
  [[13, 14],
   [15, 16]],
 ]]
>>> output=channel_shuffle(input)
>>> print(output)
[[[[1, 2],
   [3, 4]],
  [[9, 10],
   [11, 12]],
  [[5, 6],
   [7, 8]],
  [[13, 14],
   [15, 16]],
 ]]
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. DataParallel ( module ,  device_ids ,  output_device ,  dim ) [source] ¶",">>> net=torch.nn.DataParallel(model,device_ids=[0,1,2])
>>> output=net(input_var)# input_var can be on any device, including CPU
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn.parallel. DistributedDataParallel ( module ,  device_ids ,  output_device ,  dim ,  broadcast_buffers ,  process_group ,  bucket_cap_mb ,  find_unused_parameters ,  check_reduction ,  gradient_as_bucket_view ,  static_graph ) [source] ¶",">>> torch.distributed.init_process_group(backend='nccl',world_size=4,init_method='...')
>>> net=torch.nn.parallel.DistributedDataParallel(model)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.utils. weight_norm ( module ,  name ,  dim ) [source] ¶",">>> m=weight_norm(nn.Linear(20,40),name='weight')
>>> m
Linear(in_features=20, out_features=40, bias=True)
>>> m.weight_g.size()
torch.Size([40, 1])
>>> m.weight_v.size()
torch.Size([40, 20])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.utils. spectral_norm ( module ,  name ,  n_power_iterations ,  eps ,  dim ) [source] ¶",">>> m=spectral_norm(nn.Linear(20,40))
>>> m
Linear(in_features=20, out_features=40, bias=True)
>>> m.weight_u.size()
torch.Size([40])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.utils. skip_init ( module_cls ,  * ,  ** ) [source] ¶",">>> importtorch
>>> m=torch.nn.utils.skip_init(torch.nn.Linear,5,1)
>>> m.weight
Parameter containing:
tensor([[0.0000e+00, 1.5846e+29, 7.8307e+00, 2.5250e-29, 1.1210e-44]],
       requires_grad=True)
>>> m2=torch.nn.utils.skip_init(torch.nn.Linear,in_features=6,out_features=1)
>>> m2.weight
Parameter containing:
tensor([[-1.4677e+24,  4.5915e-41,  1.4013e-45,  0.0000e+00, -1.4677e+24,
          4.5915e-41]], requires_grad=True)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.utils.parametrizations. orthogonal ( module ,  name ,  orthogonal_map ,  * ,  use_trivialization ) [source] ¶",">>> orth_linear=orthogonal(nn.Linear(20,40))
>>> orth_linear
ParametrizedLinear(
in_features=20, out_features=40, bias=True
(parametrizations): ModuleDict(
    (weight): ParametrizationList(
    (0): _Orthogonal()
    )
)
)
>>> Q=orth_linear.weight
>>> torch.dist(Q.T@Q,torch.eye(20))
tensor(4.9332e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.utils.parametrizations. spectral_norm ( module ,  name ,  n_power_iterations ,  eps ,  dim ) [source] ¶",">>> snm=spectral_norm(nn.Linear(20,40))
>>> snm
ParametrizedLinear(
  in_features=20, out_features=40, bias=True
  (parametrizations): ModuleDict(
    (weight): ParametrizationList(
      (0): _SpectralNorm()
    )
  )
)
>>> torch.linalg.matrix_norm(snm.weight,2)
tensor(1.0081, grad_fn=<AmaxBackward0>)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv1d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶",">>> inputs=torch.randn(33,16,30)
>>> filters=torch.randn(20,16,5)
>>> F.conv1d(inputs,filters)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv2d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶",">>> # With square kernels and equal stride
>>> filters=torch.randn(8,4,3,3)
>>> inputs=torch.randn(1,4,5,5)
>>> F.conv2d(inputs,filters,padding=1)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv3d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶",">>> filters=torch.randn(33,16,3,3,3)
>>> inputs=torch.randn(20,16,50,10,20)
>>> F.conv3d(inputs,filters)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv_transpose1d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶",">>> inputs=torch.randn(20,16,50)
>>> weights=torch.randn(16,33,5)
>>> F.conv_transpose1d(inputs,weights)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv_transpose2d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶",">>> # With square kernels and equal stride
>>> inputs=torch.randn(1,4,5,5)
>>> weights=torch.randn(4,8,3,3)
>>> F.conv_transpose2d(inputs,weights,padding=1)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. conv_transpose3d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶",">>> inputs=torch.randn(20,16,50,10,20)
>>> weights=torch.randn(16,33,3,3,3)
>>> F.conv_transpose3d(inputs,weights)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. avg_pool1d ( input ,  kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad )   → ¶",">>> # pool of square window of size=3, stride=2
>>> input=torch.tensor([[[1,2,3,4,5,6,7]]],dtype=torch.float32)
>>> F.avg_pool1d(input,kernel_size=3,stride=2)
tensor([[[ 2.,  4.,  6.]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. embedding ( input ,  weight ,  padding_idx ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  sparse ) [source] ¶",">>> # a batch of 2 samples of 4 indices each
>>> input=torch.tensor([[1,2,4,5],[4,3,2,9]])
>>> # an embedding matrix containing 10 tensors of size 3
>>> embedding_matrix=torch.rand(10,3)
>>> F.embedding(input,embedding_matrix)
tensor([[[ 0.8490,  0.9625,  0.6753],
         [ 0.9666,  0.7761,  0.6108],
         [ 0.6246,  0.9751,  0.3618],
         [ 0.4161,  0.2419,  0.7383]],        [[ 0.6246,  0.9751,  0.3618],
         [ 0.0237,  0.7794,  0.0528],
         [ 0.9666,  0.7761,  0.6108],
         [ 0.3385,  0.8612,  0.1867]]])>>> # example with padding_idx
>>> weights=torch.rand(10,3)
>>> weights[0,:].zero_()
>>> embedding_matrix=weights
>>> input=torch.tensor([[0,2,0,5]])
>>> F.embedding(input,embedding_matrix,padding_idx=0)
tensor([[[ 0.0000,  0.0000,  0.0000],
         [ 0.5609,  0.5384,  0.8720],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.6262,  0.2438,  0.7471]]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. embedding_bag ( input ,  weight ,  offsets ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  mode ,  sparse ,  per_sample_weights ,  include_last_offset ,  padding_idx ) [source] ¶",">>> # an Embedding module containing 10 tensors of size 3
>>> embedding_matrix=torch.rand(10,3)
>>> # a batch of 2 samples of 4 indices each
>>> input=torch.tensor([1,2,4,5,4,3,2,9])
>>> offsets=torch.tensor([0,4])
>>> F.embedding_bag(input,embedding_matrix,offsets)
tensor([[ 0.3397,  0.3552,  0.5545],
        [ 0.5893,  0.4386,  0.5882]])>>> # example with padding_idx
>>> embedding_matrix=torch.rand(10,3)
>>> input=torch.tensor([2,2,2,2,4,3,2,9])
>>> offsets=torch.tensor([0,4])
>>> F.embedding_bag(input,embedding_matrix,offsets,padding_idx=2,mode='sum')
tensor([[ 0.0000,  0.0000,  0.0000],
        [-0.7082,  3.2145, -2.6251]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. cosine_similarity ( x1 ,  x2 ,  dim ,  eps )   → ¶",">>> input1=torch.randn(100,128)
>>> input2=torch.randn(100,128)
>>> output=F.cosine_similarity(input1,input2)
>>> print(output)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. binary_cross_entropy ( input ,  target ,  weight ,  size_average ,  reduce ,  reduction ) [source] ¶",">>> input=torch.randn(3,2,requires_grad=True)
>>> target=torch.rand(3,2,requires_grad=False)
>>> loss=F.binary_cross_entropy(torch.sigmoid(input),target)
>>> loss.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. binary_cross_entropy_with_logits ( input ,  target ,  weight ,  size_average ,  reduce ,  reduction ,  pos_weight ) [source] ¶",">>> input=torch.randn(3,requires_grad=True)
>>> target=torch.empty(3).random_(2)
>>> loss=F.binary_cross_entropy_with_logits(input,target)
>>> loss.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. cross_entropy ( input ,  target ,  weight ,  size_average ,  ignore_index ,  reduce ,  reduction ,  label_smoothing ) [source] ¶",">>> # Example of target with class indices
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.randint(5,(3,),dtype=torch.int64)
>>> loss=F.cross_entropy(input,target)
>>> loss.backward()
>>>
>>> # Example of target with class probabilities
>>> input=torch.randn(3,5,requires_grad=True)
>>> target=torch.randn(3,5).softmax(dim=1)
>>> loss=F.cross_entropy(input,target)
>>> loss.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. ctc_loss ( log_probs ,  targets ,  input_lengths ,  target_lengths ,  blank ,  reduction ,  zero_infinity ) [source] ¶",">>> log_probs=torch.randn(50,16,20).log_softmax(2).detach().requires_grad_()
>>> targets=torch.randint(1,20,(16,30),dtype=torch.long)
>>> input_lengths=torch.full((16,),50,dtype=torch.long)
>>> target_lengths=torch.randint(10,30,(16,),dtype=torch.long)
>>> loss=F.ctc_loss(log_probs,targets,input_lengths,target_lengths)
>>> loss.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. nll_loss ( input ,  target ,  weight ,  size_average ,  ignore_index ,  reduce ,  reduction ) [source] ¶",">>> # input is of size N x C = 3 x 5
>>> input=torch.randn(3,5,requires_grad=True)
>>> # each element in target has to have 0 <= value < C
>>> target=torch.tensor([1,0,4])
>>> output=F.nll_loss(F.log_softmax(input,dim=1),target)
>>> output.backward()
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. pixel_shuffle ( input ,  upscale_factor )   → ¶",">>> input=torch.randn(1,9,4,4)
>>> output=torch.nn.functional.pixel_shuffle(input,3)
>>> print(output.size())
torch.Size([1, 1, 12, 12])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. pixel_unshuffle ( input ,  downscale_factor )   → ¶",">>> input=torch.randn(1,1,12,12)
>>> output=torch.nn.functional.pixel_unshuffle(input,3)
>>> print(output.size())
torch.Size([1, 9, 4, 4])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. pad ( input ,  pad ,  mode ,  value )   → ¶",">>> t4d=torch.empty(3,3,4,2)
>>> p1d=(1,1)# pad last dim by 1 on each side
>>> out=F.pad(t4d,p1d,""constant"",0)# effectively zero padding
>>> print(out.size())
torch.Size([3, 3, 4, 4])
>>> p2d=(1,1,2,2)# pad last dim by (1, 1) and 2nd to last by (2, 2)
>>> out=F.pad(t4d,p2d,""constant"",0)
>>> print(out.size())
torch.Size([3, 3, 8, 4])
>>> t4d=torch.empty(3,3,4,2)
>>> p3d=(0,1,2,1,3,3)# pad by (0, 1), (2, 1), and (3, 3)
>>> out=F.pad(t4d,p3d,""constant"",0)
>>> print(out.size())
torch.Size([3, 9, 7, 3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. new_tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  layout ,  pin_memory )   → ¶",">>> tensor=torch.ones((2,),dtype=torch.int8)
>>> data=[[0,1],[2,3]]
>>> tensor.new_tensor(data)
tensor([[ 0,  1],
        [ 2,  3]], dtype=torch.int8)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. requires_grad_ ( requires_grad )   → ¶",">>> # Let's say we want to preprocess some saved weights and use
>>> # the result as new weights.
>>> saved_weights=[0.1,0.2,0.3,0.25]
>>> loaded_weights=torch.tensor(saved_weights)
>>> weights=preprocess(loaded_weights)# some function
>>> weights
tensor([-0.5503,  0.4926, -2.1158, -0.8303])>>> # Now, start to record operations done to weights
>>> weights.requires_grad_()
>>> out=weights.pow(2).sum()
>>> out.backward()
>>> weights.grad
tensor([-1.1007,  0.9853, -4.2316, -1.6606])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. item ( )   → ¶",">>> x=torch.tensor([1.0])
>>> x.item()
1.0
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to ( * ,  ** )   → ¶",">>> tensor=torch.randn(2,2)# Initially dtype=float32, device=cpu
>>> tensor.to(torch.float64)
tensor([[-0.5044,  0.0005],
        [ 0.3310, -0.0584]], dtype=torch.float64)>>> cuda0=torch.device('cuda:0')
>>> tensor.to(cuda0)
tensor([[-0.5044,  0.0005],
        [ 0.3310, -0.0584]], device='cuda:0')>>> tensor.to(cuda0,dtype=torch.float64)
tensor([[-0.5044,  0.0005],
        [ 0.3310, -0.0584]], dtype=torch.float64, device='cuda:0')>>> other=torch.randn((),dtype=torch.float64,device=cuda0)
>>> tensor.to(other,non_blocking=True)
tensor([[-0.5044,  0.0005],
        [ 0.3310, -0.0584]], dtype=torch.float64, device='cuda:0')
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. new_full ( size ,  fill_value ,  * ,  dtype ,  device ,  requires_grad ,  layout ,  pin_memory )   → ¶",">>> tensor=torch.ones((2,),dtype=torch.float64)
>>> tensor.new_full((3,4),3.141592)
tensor([[ 3.1416,  3.1416,  3.1416,  3.1416],
        [ 3.1416,  3.1416,  3.1416,  3.1416],
        [ 3.1416,  3.1416,  3.1416,  3.1416]], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. new_empty ( size ,  * ,  dtype ,  device ,  requires_grad ,  layout ,  pin_memory )   → ¶",">>> tensor=torch.ones(())
>>> tensor.new_empty((2,3))
tensor([[ 5.8182e-18,  4.5765e-41, -1.0545e+30],
        [ 3.0949e-41,  4.4842e-44,  0.0000e+00]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. new_ones ( size ,  * ,  dtype ,  device ,  requires_grad ,  layout ,  pin_memory )   → ¶",">>> tensor=torch.tensor((),dtype=torch.int32)
>>> tensor.new_ones((2,3))
tensor([[ 1,  1,  1],
        [ 1,  1,  1]], dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. new_zeros ( size ,  * ,  dtype ,  device ,  requires_grad ,  layout ,  pin_memory )   → ¶",">>> tensor=torch.tensor((),dtype=torch.float64)
>>> tensor.new_zeros((2,3))
tensor([[ 0.,  0.,  0.],
        [ 0.,  0.,  0.]], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. fill_diagonal_ ( fill_value ,  wrap )   → ¶",">>> a=torch.zeros(3,3)
>>> a.fill_diagonal_(5)
tensor([[5., 0., 0.],
        [0., 5., 0.],
        [0., 0., 5.]])
>>> b=torch.zeros(7,3)
>>> b.fill_diagonal_(5)
tensor([[5., 0., 0.],
        [0., 5., 0.],
        [0., 0., 5.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]])
>>> c=torch.zeros(7,3)
>>> c.fill_diagonal_(5,wrap=True)
tensor([[5., 0., 0.],
        [0., 5., 0.],
        [0., 0., 5.],
        [0., 0., 0.],
        [5., 0., 0.],
        [0., 5., 0.],
        [0., 0., 5.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. element_size ( )   → ¶",">>> torch.tensor([]).element_size()
4
>>> torch.tensor([],dtype=torch.uint8).element_size()
1
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. expand ( * )   → ¶",">>> x=torch.tensor([[1],[2],[3]])
>>> x.size()
torch.Size([3, 1])
>>> x.expand(3,4)
tensor([[ 1,  1,  1,  1],
        [ 2,  2,  2,  2],
        [ 3,  3,  3,  3]])
>>> x.expand(-1,4)# -1 means not changing the size of that dimension
tensor([[ 1,  1,  1,  1],
        [ 2,  2,  2,  2],
        [ 3,  3,  3,  3]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. get_device ( ) ) ¶",">>> x=torch.randn(3,4,5,device='cuda:0')
>>> x.get_device()
0
>>> x.cpu().get_device()# RuntimeError: get_device is not implemented for type torch.FloatTensor
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. index_copy_ ( dim ,  index ,  tensor )   → ¶",">>> x=torch.zeros(5,3)
>>> t=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)
>>> index=torch.tensor([0,4,2])
>>> x.index_copy_(0,index,t)
tensor([[ 1.,  2.,  3.],
        [ 0.,  0.,  0.],
        [ 7.,  8.,  9.],
        [ 0.,  0.,  0.],
        [ 4.,  5.,  6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. is_leaf ¶",">>> a=torch.rand(10,requires_grad=True)
>>> a.is_leaf
True
>>> b=torch.rand(10,requires_grad=True).cuda()
>>> b.is_leaf
False
# b was created by the operation that cast a cpu Tensor into a cuda Tensor
>>> c=torch.rand(10,requires_grad=True)+2
>>> c.is_leaf
False
# c was created by the addition operation
>>> d=torch.rand(10).cuda()
>>> d.is_leaf
True
# d does not require gradients and so has no operation creating it (that is tracked by the autograd engine)
>>> e=torch.rand(10).cuda().requires_grad_()
>>> e.is_leaf
True
# e requires gradients and has no operations creating it
>>> f=torch.rand(10,requires_grad=True,device=""cuda"")
>>> f.is_leaf
True
# f requires grad, has no operation creating it
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. narrow ( dimension ,  start ,  length )   → ¶",">>> x=torch.tensor([[1,2,3],[4,5,6],[7,8,9]])
>>> x.narrow(0,0,2)
tensor([[ 1,  2,  3],
        [ 4,  5,  6]])
>>> x.narrow(1,1,2)
tensor([[ 2,  3],
        [ 5,  6],
        [ 8,  9]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. put_ ( index ,  source ,  accumulate )   → ¶",">>> src=torch.tensor([[4,3,5],
... [6,7,8]])
>>> src.put_(torch.tensor([1,3]),torch.tensor([9,10]))
tensor([[  4,   9,   5],
        [ 10,   7,   8]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. register_hook ( hook ) [source] ¶",">>> v=torch.tensor([0.,0.,0.],requires_grad=True)
>>> h=v.register_hook(lambdagrad:grad*2)# double the gradient
>>> v.backward(torch.tensor([1.,2.,3.]))
>>> v.grad 2
 4
 6
[torch.FloatTensor of size (3,)]>>> h.remove()# removes the hook
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. repeat ( * )   → ¶",">>> x=torch.tensor([1,2,3])
>>> x.repeat(4,2)
tensor([[ 1,  2,  3,  1,  2,  3],
        [ 1,  2,  3,  1,  2,  3],
        [ 1,  2,  3,  1,  2,  3],
        [ 1,  2,  3,  1,  2,  3]])
>>> x.repeat(4,2,1).size()
torch.Size([4, 2, 3])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. resize_ ( * ,  memory_format )   → ¶",">>> x=torch.tensor([[1,2],[3,4],[5,6]])
>>> x.resize_(2,2)
tensor([[ 1,  2],
        [ 3,  4]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. size ( dim )   → ¶",">>> t=torch.empty(3,4,5)
>>> t.size()
torch.Size([3, 4, 5])
>>> t.size(dim=1)
4
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. sparse_mask ( mask )   → ¶",">>> nse=5
>>> dims=(5,5,2,2)
>>> I=torch.cat([torch.randint(0,dims[0],size=(nse,)),
... torch.randint(0,dims[1],size=(nse,))],0).reshape(2,nse)
>>> V=torch.randn(nse,dims[2],dims[3])
>>> S=torch.sparse_coo_tensor(I,V,dims).coalesce()
>>> D=torch.randn(dims)
>>> D.sparse_mask(S)
tensor(indices=tensor([[0, 0, 0, 2],
                       [0, 1, 4, 3]]),
       values=tensor([[[ 1.6550,  0.2397],
                       [-0.1611, -0.0779]],                      [[ 0.2326, -1.0558],
                       [ 1.4711,  1.9678]],                      [[-0.5138, -0.0411],
                       [ 1.9417,  0.5158]],                      [[ 0.0793,  0.0036],
                       [-0.2569, -0.1055]]]),
       size=(5, 5, 2, 2), nnz=4, layout=torch.sparse_coo)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. storage_offset ( )   → ¶",">>> x=torch.tensor([1,2,3,4,5])
>>> x.storage_offset()
0
>>> x[3:].storage_offset()
3
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. stride ( dim )   → ¶",">>> x=torch.tensor([[1,2,3,4,5],[6,7,8,9,10]])
>>> x.stride()
(5, 1)
>>> x.stride(0)
5
>>> x.stride(-1)
1
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. tolist ( )   → ¶",">>> a=torch.randn(2,2)
>>> a.tolist()
[[0.012766935862600803, 0.5415473580360413],
 [-0.08909505605697632, 0.7729271650314331]]
>>> a[0,0].tolist()
0.012766935862600803
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_dense ( )   → ¶",">>> s=torch.sparse_coo_tensor(
... torch.tensor([[1,1],
... [0,2]]),
... torch.tensor([9,10]),
... size=(3,3))
>>> s.to_dense()
tensor([[ 0,  0,  0],
        [ 9,  0, 10],
        [ 0,  0,  0]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse ( sparseDims )   → ¶",">>> d=torch.tensor([[0,0,0],[9,0,10],[0,0,0]])
>>> d
tensor([[ 0,  0,  0],
        [ 9,  0, 10],
        [ 0,  0,  0]])
>>> d.to_sparse()
tensor(indices=tensor([[1, 1],
                       [0, 2]]),
       values=tensor([ 9, 10]),
       size=(3, 3), nnz=2, layout=torch.sparse_coo)
>>> d.to_sparse(1)
tensor(indices=tensor([[1]]),
       values=tensor([[ 9,  0, 10]]),
       size=(3, 3), nnz=1, layout=torch.sparse_coo)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_csr ( )   → ¶",">>> dense=torch.randn(5,5)
>>> sparse=dense.to_sparse_csr()
>>> sparse._nnz()
25
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_csc ( )   → ¶",">>> dense=torch.randn(5,5)
>>> sparse=dense.to_sparse_csc()
>>> sparse._nnz()
25
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_bsr ( blocksize )   → ¶",">>> dense=torch.randn(10,10)
>>> sparse=dense.to_sparse_csr()
>>> sparse_bsr=sparse.to_sparse_bsr((5,5))
>>> sparse_bsr.col_indices()
tensor([0, 1, 0, 1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_bsc ( blocksize )   → ¶",">>> dense=torch.randn(10,10)
>>> sparse=dense.to_sparse_csr()
>>> sparse_bsc=sparse.to_sparse_bsc((5,5))
>>> sparse_bsc.row_indices()
tensor([0, 1, 0, 1])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. unfold ( dimension ,  size ,  step )   → ¶",">>> x=torch.arange(1.,8)
>>> x
tensor([ 1.,  2.,  3.,  4.,  5.,  6.,  7.])
>>> x.unfold(0,2,1)
tensor([[ 1.,  2.],
        [ 2.,  3.],
        [ 3.,  4.],
        [ 4.,  5.],
        [ 5.,  6.],
        [ 6.,  7.]])
>>> x.unfold(0,2,2)
tensor([[ 1.,  2.],
        [ 3.,  4.],
        [ 5.,  6.]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. view ( * )   → ¶",">>> x=torch.randn(4,4)
>>> x.size()
torch.Size([4, 4])
>>> y=x.view(16)
>>> y.size()
torch.Size([16])
>>> z=x.view(-1,8)# the size -1 is inferred from other dimensions
>>> z.size()
torch.Size([2, 8])>>> a=torch.randn(1,2,3,4)
>>> a.size()
torch.Size([1, 2, 3, 4])
>>> b=a.transpose(1,2)# Swaps 2nd and 3rd dimension
>>> b.size()
torch.Size([1, 3, 2, 4])
>>> c=a.view(1,3,2,4)# Does not change tensor layout in memory
>>> c.size()
torch.Size([1, 3, 2, 4])
>>> torch.equal(b,c)
False
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. view ( * )   → ¶",">>> x=torch.randn(4,4)
>>> x
tensor([[ 0.9482, -0.0310,  1.4999, -0.5316],
        [-0.1520,  0.7472,  0.5617, -0.8649],
        [-2.4724, -0.0334, -0.2976, -0.8499],
        [-0.2109,  1.9913, -0.9607, -0.6123]])
>>> x.dtype
torch.float32>>> y=x.view(torch.int32)
>>> y
tensor([[ 1064483442, -1124191867,  1069546515, -1089989247],
        [-1105482831,  1061112040,  1057999968, -1084397505],
        [-1071760287, -1123489973, -1097310419, -1084649136],
        [-1101533110,  1073668768, -1082790149, -1088634448]],
    dtype=torch.int32)
>>> y[0,0]=1000000000
>>> x
tensor([[ 0.0047, -0.0310,  1.4999, -0.5316],
        [-0.1520,  0.7472,  0.5617, -0.8649],
        [-2.4724, -0.0334, -0.2976, -0.8499],
        [-0.2109,  1.9913, -0.9607, -0.6123]])>>> x.view(torch.cfloat)
tensor([[ 0.0047-0.0310j,  1.4999-0.5316j],
        [-0.1520+0.7472j,  0.5617-0.8649j],
        [-2.4724-0.0334j, -0.2976-0.8499j],
        [-0.2109+1.9913j, -0.9607-0.6123j]])
>>> x.view(torch.cfloat).size()
torch.Size([4, 2])>>> x.view(torch.uint8)
tensor([[  0, 202, 154,  59, 182, 243, 253, 188, 185, 252, 191,  63, 240,  22,
           8, 191],
        [227, 165,  27, 190, 128,  72,  63,  63, 146, 203,  15,  63,  22, 106,
          93, 191],
        [205,  59,  30, 192, 112, 206,   8, 189,   7,  95, 152, 190,  12, 147,
          89, 191],
        [ 43, 246,  87, 190, 235, 226, 254,  63, 111, 240, 117, 191, 177, 191,
          28, 191]], dtype=torch.uint8)
>>> x.view(torch.uint8).size()
torch.Size([4, 16])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.autograd.forward_ad. dual_level [source] ¶",">>> x=torch.tensor([1])
>>> x_t=torch.tensor([1])
>>> withdual_level():
... inp=make_dual(x,x_t)
... # Do computations with inp
... out=your_fn(inp)
... _,grad=unpack_dual(out)
>>> gradisNone
False
>>> # After exiting the level, the grad is deleted
>>> _,grad_after=unpack_dual(out)
>>> gradisNone
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.autograd.forward_ad. make_dual ( tensor ,  tangent ,  * ,  level ) [source] ¶",">>> withdual_level():
... inp=make_dual(x,v)
... out=f(inp)
... y,jvp=unpack_dual(out)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.autograd.forward_ad. unpack_dual ( tensor ,  * ,  level ) [source] ¶",">>> withdual_level():
... inp=make_dual(x,x_t)
... out=f(inp)
... y,jvp=unpack_dual(out)
... jvp=unpack_dual(out).tangent
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.cuda.jiterator. _create_jit_fn ( code_string ,  ** ) [source] ¶","code_string=""template <typename T> T my_kernel(T x, T y, T alpha) { return -x + alpha * y; }""
jitted_fn=create_jit_fn(code_string,alpha=1.0)
a=torch.rand(3,device='cuda')
b=torch.rand(3,device='cuda')
# invoke jitted function like a regular python function
result=jitted_fn(a,b,alpha=3.14)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 12
    =
    ^
SyntaxError: invalid syntax
"
"
 torch.cuda.jiterator. _create_jit_fn ( code_string ,  ** ) [source] ¶","code_string=""template <typename T> T util_fn(T x, T y) { return ::sin(x) + ::cos(y); }""
code_string+=""template <typename T> T my_kernel(T x, T y, T val) { return ::min(val, util_fn(x, y)); }""
jitted_fn=create_jit_fn(code_string,val=0.0)
a=torch.rand(3,device='cuda')
b=torch.rand(3,device='cuda')
# invoke jitted function like a regular python function
result=jitted_fn(a,b)# using default val=0.0
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 12
    =
    ^
SyntaxError: invalid syntax
"
"
 torch.cuda.jiterator. _create_multi_output_jit_fn ( code_string ,  num_outputs ,  ** ) [source] ¶","code_string=""template <typename T> void my_kernel(T x, T y, T alpha, T& out) { out = -x + alpha * y; }""
jitted_fn=create_jit_fn(code_string,alpha=1.0)
a=torch.rand(3,device='cuda')
b=torch.rand(3,device='cuda')
# invoke jitted function like a regular python function
result=jitted_fn(a,b,alpha=3.14)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 12
    =
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. inv_ex ( A ,  * ,  check_errors ,  out ) ¶",">>> A=torch.randn(3,3)
>>> Ainv,info=torch.linalg.inv_ex(A)
>>> torch.dist(torch.linalg.inv(A),Ainv)
tensor(0.)
>>> info
tensor(0, dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. cholesky ( A ,  * ,  upper ,  out )   → ¶",">>> A=torch.randn(2,2,dtype=torch.complex128)
>>> A=A@A.T.conj()+torch.eye(2)# creates a Hermitian positive-definite matrix
>>> A
tensor([[2.5266+0.0000j, 1.9586-2.0626j],
        [1.9586+2.0626j, 9.4160+0.0000j]], dtype=torch.complex128)
>>> L=torch.linalg.cholesky(A)
>>> L
tensor([[1.5895+0.0000j, 0.0000+0.0000j],
        [1.2322+1.2976j, 2.4928+0.0000j]], dtype=torch.complex128)
>>> torch.dist(L@L.T.conj(),A)
tensor(4.4692e-16, dtype=torch.float64)>>> A=torch.randn(3,2,2,dtype=torch.float64)
>>> A=A@A.mT+torch.eye(2)# batch of symmetric positive-definite matrices
>>> L=torch.linalg.cholesky(A)
>>> torch.dist(L@L.mT,A)
tensor(5.8747e-16, dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. cholesky_ex ( A ,  * ,  upper ,  check_errors ,  out ) ¶",">>> A=torch.randn(2,2,dtype=torch.complex128)
>>> A=A@A.t().conj()# creates a Hermitian positive-definite matrix
>>> L,info=torch.linalg.cholesky_ex(A)
>>> A
tensor([[ 2.3792+0.0000j, -0.9023+0.9831j],
        [-0.9023-0.9831j,  0.8757+0.0000j]], dtype=torch.complex128)
>>> L
tensor([[ 1.5425+0.0000j,  0.0000+0.0000j],
        [-0.5850-0.6374j,  0.3567+0.0000j]], dtype=torch.complex128)
>>> info
tensor(0, dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. lu ( A ,  * ,  pivot ,  out ) ¶",">>> A=torch.randn(3,2)
>>> P,L,U=torch.linalg.lu(A)
>>> P
tensor([[0., 1., 0.],
        [0., 0., 1.],
        [1., 0., 0.]])
>>> L
tensor([[1.0000, 0.0000],
        [0.5007, 1.0000],
        [0.0633, 0.9755]])
>>> U
tensor([[0.3771, 0.0489],
        [0.0000, 0.9644]])
>>> torch.dist(A,P@L@U)
tensor(5.9605e-08)>>> A=torch.randn(2,5,7,device=""cuda"")
>>> P,L,U=torch.linalg.lu(A,pivot=False)
>>> P
tensor([], device='cuda:0')
>>> torch.dist(A,L@U)
tensor(1.0376e-06, device='cuda:0')
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. lu_solve ( LU ,  pivots ,  B ,  * ,  left ,  adjoint ,  out )   → ¶",">>> A=torch.randn(3,3)
>>> LU,pivots=torch.linalg.lu_factor(A)
>>> B=torch.randn(3,2)
>>> X=torch.linalg.lu_solve(LU,pivots,B)
>>> torch.allclose(A@X,B)
True>>> B=torch.randn(3,3,2)# Broadcasting rules apply: A is broadcasted
>>> X=torch.linalg.lu_solve(LU,pivots,B)
>>> torch.allclose(A@X,B)
True>>> B=torch.randn(3,5,3)
>>> X=torch.linalg.lu_solve(LU,pivots,B,left=False)
>>> torch.allclose(X@A,B)
True>>> B=torch.randn(3,3,4)# Now solve for A^T
>>> X=torch.linalg.lu_solve(LU,pivots,B,adjoint=True)
>>> torch.allclose(A.mT@X,B)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. qr ( A ,  mode ,  * ,  out ) ¶",">>> A=torch.tensor([[12.,-51,4],[6,167,-68],[-4,24,-41]])
>>> Q,R=torch.linalg.qr(A)
>>> Q
tensor([[-0.8571,  0.3943,  0.3314],
        [-0.4286, -0.9029, -0.0343],
        [ 0.2857, -0.1714,  0.9429]])
>>> R
tensor([[ -14.0000,  -21.0000,   14.0000],
        [   0.0000, -175.0000,   70.0000],
        [   0.0000,    0.0000,  -35.0000]])
>>> (Q@R).round()
tensor([[  12.,  -51.,    4.],
        [   6.,  167.,  -68.],
        [  -4.,   24.,  -41.]])
>>> (Q.T@Q).round()
tensor([[ 1.,  0.,  0.],
        [ 0.,  1., -0.],
        [ 0., -0.,  1.]])
>>> Q2,R2=torch.linalg.qr(A,mode='r')
>>> Q2
tensor([])
>>> torch.equal(R,R2)
True
>>> A=torch.randn(3,4,5)
>>> Q,R=torch.linalg.qr(A,mode='complete')
>>> torch.dist(Q@R,A)
tensor(1.6099e-06)
>>> torch.dist(Q.mT@Q,torch.eye(4))
tensor(6.2158e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. svd ( A ,  full_matrices ,  * ,  driver ,  out ) ¶",">>> A=torch.randn(5,3)
>>> U,S,Vh=torch.linalg.svd(A,full_matrices=False)
>>> U.shape,S.shape,Vh.shape
(torch.Size([5, 3]), torch.Size([3]), torch.Size([3, 3]))
>>> torch.dist(A,U@torch.diag(S)@Vh)
tensor(1.0486e-06)>>> U,S,Vh=torch.linalg.svd(A)
>>> U.shape,S.shape,Vh.shape
(torch.Size([5, 5]), torch.Size([3]), torch.Size([3, 3]))
>>> torch.dist(A,U[:,:3]@torch.diag(S)@Vh)
tensor(1.0486e-06)>>> A=torch.randn(7,5,3)
>>> U,S,Vh=torch.linalg.svd(A,full_matrices=False)
>>> torch.dist(A,U@torch.diag_embed(S)@Vh)
tensor(3.0957e-06)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. svdvals ( A ,  * ,  driver ,  out )   → ¶",">>> A=torch.randn(5,3)
>>> S=torch.linalg.svdvals(A)
>>> S
tensor([2.5139, 2.1087, 1.1066])>>> torch.dist(S,torch.linalg.svd(A,full_matrices=False).S)
tensor(2.4576e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. norm ( A ,  ord ,  dim ,  keepdim ,  * ,  out ,  dtype )   → ¶",">>> fromtorchimportlinalgasLA
>>> a=torch.arange(9,dtype=torch.float)-4
>>> a
tensor([-4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])
>>> B=a.reshape((3,3))
>>> B
tensor([[-4., -3., -2.],
        [-1.,  0.,  1.],
        [ 2.,  3.,  4.]])>>> LA.norm(a)
tensor(7.7460)
>>> LA.norm(B)
tensor(7.7460)
>>> LA.norm(B,'fro')
tensor(7.7460)
>>> LA.norm(a,float('inf'))
tensor(4.)
>>> LA.norm(B,float('inf'))
tensor(9.)
>>> LA.norm(a,-float('inf'))
tensor(0.)
>>> LA.norm(B,-float('inf'))
tensor(2.)>>> LA.norm(a,1)
tensor(20.)
>>> LA.norm(B,1)
tensor(7.)
>>> LA.norm(a,-1)
tensor(0.)
>>> LA.norm(B,-1)
tensor(6.)
>>> LA.norm(a,2)
tensor(7.7460)
>>> LA.norm(B,2)
tensor(7.3485)>>> LA.norm(a,-2)
tensor(0.)
>>> LA.norm(B.double(),-2)
tensor(1.8570e-16, dtype=torch.float64)
>>> LA.norm(a,3)
tensor(5.8480)
>>> LA.norm(a,-3)
tensor(0.)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. norm ( A ,  ord ,  dim ,  keepdim ,  * ,  out ,  dtype )   → ¶",">>> c=torch.tensor([[1.,2.,3.],
... [-1,1,4]])
>>> LA.norm(c,dim=0)
tensor([1.4142, 2.2361, 5.0000])
>>> LA.norm(c,dim=1)
tensor([3.7417, 4.2426])
>>> LA.norm(c,ord=1,dim=1)
tensor([6., 6.])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. vector_norm ( x ,  ord ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶",">>> fromtorchimportlinalgasLA
>>> a=torch.arange(9,dtype=torch.float)-4
>>> a
tensor([-4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])
>>> B=a.reshape((3,3))
>>> B
tensor([[-4., -3., -2.],
        [-1.,  0.,  1.],
        [ 2.,  3.,  4.]])
>>> LA.vector_norm(a,ord=3.5)
tensor(5.4345)
>>> LA.vector_norm(B,ord=3.5)
tensor(5.4345)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. matrix_norm ( A ,  ord ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶",">>> fromtorchimportlinalgasLA
>>> A=torch.arange(9,dtype=torch.float).reshape(3,3)
>>> A
tensor([[0., 1., 2.],
        [3., 4., 5.],
        [6., 7., 8.]])
>>> LA.matrix_norm(A)
tensor(14.2829)
>>> LA.matrix_norm(A,ord=-1)
tensor(9.)
>>> B=A.expand(2,-1,-1)
>>> B
tensor([[[0., 1., 2.],
        [3., 4., 5.],
        [6., 7., 8.]],        [[0., 1., 2.],
        [3., 4., 5.],
        [6., 7., 8.]]])
>>> LA.matrix_norm(B)
tensor([14.2829, 14.2829])
>>> LA.matrix_norm(B,dim=(0,2))
tensor([ 3.1623, 10.0000, 17.2627])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. cond ( A ,  p ,  * ,  out )   → ¶",">>> A=torch.randn(3,4,4,dtype=torch.complex64)
>>> torch.linalg.cond(A)
>>> A=torch.tensor([[1.,0,-1],[0,1,0],[1,0,1]])
>>> torch.linalg.cond(A)
tensor([1.4142])
>>> torch.linalg.cond(A,'fro')
tensor(3.1623)
>>> torch.linalg.cond(A,'nuc')
tensor(9.2426)
>>> torch.linalg.cond(A,float('inf'))
tensor(2.)
>>> torch.linalg.cond(A,float('-inf'))
tensor(1.)
>>> torch.linalg.cond(A,1)
tensor(2.)
>>> torch.linalg.cond(A,-1)
tensor(1.)
>>> torch.linalg.cond(A,2)
tensor([1.4142])
>>> torch.linalg.cond(A,-2)
tensor([0.7071])>>> A=torch.randn(2,3,3)
>>> torch.linalg.cond(A)
tensor([[9.5917],
        [3.2538]])
>>> A=torch.randn(2,3,3,dtype=torch.complex64)
>>> torch.linalg.cond(A)
tensor([[4.6245],
        [4.5671]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. matrix_rank ( A ,  * ,  atol ,  rtol ,  hermitian ,  out )   → ¶",">>> A=torch.eye(10)
>>> torch.linalg.matrix_rank(A)
tensor(10)
>>> B=torch.eye(10)
>>> B[0,0]=0
>>> torch.linalg.matrix_rank(B)
tensor(9)>>> A=torch.randn(4,3,2)
>>> torch.linalg.matrix_rank(A)
tensor([2, 2, 2, 2])>>> A=torch.randn(2,4,2,3)
>>> torch.linalg.matrix_rank(A)
tensor([[2, 2, 2, 2],
        [2, 2, 2, 2]])>>> A=torch.randn(2,4,3,3,dtype=torch.complex64)
>>> torch.linalg.matrix_rank(A)
tensor([[3, 3, 3, 3],
        [3, 3, 3, 3]])
>>> torch.linalg.matrix_rank(A,hermitian=True)
tensor([[3, 3, 3, 3],
        [3, 3, 3, 3]])
>>> torch.linalg.matrix_rank(A,atol=1.0,rtol=0.0)
tensor([[3, 2, 2, 2],
        [1, 2, 1, 2]])
>>> torch.linalg.matrix_rank(A,atol=1.0,rtol=0.0,hermitian=True)
tensor([[2, 2, 2, 1],
        [1, 2, 2, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. eig ( A ,  * ,  out ) ¶",">>> A=torch.randn(2,2,dtype=torch.complex128)
>>> A
tensor([[ 0.9828+0.3889j, -0.4617+0.3010j],
        [ 0.1662-0.7435j, -0.6139+0.0562j]], dtype=torch.complex128)
>>> L,V=torch.linalg.eig(A)
>>> L
tensor([ 1.1226+0.5738j, -0.7537-0.1286j], dtype=torch.complex128)
>>> V
tensor([[ 0.9218+0.0000j,  0.1882-0.2220j],
        [-0.0270-0.3867j,  0.9567+0.0000j]], dtype=torch.complex128)
>>> torch.dist(V@torch.diag(L)@torch.linalg.inv(V),A)
tensor(7.7119e-16, dtype=torch.float64)>>> A=torch.randn(3,2,2,dtype=torch.float64)
>>> L,V=torch.linalg.eig(A)
>>> torch.dist(V@torch.diag_embed(L)@torch.linalg.inv(V),A)
tensor(3.2841e-16, dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. eigvals ( A ,  * ,  out )   → ¶",">>> A=torch.randn(2,2,dtype=torch.complex128)
>>> L=torch.linalg.eigvals(A)
>>> L
tensor([ 1.1226+0.5738j, -0.7537-0.1286j], dtype=torch.complex128)>>> torch.dist(L,torch.linalg.eig(A).eigenvalues)
tensor(2.4576e-07)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. eigvalsh ( A ,  UPLO ,  * ,  out )   → ¶",">>> A=torch.randn(2,2,dtype=torch.complex128)
>>> A=A+A.T.conj()# creates a Hermitian matrix
>>> A
tensor([[2.9228+0.0000j, 0.2029-0.0862j],
        [0.2029+0.0862j, 0.3464+0.0000j]], dtype=torch.complex128)
>>> torch.linalg.eigvalsh(A)
tensor([0.3277, 2.9415], dtype=torch.float64)>>> A=torch.randn(3,2,2,dtype=torch.float64)
>>> A=A+A.mT# creates a batch of symmetric matrices
>>> torch.linalg.eigvalsh(A)
tensor([[ 2.5797,  3.4629],
        [-4.1605,  1.3780],
        [-3.1113,  2.7381]], dtype=torch.float64)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. solve ( A ,  B ,  * ,  left ,  out )   → ¶",">>> A=torch.randn(3,3)
>>> b=torch.randn(3)
>>> x=torch.linalg.solve(A,b)
>>> torch.allclose(A@x,b)
True
>>> A=torch.randn(2,3,3)
>>> B=torch.randn(2,3,4)
>>> X=torch.linalg.solve(A,B)
>>> X.shape
torch.Size([2, 3, 4])
>>> torch.allclose(A@X,B)
True>>> A=torch.randn(2,3,3)
>>> b=torch.randn(3,1)
>>> x=torch.linalg.solve(A,b)# b is broadcasted to size (2, 3, 1)
>>> x.shape
torch.Size([2, 3, 1])
>>> torch.allclose(A@x,b)
True
>>> b=torch.randn(3)
>>> x=torch.linalg.solve(A,b)# b is broadcasted to size (2, 3)
>>> x.shape
torch.Size([2, 3])
>>> Ax=A@x.unsqueeze(-1)
>>> torch.allclose(Ax,b.unsqueeze(-1).expand_as(Ax))
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. solve_triangular ( A ,  B ,  * ,  upper ,  left ,  unitriangular ,  out )   → ¶",">>> A=torch.randn(3,3).triu_()
>>> b=torch.randn(3,4)
>>> X=torch.linalg.solve_triangular(A,B,upper=True)
>>> torch.allclose(A@X,B)
True>>> A=torch.randn(2,3,3).tril_()
>>> B=torch.randn(2,3,4)
>>> X=torch.linalg.solve_triangular(A,B,upper=False)
>>> torch.allclose(A@X,B)
True>>> A=torch.randn(2,4,4).tril_()
>>> B=torch.randn(2,3,4)
>>> X=torch.linalg.solve_triangular(A,B,upper=False,left=False)
>>> torch.allclose(X@A,B)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. lstsq ( A ,  B ,  rcond ,  * ,  driver ) ¶",">>> A=torch.tensor([[[10,2,3],[3,10,5],[5,6,12]]],dtype=torch.float)# shape (1, 3, 3)
>>> B=torch.tensor([[[2,5,1],[3,2,1],[5,1,9]],
                      [[4, 2, 9], [2, 0, 3], [2, 5, 3]]], dtype=torch.float) # shape (2, 3, 3)
>>> X=torch.linalg.lstsq(A,B).solution# A is broadcasted to shape (2, 3, 3)
>>> torch.dist(X,torch.linalg.pinv(A)@B)
tensor(2.0862e-07)>>> S=torch.linalg.lstsq(A,B,driver='gelsd').singular_values
>>> torch.dist(S,torch.linalg.svdvals(A))
tensor(5.7220e-06)>>> A[:,0].zero_()# Decrease the rank of A
>>> rank=torch.linalg.lstsq(A,B).rank
>>> rank
tensor([2])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. vecdot ( x ,  y ,  * ,  dim ,  out )   → ¶",">>> v1=torch.randn(3,2)
>>> v2=torch.randn(3,2)
>>> linalg.vecdot(v1,v2)
tensor([ 0.3223,  0.2815, -0.1944])
>>> torch.vdot(v1[0],v2[0])
tensor(0.3223)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. multi_dot ( tensors ,  * ,  out ) ¶",">>> fromtorch.linalgimportmulti_dot>>> multi_dot([torch.tensor([1,2]),torch.tensor([2,3])])
tensor(8)
>>> multi_dot([torch.tensor([[1,2]]),torch.tensor([2,3])])
tensor([8])
>>> multi_dot([torch.tensor([[1,2]]),torch.tensor([[2],[3]])])
tensor([[8]])>>> A=torch.arange(2*3).view(2,3)
>>> B=torch.arange(3*2).view(3,2)
>>> C=torch.arange(2*2).view(2,2)
>>> multi_dot((A,B,C))
tensor([[ 26,  49],
        [ 80, 148]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. tensorinv ( A ,  ind ,  * ,  out )   → ¶",">>> A=torch.eye(4*6).reshape((4,6,8,3))
>>> Ainv=torch.linalg.tensorinv(A,ind=2)
>>> Ainv.shape
torch.Size([8, 3, 4, 6])
>>> B=torch.randn(4,6)
>>> torch.allclose(torch.tensordot(Ainv,B),torch.linalg.tensorsolve(A,B))
True>>> A=torch.randn(4,4)
>>> Atensorinv=torch.linalg.tensorinv(A,ind=1)
>>> Ainv=torch.linalg.inverse(A)
>>> torch.allclose(Atensorinv,Ainv)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. tensorsolve ( A ,  B ,  dims ,  * ,  out )   → ¶",">>> A=torch.eye(2*3*4).reshape((2*3,4,2,3,4))
>>> B=torch.randn(2*3,4)
>>> X=torch.linalg.tensorsolve(A,B)
>>> X.shape
torch.Size([2, 3, 4])
>>> torch.allclose(torch.tensordot(A,X,dims=X.ndim),B)
True>>> A=torch.randn(6,4,4,3,2)
>>> B=torch.randn(4,3,2)
>>> X=torch.linalg.tensorsolve(A,B,dims=(0,2))
>>> X.shape
torch.Size([6, 4])
>>> A=A.permute(1,3,4,0,2)
>>> A.shape[B.ndim:]
torch.Size([6, 4])
>>> torch.allclose(torch.tensordot(A,X,dims=X.ndim),B,atol=1e-6)
True
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. vander ( x ,  N )   → ¶",">>> x=torch.tensor([1,2,3,5])
>>> linalg.vander(x)
tensor([[  1,   1,   1,   1],
        [  1,   2,   4,   8],
        [  1,   3,   9,  27],
        [  1,   5,  25, 125]])
>>> linalg.vander(x,N=3)
tensor([[ 1,  1,  1],
        [ 1,  2,  4],
        [ 1,  3,  9],
        [ 1,  5, 25]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. solve_ex ( A ,  B ,  * ,  left ,  check_errors ,  out ) ¶",">>> A=torch.randn(3,3)
>>> Ainv,info=torch.linalg.solve_ex(A)
>>> torch.dist(torch.linalg.inv(A),Ainv)
tensor(0.)
>>> info
tensor(0, dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. ldl_factor ( A ,  * ,  hermitian ,  out ) ¶",">>> A=torch.randn(3,3)
>>> A=A@A.mT# make symmetric
>>> A
tensor([[7.2079, 4.2414, 1.9428],
        [4.2414, 3.4554, 0.3264],
        [1.9428, 0.3264, 1.3823]])
>>> LD,pivots=torch.linalg.ldl_factor(A)
>>> LD
tensor([[ 7.2079,  0.0000,  0.0000],
        [ 0.5884,  0.9595,  0.0000],
        [ 0.2695, -0.8513,  0.1633]])
>>> pivots
tensor([1, 2, 3], dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. ldl_factor_ex ( A ,  * ,  hermitian ,  check_errors ,  out ) ¶",">>> A=torch.randn(3,3)
>>> A=A@A.mT# make symmetric
>>> A
tensor([[7.2079, 4.2414, 1.9428],
        [4.2414, 3.4554, 0.3264],
        [1.9428, 0.3264, 1.3823]])
>>> LD,pivots,info=torch.linalg.ldl_factor_ex(A)
>>> LD
tensor([[ 7.2079,  0.0000,  0.0000],
        [ 0.5884,  0.9595,  0.0000],
        [ 0.2695, -0.8513,  0.1633]])
>>> pivots
tensor([1, 2, 3], dtype=torch.int32)
>>> info
tensor(0, dtype=torch.int32)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.linalg. ldl_solve ( LD ,  pivots ,  B ,  * ,  hermitian ,  out )   → ¶",">>> A=torch.randn(2,3,3)
>>> A=A@A.mT# make symmetric
>>> LD,pivots,info=torch.linalg.ldl_factor_ex(A)
>>> B=torch.randn(2,3,4)
>>> X=torch.linalg.ldl_solve(LD,pivots,B)
>>> torch.linalg.norm(A@X-B)
>>> tensor(0.0001)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 class torch.ao.nn.quantized. FloatFunctional [source] ¶",">>> f_add=FloatFunctional()
>>> a=torch.tensor(3.0)
>>> b=torch.tensor(4.0)
>>> f_add.add(a,b)# Equivalent to ``torch.add(a, b)``
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_coo ( ) [source] ¶",">>> dense=torch.randn(5,5)
>>> sparse=dense.to_sparse_coo()
>>> sparse._nnz()
25
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.sparse. sum ( input ,  dim ,  dtype ) [source] ¶",">>> nnz=3
>>> dims=[5,5,2,3]
>>> I=torch.cat([torch.randint(0,dims[0],size=(nnz,)),
                   torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)
>>> V=torch.randn(nnz,dims[2],dims[3])
>>> size=torch.Size(dims)
>>> S=torch.sparse_coo_tensor(I,V,size)
>>> S
tensor(indices=tensor([[2, 0, 3],
                       [2, 4, 1]]),
       values=tensor([[[-0.6438, -1.6467,  1.4004],
                       [ 0.3411,  0.0918, -0.2312]],                      [[ 0.5348,  0.0634, -2.0494],
                       [-0.7125, -1.0646,  2.1844]],                      [[ 0.1276,  0.1874, -0.6334],
                       [-1.9682, -0.5340,  0.7483]]]),
       size=(5, 5, 2, 3), nnz=3, layout=torch.sparse_coo)# when sum over only part of sparse_dims, return a sparse tensor
>>> torch.sparse.sum(S,[1,3])
tensor(indices=tensor([[0, 2, 3]]),
       values=tensor([[-1.4512,  0.4073],
                      [-0.8901,  0.2017],
                      [-0.3183, -1.7539]]),
       size=(5, 2), nnz=3, layout=torch.sparse_coo)# when sum over all sparse dim, return a dense tensor
# with summed dims squeezed
>>> torch.sparse.sum(S,[0,1,3])
tensor([-2.6596, -1.1450])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.sparse. sampled_addmm ( input ,  mat1 ,  mat2 ,  * ,  beta ,  alpha ,  out )   → ¶",">>> input=torch.eye(3,device='cuda').to_sparse_csr()
>>> mat1=torch.randn(3,5,device='cuda')
>>> mat2=torch.randn(5,3,device='cuda')
>>> torch.sparse.sampled_addmm(input,mat1,mat2)
tensor(crow_indices=tensor([0, 1, 2, 3]),
    col_indices=tensor([0, 1, 2]),
    values=tensor([ 0.2847, -0.7805, -0.1900]), device='cuda:0',
    size=(3, 3), nnz=3, layout=torch.sparse_csr)
>>> torch.sparse.sampled_addmm(input,mat1,mat2).to_dense()
tensor([[ 0.2847,  0.0000,  0.0000],
    [ 0.0000, -0.7805,  0.0000],
    [ 0.0000,  0.0000, -0.1900]], device='cuda:0')
>>> torch.sparse.sampled_addmm(input,mat1,mat2,beta=0.5,alpha=0.5)
tensor(crow_indices=tensor([0, 1, 2, 3]),
    col_indices=tensor([0, 1, 2]),
    values=tensor([ 0.1423, -0.3903, -0.0950]), device='cuda:0',
    size=(3, 3), nnz=3, layout=torch.sparse_csr)
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.sparse. spdiags ( diagonals ,  offsets ,  shape ,  layout )   → ¶",">>> diags=torch.arange(9).reshape(3,3)
>>> diags
tensor([[0, 1, 2],
        [3, 4, 5],
        [6, 7, 8]])
>>> s=torch.sparse.spdiags(diags,torch.tensor([0,-1,-2]),(3,3))
>>> s
tensor(indices=tensor([[0, 1, 2, 1, 2, 2],
                       [0, 1, 2, 0, 1, 0]]),
       values=tensor([0, 1, 2, 3, 4, 6]),
       size=(3, 3), nnz=6, layout=torch.sparse_coo)
>>> s.to_dense()
tensor([[0, 0, 0],
        [3, 1, 0],
        [6, 4, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch.sparse. spdiags ( diagonals ,  offsets ,  shape ,  layout )   → ¶",">>> diags=torch.arange(9).reshape(3,3)
>>> diags
tensor([[0, 1, 2],[3, 4, 5], [6, 7, 8])
>>> s=torch.sparse.spdiags(diags,torch.tensor([0,-1,-2]),(3,3),layout=torch.sparse_csr)
>>> s
tensor(crow_indices=tensor([0, 1, 3, 6]),
       col_indices=tensor([0, 0, 1, 0, 1, 2]),
       values=tensor([0, 3, 1, 6, 4, 2]), size=(3, 3), nnz=6,
       layout=torch.sparse_csr)
>>> s.to_dense()
tensor([[0, 0, 0],
        [3, 1, 0],
        [6, 4, 2]])
","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 1
    >
    ^
SyntaxError: invalid syntax
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_tensor ( obj ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'torch.is_tensor(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_nonzero ( input ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.is_nonzero(torch.tensor([0.]))', 'torch.is_nonzero(torch.tensor([1.5]))', 'torch.is_nonzero(torch.tensor([False]))', 'torch.is_nonzero(torch.tensor([3]))', 'torch.is_nonzero(torch.tensor([1,3,5]))...', 'torch.is_nonzero(torch.tensor([]))...']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    torch.is_nonzero(torch.tensor([1,3,5]))...
                                           ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.get_default_dtype()# initial default for floating point is torch.float32', 'torch.set_default_dtype(torch.float64)', 'torch.get_default_dtype()# default is now changed to torch.float64', 'torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this', 'torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32', 'torch.set_default_tensor_type(torch.DoubleTensor)', 'torch.tensor([1.2,3]).dtype# a new floating point tensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. numel ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,2,3,4,5)', 'torch.numel(a)', 'a=torch.zeros(4,4)', 'torch.numel(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Limit the precision of elements', 'torch.set_printoptions(precision=2)', 'torch.tensor([1.12345])', '# Limit the number of elements shown', 'torch.set_printoptions(threshold=5)', 'torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])', '# Restore defaults', ""torch.set_printoptions(profile='default')"", 'torch.tensor([1.12345])', 'torch.arange(10)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])
                    ^
SyntaxError: invalid syntax
"
"
 torch. set_flush_denormal ( mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.set_flush_denormal(True)', 'torch.tensor([1e-323],dtype=torch.float64)', 'torch.set_flush_denormal(False)', 'torch.tensor([1e-323],dtype=torch.float64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rand ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.rand(4)', 'torch.rand(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randn ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randn(4)', 'torch.randn(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randint ( low=0 ,  high ,  size ,  \* ,  generator=None ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randint(3,5,(3,))', 'torch.randint(10,(2,2))', 'torch.randint(3,10,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randperm ( n ,  * ,  generator ,  out ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randperm(4)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False ,  memory_format=torch.contiguous_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.empty((2,3),dtype=torch.int64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([[0.1,1.2],[2.2,3.1],[4.9,5.2]])', 'torch.tensor([0,1])# Type inference on data', ""torch.tensor([[0.11111,0.222222,0.3333333]],dtype=torch.float64,device=torch.device('cuda:0'))# creates a double tensor on a CUDA device"", 'torch.tensor(3.14159)# Create a zero-dimensional (scalar) tensor', 'torch.tensor([])# Create an empty tensor (of size (0,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', ""# Shares memory with tensor 'a'"", 'b=torch.asarray(a)', 'a.data_ptr()==b.data_ptr()', '# Forces memory copy', 'c=torch.asarray(a,copy=True)', 'a.data_ptr()==c.data_ptr()', 'a=torch.tensor([1,2,3],requires_grad=True).float()', 'b=a+2', 'b', ""# Shares memory with tensor 'b', with no grad"", 'c=torch.asarray(b)', 'c', ""# Shares memory with tensor 'b', retaining autograd history"", 'd=torch.asarray(b,requires_grad=True)', 'd', 'array=numpy.array([1,2,3])', ""# Shares memory with array 'array'"", 't1=torch.asarray(array)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", '# Copies memory due to dtype mismatch', 't2=torch.asarray(array,dtype=torch.float32)', ""array.__array_interface__['data'][0]==t1.data_ptr()""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_tensor ( data ,  dtype ,  device )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.as_tensor(a)', 't', 't[0]=-1', 'a', 'a=numpy.array([1,2,3])', ""t=torch.as_tensor(a,device=torch.device('cuda'))"", 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_strided ( input ,  size ,  stride ,  storage_offset )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,3)', 'x', 't=torch.as_strided(x,(2,2),(1,2))', 't', 't=torch.as_strided(x,(2,2),(1,2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_numpy ( ndarray )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.from_numpy(a)', 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_dlpack ( ext_tensor )   → [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch.utils.dlpack', 't=torch.arange(4)# Convert a tensor directly (supported in PyTorch >= 1.10)', 't2=torch.from_dlpack(t)', 't2[:2]=-1# show that memory is shared', 't2', 't', 'capsule=torch.utils.dlpack.to_dlpack(t)', 'capsule<capsule object ""dltensor"" at ...>', 't3=torch.from_dlpack(capsule)', 't3', ""t3[0]=-9# now we're sharing memory between 3 tensors"", 't3', 't2', 't']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 11
    capsule<capsule object ""dltensor"" at ...>
                    ^
SyntaxError: invalid syntax
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importarray', ""a=array.array('i',[1,2,3])"", 't=torch.frombuffer(a,dtype=torch.int32)', 't', 't[0]=-1', 'a', '# Interprets the signed char bytes as 32-bit integers.', '# Each 4 signed char elements will be interpreted as', '# 1 signed 32-bit integer.', 'importarray', ""a=array.array('b',[-1,0,0,0])"", 'torch.frombuffer(a,dtype=torch.int32)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.zeros(2,3)', 'torch.zeros(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.zeros_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.ones(2,3)', 'torch.ones(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.ones_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. arange ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.arange(5)', 'torch.arange(1,4)', 'torch.arange(1,2.5,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.range(1,4)', 'torch.range(1,4,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. linspace ( start ,  end ,  steps ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.linspace(3,10,steps=5)', 'torch.linspace(-10,10,steps=5)', 'torch.linspace(start=-10,end=10,steps=5)', 'torch.linspace(start=-10,end=10,steps=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logspace ( start ,  end ,  steps ,  base ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logspace(start=-10,end=10,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=1)', 'torch.logspace(start=2,end=2,steps=1,base=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. eye ( n ,  m ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.eye(3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.empty((2,3),dtype=torch.int32,device='cuda')"", 'torch.empty_like(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_strided ( size ,  stride ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.empty_strided((2,3),(1,2))', 'a', 'a.stride()', 'a.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. full ( size ,  fill_value ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.full((2,3),3.141592)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_tensor ( input ,  scale ,  zero_point ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8).int_repr()', 'torch.quantize_per_tensor([torch.tensor([-1.0,0.0]),torch.tensor([-2.0,2.0])],', 'torch.tensor([0.1,0.2]),torch.tensor([10,20]),torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),torch.tensor(0.1),torch.tensor(10),torch.quint8)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_channel ( input ,  scales ,  zero_points ,  axis ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[-1.0,0.0],[1.0,2.0]])', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8)', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8).int_repr()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. complex ( real ,  imag ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'real=torch.tensor([1,2],dtype=torch.float32)', 'imag=torch.tensor([3,4],dtype=torch.float32)', 'z=torch.complex(real,imag)', 'z', 'z.dtype']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. real ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.real']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. imag ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.imag']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. polar ( abs ,  angle ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importnumpyasnp', 'abs=torch.tensor([1,2],dtype=torch.float64)', 'angle=torch.tensor([np.pi/2,5*np.pi/4],dtype=torch.float64)', 'z=torch.polar(abs,angle)', 'z']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. abs ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.abs(torch.tensor([-1,-2,3]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. angle ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.angle(torch.tensor([-1+1j,-2+2j,3-3j]))*180/3.14159']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. heaviside ( input ,  values ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.tensor([-1.5,0,2.0])', 'values=torch.tensor([0.5])', 'torch.heaviside(input,values)', 'values=torch.tensor([1.2,-2.0,3.5])', 'torch.heaviside(input,values)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argwhere ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([1,0,1])', 'torch.argwhere(t)', 't=torch.tensor([[1,0,1],[0,1,1]])', 'torch.argwhere(t)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. cat ( tensors ,  dim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,3)', 'x', 'torch.cat((x,x,x),0)', 'torch.cat((x,x,x),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. conj ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'x.is_conj()', 'y=torch.conj(x)', 'y.is_conj()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. column_stack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.column_stack((a,b))', 'a=torch.arange(5)', 'b=torch.arange(10).reshape(5,2)', 'torch.column_stack((a,b,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. dstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.dstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.dstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. gather ( input ,  dim ,  index ,  * ,  sparse_grad ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[1,2],[3,4]])', 'torch.gather(t,1,torch.tensor([[0,0],[1,0]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. hstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.hstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.hstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_add_ ( dim ,  index ,  source ,  * ,  alpha )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.ones(5,3)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)', 'index=torch.tensor([0,4,2])', 'x.index_add_(0,index,t)', 'x.index_add_(0,index,t,alpha=-1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.empty(5,3).fill_(2)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)', 'index=torch.tensor([0,4,2,0])', ""x.index_reduce_(0,index,t,'prod')"", 'x=torch.empty(5,3).fill_(2)', ""x.index_reduce_(0,index,t,'prod',include_self=False)""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. index_select ( input ,  dim ,  index ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'indices=torch.tensor([0,2])', 'torch.index_select(x,0,indices)', 'torch.index_select(x,1,indices)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. masked_select ( input ,  mask ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'mask=x.ge(0.5)', 'mask', 'torch.masked_select(x,mask)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. movedim ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.movedim(t,1,0).shape', 'torch.movedim(t,1,0)', 'torch.movedim(t,(1,2),(0,1)).shape', 'torch.movedim(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. moveaxis ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.moveaxis(t,1,0).shape', 'torch.moveaxis(t,1,0)', 'torch.moveaxis(t,(1,2),(0,1)).shape', 'torch.moveaxis(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. narrow ( input ,  dim ,  start ,  length )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[1,2,3],[4,5,6],[7,8,9]])', 'torch.narrow(x,0,0,2)', 'torch.narrow(x,1,1,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nonzero ( input ,  * ,  out ,  as_tuple )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.nonzero(torch.tensor([1,1,1,0,1]))', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]))', 'torch.nonzero(torch.tensor([1,1,1,0,1]),as_tuple=True)', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]),as_tuple=True)', 'torch.nonzero(torch.tensor(5),as_tuple=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. reshape ( input ,  shape )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(4.)', 'torch.reshape(a,(2,2))', 'b=torch.tensor([[0,1],[2,3]])', 'torch.reshape(b,(-1,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. vstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.vstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.vstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_ ( dim ,  index ,  src ,  reduce )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.arange(1,11).reshape((2,5))', 'src', 'index=torch.tensor([[0,1,2,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(0,index,src)', 'index=torch.tensor([[0,1,2],[0,1,4]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(1,index,src)', ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='multiply')"", ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='add')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. diagonal_scatter ( input ,  src ,  offset ,  dim1 ,  dim2 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(3,3)', 'a', 'torch.diagonal_scatter(a,torch.ones(3),0)', 'torch.diagonal_scatter(a,torch.ones(2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. select_scatter ( input ,  src ,  dim ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(2,2)', 'b=torch.ones(2)', 'a.select_scatter(b,0,0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(8,8)', 'b=torch.ones(8)', 'a.slice_scatter(b,start=6)', 'b=torch.ones(2)', 'a.slice_scatter(b,dim=1,start=2,end=6,step=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_add_ ( dim ,  index ,  src )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.ones((2,5))', 'index=torch.tensor([[0,1,2,0,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)', 'index=torch.tensor([[0,1,2,0,0],[0,1,2,2,2]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_reduce_ ( dim ,  index ,  src ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.tensor([1.,2.,3.,4.,5.,6.])', 'index=torch.tensor([0,1,0,1,2,1])', 'input=torch.tensor([1.,2.,3.,4.])', 'input.scatter_reduce(0,index,src,reduce=""sum"")', 'input.scatter_reduce(0,index,src,reduce=""sum"",include_self=False)', 'input2=torch.tensor([5.,4.,3.,2.])', 'input2.scatter_reduce(0,index,src,reduce=""amax"")', 'input2.scatter_reduce(0,index,src,reduce=""amax"",include_self=False)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. split ( tensor ,  split_size_or_sections ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(10).reshape(5,2)', 'a', 'torch.split(a,2)', 'torch.split(a,[1,4])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. squeeze ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.zeros(2,1,2,1,2)', 'x.size()', 'y=torch.squeeze(x)', 'y.size()', 'y=torch.squeeze(x,0)', 'y.size()', 'y=torch.squeeze(x,1)', 'y.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. swapaxes ( input ,  axis0 ,  axis1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])', 'x', 'torch.swapaxes(x,0,1)', 'torch.swapaxes(x,0,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. transpose ( input ,  dim0 ,  dim1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,3)', 'x', 'torch.transpose(x,0,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. swapdims ( input ,  dim0 ,  dim1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])', 'x', 'torch.swapdims(x,0,1)', 'torch.swapdims(x,0,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. t ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(())', 'x', 'torch.t(x)', 'x=torch.randn(3)', 'x', 'torch.t(x)', 'x=torch.randn(2,3)', 'x', 'torch.t(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. take ( input ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.tensor([[4,3,5],[6,7,8]])', 'torch.take(src,torch.tensor([0,2,5]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. take_along_dim ( input ,  indices ,  dim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[10,30,20],[60,40,50]])', 'max_idx=torch.argmax(t)', 'torch.take_along_dim(t,max_idx)', 'sorted_idx=torch.argsort(t,dim=1)', 'torch.take_along_dim(t,sorted_idx,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tensor_split ( input ,  indices_or_sections ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.arange(8)', 'torch.tensor_split(x,3)', 'x=torch.arange(7)', 'torch.tensor_split(x,3)', 'torch.tensor_split(x,(1,6))', 'x=torch.arange(14).reshape(2,7)', 'x', 'torch.tensor_split(x,3,dim=1)', 'torch.tensor_split(x,(1,6),dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tile ( input ,  dims )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'x.tile((2,))', 'y=torch.tensor([[1,2],[3,4]])', 'torch.tile(y,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. unbind ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.unbind(torch.tensor([[1,2,3],', '[4,5,6],', '[7,8,9]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. unsqueeze ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3,4])', 'torch.unsqueeze(x,0)', 'torch.unsqueeze(x,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. where ( condition ,  x ,  y )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,2)', 'y=torch.ones(3,2)', 'x', 'torch.where(x>0,x,y)', 'x=torch.randn(2,2,dtype=torch.double)', 'x', 'torch.where(x>0,x,0.)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 class torch. Generator ( device ) ¶","['import numpy as np', 'import numpy', 'import torch', 'g_cpu=torch.Generator()', ""g_cuda=torch.Generator(device='cuda')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. bernoulli ( input ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.empty(3,3).uniform_(0,1)# generate a uniform random matrix with range [0, 1]', 'a', 'torch.bernoulli(a)', 'a=torch.ones(3,3)# probability of drawing ""1"" is 1', 'torch.bernoulli(a)', 'a=torch.zeros(3,3)# probability of drawing ""1"" is 0', 'torch.bernoulli(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. multinomial ( input ,  num_samples ,  replacement ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'weights=torch.tensor([0,10,3,0],dtype=torch.float)# create a tensor of weights', 'torch.multinomial(weights,2)', 'torch.multinomial(weights,4)# ERROR!', 'torch.multinomial(weights,4,replacement=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.normal(mean=torch.arange(1.,11.),std=torch.arange(1,0,-0.1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.normal(mean=0.5,std=torch.arange(1.,6.))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. poisson ( input ,  generator )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'rates=torch.rand(4,4)*5# rate parameter between 0 and 5', 'torch.poisson(rates)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 class torch.quasirandom. SobolEngine ( dimension ,  scramble ,  seed ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'soboleng=torch.quasirandom.SobolEngine(dimension=5)', 'soboleng.draw(3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. acos ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.acos(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. acosh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4).uniform_(1,2)', 'a', 'torch.acosh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. add ( input ,  other ,  * ,  alpha ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.add(a,20)', 'b=torch.randn(4)', 'b', 'c=torch.randn(4,1)', 'c', 'torch.add(b,c,alpha=10)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. addcdiv ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(1,3)', 't1=torch.randn(3,1)', 't2=torch.randn(1,3)', 'torch.addcdiv(t,t1,t2,value=0.1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. addcmul ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(1,3)', 't1=torch.randn(3,1)', 't2=torch.randn(1,3)', 'torch.addcmul(t,t1,t2,value=0.1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asin ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.asin(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_tensor ( obj ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'torch.is_tensor(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_nonzero ( input ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.is_nonzero(torch.tensor([0.]))', 'torch.is_nonzero(torch.tensor([1.5]))', 'torch.is_nonzero(torch.tensor([False]))', 'torch.is_nonzero(torch.tensor([3]))', 'torch.is_nonzero(torch.tensor([1,3,5]))...', 'torch.is_nonzero(torch.tensor([]))...']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    torch.is_nonzero(torch.tensor([1,3,5]))...
                                           ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.get_default_dtype()# initial default for floating point is torch.float32', 'torch.set_default_dtype(torch.float64)', 'torch.get_default_dtype()# default is now changed to torch.float64', 'torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this', 'torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32', 'torch.set_default_tensor_type(torch.DoubleTensor)', 'torch.tensor([1.2,3]).dtype# a new floating point tensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. numel ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,2,3,4,5)', 'torch.numel(a)', 'a=torch.zeros(4,4)', 'torch.numel(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Limit the precision of elements', 'torch.set_printoptions(precision=2)', 'torch.tensor([1.12345])', '# Limit the number of elements shown', 'torch.set_printoptions(threshold=5)', 'torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])', '# Restore defaults', ""torch.set_printoptions(profile='default')"", 'torch.tensor([1.12345])', 'torch.arange(10)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])
                    ^
SyntaxError: invalid syntax
"
"
 torch. set_flush_denormal ( mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.set_flush_denormal(True)', 'torch.tensor([1e-323],dtype=torch.float64)', 'torch.set_flush_denormal(False)', 'torch.tensor([1e-323],dtype=torch.float64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rand ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.rand(4)', 'torch.rand(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randn ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randn(4)', 'torch.randn(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randint ( low=0 ,  high ,  size ,  \* ,  generator=None ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randint(3,5,(3,))', 'torch.randint(10,(2,2))', 'torch.randint(3,10,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randperm ( n ,  * ,  generator ,  out ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randperm(4)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False ,  memory_format=torch.contiguous_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.empty((2,3),dtype=torch.int64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([[0.1,1.2],[2.2,3.1],[4.9,5.2]])', 'torch.tensor([0,1])# Type inference on data', ""torch.tensor([[0.11111,0.222222,0.3333333]],dtype=torch.float64,device=torch.device('cuda:0'))# creates a double tensor on a CUDA device"", 'torch.tensor(3.14159)# Create a zero-dimensional (scalar) tensor', 'torch.tensor([])# Create an empty tensor (of size (0,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', ""# Shares memory with tensor 'a'"", 'b=torch.asarray(a)', 'a.data_ptr()==b.data_ptr()', '# Forces memory copy', 'c=torch.asarray(a,copy=True)', 'a.data_ptr()==c.data_ptr()', 'a=torch.tensor([1,2,3],requires_grad=True).float()', 'b=a+2', 'b', ""# Shares memory with tensor 'b', with no grad"", 'c=torch.asarray(b)', 'c', ""# Shares memory with tensor 'b', retaining autograd history"", 'd=torch.asarray(b,requires_grad=True)', 'd', 'array=numpy.array([1,2,3])', ""# Shares memory with array 'array'"", 't1=torch.asarray(array)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", '# Copies memory due to dtype mismatch', 't2=torch.asarray(array,dtype=torch.float32)', ""array.__array_interface__['data'][0]==t1.data_ptr()""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_tensor ( data ,  dtype ,  device )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.as_tensor(a)', 't', 't[0]=-1', 'a', 'a=numpy.array([1,2,3])', ""t=torch.as_tensor(a,device=torch.device('cuda'))"", 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_strided ( input ,  size ,  stride ,  storage_offset )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,3)', 'x', 't=torch.as_strided(x,(2,2),(1,2))', 't', 't=torch.as_strided(x,(2,2),(1,2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_numpy ( ndarray )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.from_numpy(a)', 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_dlpack ( ext_tensor )   → [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch.utils.dlpack', 't=torch.arange(4)# Convert a tensor directly (supported in PyTorch >= 1.10)', 't2=torch.from_dlpack(t)', 't2[:2]=-1# show that memory is shared', 't2', 't', 'capsule=torch.utils.dlpack.to_dlpack(t)', 'capsule<capsule object ""dltensor"" at ...>', 't3=torch.from_dlpack(capsule)', 't3', ""t3[0]=-9# now we're sharing memory between 3 tensors"", 't3', 't2', 't']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 11
    capsule<capsule object ""dltensor"" at ...>
                    ^
SyntaxError: invalid syntax
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importarray', ""a=array.array('i',[1,2,3])"", 't=torch.frombuffer(a,dtype=torch.int32)', 't', 't[0]=-1', 'a', '# Interprets the signed char bytes as 32-bit integers.', '# Each 4 signed char elements will be interpreted as', '# 1 signed 32-bit integer.', 'importarray', ""a=array.array('b',[-1,0,0,0])"", 'torch.frombuffer(a,dtype=torch.int32)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.zeros(2,3)', 'torch.zeros(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.zeros_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.ones(2,3)', 'torch.ones(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.ones_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. arange ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.arange(5)', 'torch.arange(1,4)', 'torch.arange(1,2.5,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.range(1,4)', 'torch.range(1,4,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. linspace ( start ,  end ,  steps ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.linspace(3,10,steps=5)', 'torch.linspace(-10,10,steps=5)', 'torch.linspace(start=-10,end=10,steps=5)', 'torch.linspace(start=-10,end=10,steps=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logspace ( start ,  end ,  steps ,  base ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logspace(start=-10,end=10,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=1)', 'torch.logspace(start=2,end=2,steps=1,base=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. eye ( n ,  m ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.eye(3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.empty((2,3),dtype=torch.int32,device='cuda')"", 'torch.empty_like(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_strided ( size ,  stride ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.empty_strided((2,3),(1,2))', 'a', 'a.stride()', 'a.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. full ( size ,  fill_value ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.full((2,3),3.141592)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_tensor ( input ,  scale ,  zero_point ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8).int_repr()', 'torch.quantize_per_tensor([torch.tensor([-1.0,0.0]),torch.tensor([-2.0,2.0])],', 'torch.tensor([0.1,0.2]),torch.tensor([10,20]),torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),torch.tensor(0.1),torch.tensor(10),torch.quint8)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_channel ( input ,  scales ,  zero_points ,  axis ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[-1.0,0.0],[1.0,2.0]])', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8)', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8).int_repr()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. complex ( real ,  imag ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'real=torch.tensor([1,2],dtype=torch.float32)', 'imag=torch.tensor([3,4],dtype=torch.float32)', 'z=torch.complex(real,imag)', 'z', 'z.dtype']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. real ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.real']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. imag ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.imag']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. polar ( abs ,  angle ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importnumpyasnp', 'abs=torch.tensor([1,2],dtype=torch.float64)', 'angle=torch.tensor([np.pi/2,5*np.pi/4],dtype=torch.float64)', 'z=torch.polar(abs,angle)', 'z']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. abs ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.abs(torch.tensor([-1,-2,3]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. angle ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.angle(torch.tensor([-1+1j,-2+2j,3-3j]))*180/3.14159']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. heaviside ( input ,  values ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.tensor([-1.5,0,2.0])', 'values=torch.tensor([0.5])', 'torch.heaviside(input,values)', 'values=torch.tensor([1.2,-2.0,3.5])', 'torch.heaviside(input,values)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argwhere ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([1,0,1])', 'torch.argwhere(t)', 't=torch.tensor([[1,0,1],[0,1,1]])', 'torch.argwhere(t)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. cat ( tensors ,  dim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,3)', 'x', 'torch.cat((x,x,x),0)', 'torch.cat((x,x,x),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. conj ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'x.is_conj()', 'y=torch.conj(x)', 'y.is_conj()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. column_stack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.column_stack((a,b))', 'a=torch.arange(5)', 'b=torch.arange(10).reshape(5,2)', 'torch.column_stack((a,b,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. dstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.dstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.dstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. gather ( input ,  dim ,  index ,  * ,  sparse_grad ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[1,2],[3,4]])', 'torch.gather(t,1,torch.tensor([[0,0],[1,0]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. hstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.hstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.hstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_add_ ( dim ,  index ,  source ,  * ,  alpha )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.ones(5,3)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)', 'index=torch.tensor([0,4,2])', 'x.index_add_(0,index,t)', 'x.index_add_(0,index,t,alpha=-1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.empty(5,3).fill_(2)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)', 'index=torch.tensor([0,4,2,0])', ""x.index_reduce_(0,index,t,'prod')"", 'x=torch.empty(5,3).fill_(2)', ""x.index_reduce_(0,index,t,'prod',include_self=False)""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. index_select ( input ,  dim ,  index ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'indices=torch.tensor([0,2])', 'torch.index_select(x,0,indices)', 'torch.index_select(x,1,indices)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. masked_select ( input ,  mask ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'mask=x.ge(0.5)', 'mask', 'torch.masked_select(x,mask)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. movedim ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.movedim(t,1,0).shape', 'torch.movedim(t,1,0)', 'torch.movedim(t,(1,2),(0,1)).shape', 'torch.movedim(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. moveaxis ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.moveaxis(t,1,0).shape', 'torch.moveaxis(t,1,0)', 'torch.moveaxis(t,(1,2),(0,1)).shape', 'torch.moveaxis(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. narrow ( input ,  dim ,  start ,  length )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[1,2,3],[4,5,6],[7,8,9]])', 'torch.narrow(x,0,0,2)', 'torch.narrow(x,1,1,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nonzero ( input ,  * ,  out ,  as_tuple )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.nonzero(torch.tensor([1,1,1,0,1]))', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]))', 'torch.nonzero(torch.tensor([1,1,1,0,1]),as_tuple=True)', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]),as_tuple=True)', 'torch.nonzero(torch.tensor(5),as_tuple=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. reshape ( input ,  shape )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(4.)', 'torch.reshape(a,(2,2))', 'b=torch.tensor([[0,1],[2,3]])', 'torch.reshape(b,(-1,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. vstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.vstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.vstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_ ( dim ,  index ,  src ,  reduce )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.arange(1,11).reshape((2,5))', 'src', 'index=torch.tensor([[0,1,2,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(0,index,src)', 'index=torch.tensor([[0,1,2],[0,1,4]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(1,index,src)', ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='multiply')"", ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='add')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. diagonal_scatter ( input ,  src ,  offset ,  dim1 ,  dim2 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(3,3)', 'a', 'torch.diagonal_scatter(a,torch.ones(3),0)', 'torch.diagonal_scatter(a,torch.ones(2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. select_scatter ( input ,  src ,  dim ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(2,2)', 'b=torch.ones(2)', 'a.select_scatter(b,0,0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(8,8)', 'b=torch.ones(8)', 'a.slice_scatter(b,start=6)', 'b=torch.ones(2)', 'a.slice_scatter(b,dim=1,start=2,end=6,step=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_add_ ( dim ,  index ,  src )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.ones((2,5))', 'index=torch.tensor([[0,1,2,0,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)', 'index=torch.tensor([[0,1,2,0,0],[0,1,2,2,2]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_reduce_ ( dim ,  index ,  src ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.tensor([1.,2.,3.,4.,5.,6.])', 'index=torch.tensor([0,1,0,1,2,1])', 'input=torch.tensor([1.,2.,3.,4.])', 'input.scatter_reduce(0,index,src,reduce=""sum"")', 'input.scatter_reduce(0,index,src,reduce=""sum"",include_self=False)', 'input2=torch.tensor([5.,4.,3.,2.])', 'input2.scatter_reduce(0,index,src,reduce=""amax"")', 'input2.scatter_reduce(0,index,src,reduce=""amax"",include_self=False)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. split ( tensor ,  split_size_or_sections ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(10).reshape(5,2)', 'a', 'torch.split(a,2)', 'torch.split(a,[1,4])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. squeeze ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.zeros(2,1,2,1,2)', 'x.size()', 'y=torch.squeeze(x)', 'y.size()', 'y=torch.squeeze(x,0)', 'y.size()', 'y=torch.squeeze(x,1)', 'y.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. swapaxes ( input ,  axis0 ,  axis1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])', 'x', 'torch.swapaxes(x,0,1)', 'torch.swapaxes(x,0,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. transpose ( input ,  dim0 ,  dim1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,3)', 'x', 'torch.transpose(x,0,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. swapdims ( input ,  dim0 ,  dim1 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[[0,1],[2,3]],[[4,5],[6,7]]])', 'x', 'torch.swapdims(x,0,1)', 'torch.swapdims(x,0,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. t ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(())', 'x', 'torch.t(x)', 'x=torch.randn(3)', 'x', 'torch.t(x)', 'x=torch.randn(2,3)', 'x', 'torch.t(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. take ( input ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.tensor([[4,3,5],[6,7,8]])', 'torch.take(src,torch.tensor([0,2,5]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. take_along_dim ( input ,  indices ,  dim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[10,30,20],[60,40,50]])', 'max_idx=torch.argmax(t)', 'torch.take_along_dim(t,max_idx)', 'sorted_idx=torch.argsort(t,dim=1)', 'torch.take_along_dim(t,sorted_idx,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tensor_split ( input ,  indices_or_sections ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.arange(8)', 'torch.tensor_split(x,3)', 'x=torch.arange(7)', 'torch.tensor_split(x,3)', 'torch.tensor_split(x,(1,6))', 'x=torch.arange(14).reshape(2,7)', 'x', 'torch.tensor_split(x,3,dim=1)', 'torch.tensor_split(x,(1,6),dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tile ( input ,  dims )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'x.tile((2,))', 'y=torch.tensor([[1,2],[3,4]])', 'torch.tile(y,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. unbind ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.unbind(torch.tensor([[1,2,3],', '[4,5,6],', '[7,8,9]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. unsqueeze ( input ,  dim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3,4])', 'torch.unsqueeze(x,0)', 'torch.unsqueeze(x,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. where ( condition ,  x ,  y )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,2)', 'y=torch.ones(3,2)', 'x', 'torch.where(x>0,x,y)', 'x=torch.randn(2,2,dtype=torch.double)', 'x', 'torch.where(x>0,x,0.)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 class torch. Generator ( device ) ¶","['import numpy as np', 'import numpy', 'import torch', 'g_cpu=torch.Generator()', ""g_cuda=torch.Generator(device='cuda')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. bernoulli ( input ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.empty(3,3).uniform_(0,1)# generate a uniform random matrix with range [0, 1]', 'a', 'torch.bernoulli(a)', 'a=torch.ones(3,3)# probability of drawing ""1"" is 1', 'torch.bernoulli(a)', 'a=torch.zeros(3,3)# probability of drawing ""1"" is 0', 'torch.bernoulli(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. multinomial ( input ,  num_samples ,  replacement ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'weights=torch.tensor([0,10,3,0],dtype=torch.float)# create a tensor of weights', 'torch.multinomial(weights,2)', 'torch.multinomial(weights,4)# ERROR!', 'torch.multinomial(weights,4,replacement=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.normal(mean=torch.arange(1.,11.),std=torch.arange(1,0,-0.1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. normal ( mean ,  std ,  * ,  generator ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.normal(mean=0.5,std=torch.arange(1.,6.))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. poisson ( input ,  generator )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'rates=torch.rand(4,4)*5# rate parameter between 0 and 5', 'torch.poisson(rates)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 class torch.quasirandom. SobolEngine ( dimension ,  scramble ,  seed ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'soboleng=torch.quasirandom.SobolEngine(dimension=5)', 'soboleng.draw(3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. acos ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.acos(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. acosh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4).uniform_(1,2)', 'a', 'torch.acosh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. add ( input ,  other ,  * ,  alpha ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.add(a,20)', 'b=torch.randn(4)', 'b', 'c=torch.randn(4,1)', 'c', 'torch.add(b,c,alpha=10)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. addcdiv ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(1,3)', 't1=torch.randn(3,1)', 't2=torch.randn(1,3)', 'torch.addcdiv(t,t1,t2,value=0.1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. addcmul ( input ,  tensor1 ,  tensor2 ,  * ,  value ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(1,3)', 't1=torch.randn(3,1)', 't2=torch.randn(1,3)', 'torch.addcmul(t,t1,t2,value=0.1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asin ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.asin(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asinh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.asinh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. atan ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.atan(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. atanh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4).uniform_(-1,1)', 'a', 'torch.atanh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. atan2 ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.atan2(a,torch.randn(4))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ceil ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.ceil(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. clamp ( input ,  min ,  max ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.clamp(a,min=-0.5,max=0.5)', 'min=torch.linspace(-1,1,steps=4)', 'torch.clamp(a,min=min)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. min ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.min(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. min ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.min(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. max ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.max(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. max ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.max(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. conj_physical ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.conj_physical(torch.tensor([-1+1j,-2+2j,3-3j]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. copysign ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(5)', 'a', 'torch.copysign(a,1)', 'a=torch.randn(4,4)', 'a', 'b=torch.randn(4)', 'torch.copysign(a,b)', 'a=torch.tensor([1.])', 'b=torch.tensor([-0.])', 'torch.copysign(a,b)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. cos ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.cos(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. cosh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.cosh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. deg2rad ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[180.0,-180.0],[360.0,-360.0],[90.0,-90.0]])', 'torch.deg2rad(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. div ( input ,  other ,  * ,  rounding_mode ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([0.3810,1.2774,-0.2972,-0.3719,0.4637])', 'torch.div(x,0.5)', 'a=torch.tensor([[-0.3711,-1.9353,-0.4605,-0.2917],[0.1815,-1.0111,0.9805,-1.5923],[0.1062,1.4581,0.7759,-1.2344],[-0.1830,-0.0313,1.1908,-1.4757]])', 'b=torch.tensor([0.8032,0.2930,-0.8113,-0.2308])', 'torch.div(a,b)', ""torch.div(a,b,rounding_mode='trunc')"", ""torch.div(a,b,rounding_mode='floor')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. exp ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.exp(torch.tensor([0,math.log(2.)]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. fake_quantize_per_channel_affine ( input ,  scale ,  zero_point ,  quant_min ,  quant_max )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,2,2)', 'x', 'scales=(torch.randn(2)+1)*0.05', 'scales', 'zero_points=torch.zeros(2).to(torch.int32)', 'zero_points', 'torch.fake_quantize_per_channel_affine(x,scales,zero_points,1,0,255)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. fake_quantize_per_tensor_affine ( input ,  scale ,  zero_point ,  quant_min ,  quant_max )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4)', 'x', 'torch.fake_quantize_per_tensor_affine(x,0.1,0,0,255)', 'torch.fake_quantize_per_tensor_affine(x,torch.tensor(0.1),torch.tensor(0),0,255)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. trunc ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.trunc(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. float_power ( input ,  exponent ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randint(10,(4,))', 'a', 'torch.float_power(a,2)', 'a=torch.arange(1,5)', 'a', 'exp=torch.tensor([2,-3,4,-5])', 'exp', 'torch.float_power(a,exp)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. floor ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.floor(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. floor_divide ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([4.0,3.0])', 'b=torch.tensor([2.0,2.0])', 'torch.floor_divide(a,b)', 'torch.floor_divide(a,1.4)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. fmod ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.fmod(torch.tensor([-3.,-2,-1,1,2,3]),2)', 'torch.fmod(torch.tensor([1,2,3,4,5]),-1.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. frac ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.frac(torch.tensor([1,2.5,-3.2]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. frexp ( input ,  * ,  out=None) ,  Tensor ) ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.arange(9.)', 'mantissa,exponent=torch.frexp(x)', 'mantissa', 'exponent', 'torch.ldexp(mantissa,exponent)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. gradient ( input ,  * ,  spacing ,  dim ,  edge_order )   → ¶","['import numpy as np', 'import numpy', 'import torch', '# Estimates the gradient of f(x)=x^2 at points [-2, -1, 2, 4]', 'coordinates=(torch.tensor([-2.,-1.,1.,4.]),)', 'values=torch.tensor([4.,1.,1.,16.],)', 'torch.gradient(values,spacing=coordinates)', '# Estimates the gradient of the R^2 -> R function whose samples are', '# described by the tensor t. Implicit coordinates are [0, 1] for the outermost', '# dimension and [0, 1, 2, 3] for the innermost dimension, and function estimates', '# partial derivative for both dimensions.', 't=torch.tensor([[1,2,4,8],[10,20,40,80]])', 'torch.gradient(t)', '# A scalar value for spacing modifies the relationship between tensor indices', '# and input coordinates by multiplying the indices to find the', '# coordinates. For example, below the indices of the innermost', '# 0, 1, 2, 3 translate to coordinates of [0, 2, 4, 6], and the indices of', '# the outermost dimension 0, 1 translate to coordinates of [0, 2].', 'torch.gradient(t,spacing=2.0)# dim = None (implicitly [0, 1])', '# doubling the spacing between samples halves the estimated partial gradients.>>>', '# Estimates only the partial derivative for dimension 1', 'torch.gradient(t,dim=1)# spacing = None (implicitly 1.)', '# When spacing is a list of scalars, the relationship between the tensor', '# indices and input coordinates changes based on dimension.', '# For example, below, the indices of the innermost dimension 0, 1, 2, 3 translate', '# to coordinates of [0, 3, 6, 9], and the indices of the outermost dimension', '# 0, 1 translate to coordinates of [0, 2].', 'torch.gradient(t,spacing=[3.,2.])', '# The following example is a replication of the previous one with explicit', '# coordinates.', 'coords=(torch.tensor([0,2]),torch.tensor([0,3,6,9]))', 'torch.gradient(t,spacing=coords)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ldexp ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.ldexp(torch.tensor([1.]),torch.tensor([1]))', 'torch.ldexp(torch.tensor([1.0]),torch.tensor([1,2,3,4]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. lerp ( input ,  end ,  weight ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'start=torch.arange(1.,5.)', 'end=torch.empty(4).fill_(10)', 'start', 'end', 'torch.lerp(start,end,0.5)', 'torch.lerp(start,end,torch.full_like(start,0.5))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. lgamma ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(0.5,2,0.5)', 'torch.lgamma(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. log ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(5)*5', 'a', 'torch.log(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. log10 ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(5)', 'a', 'torch.log10(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. log1p ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(5)', 'a', 'torch.log1p(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. log2 ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(5)', 'a', 'torch.log2(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logaddexp ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logaddexp(torch.tensor([-1.0]),torch.tensor([-1.0,-2,-3]))', 'torch.logaddexp(torch.tensor([-100.0,-200,-300]),torch.tensor([-1.0,-2,-3]))', 'torch.logaddexp(torch.tensor([1.0,2000,30000]),torch.tensor([-1.0,-2,-3]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logical_and ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logical_and(torch.tensor([True,False,True]),torch.tensor([True,False,False]))', 'a=torch.tensor([0,1,10,0],dtype=torch.int8)', 'b=torch.tensor([4,0,1,0],dtype=torch.int8)', 'torch.logical_and(a,b)', 'torch.logical_and(a.double(),b.double())', 'torch.logical_and(a.double(),b)', 'torch.logical_and(a,b,out=torch.empty(4,dtype=torch.bool))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logical_not ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logical_not(torch.tensor([True,False]))', 'torch.logical_not(torch.tensor([0,1,-10],dtype=torch.int8))', 'torch.logical_not(torch.tensor([0.,1.5,-10.],dtype=torch.double))', 'torch.logical_not(torch.tensor([0.,1.,-10.],dtype=torch.double),out=torch.empty(3,dtype=torch.int16))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logical_or ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logical_or(torch.tensor([True,False,True]),torch.tensor([True,False,False]))', 'a=torch.tensor([0,1,10,0],dtype=torch.int8)', 'b=torch.tensor([4,0,1,0],dtype=torch.int8)', 'torch.logical_or(a,b)', 'torch.logical_or(a.double(),b.double())', 'torch.logical_or(a.double(),b)', 'torch.logical_or(a,b,out=torch.empty(4,dtype=torch.bool))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logical_xor ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logical_xor(torch.tensor([True,False,True]),torch.tensor([True,False,False]))', 'a=torch.tensor([0,1,10,0],dtype=torch.int8)', 'b=torch.tensor([4,0,1,0],dtype=torch.int8)', 'torch.logical_xor(a,b)', 'torch.logical_xor(a.double(),b.double())', 'torch.logical_xor(a.double(),b)', 'torch.logical_xor(a,b,out=torch.empty(4,dtype=torch.bool))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. hypot ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.hypot(torch.tensor([4.0]),torch.tensor([3.0,4.0,5.0]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. mul ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3)', 'a', 'torch.mul(a,100)', 'b=torch.randn(4,1)', 'b', 'c=torch.randn(1,4)', 'c', 'torch.mul(b,c)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nan_to_num ( input ,  nan ,  posinf ,  neginf ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""x=torch.tensor([float('nan'),float('inf'),-float('inf'),3.14])"", 'torch.nan_to_num(x)', 'torch.nan_to_num(x,nan=2.0)', 'torch.nan_to_num(x,nan=2.0,posinf=1.0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. neg ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(5)', 'a', 'torch.neg(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nextafter ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'eps=torch.finfo(torch.float32).eps', 'torch.nextafter(torch.tensor([1.0,2.0]),torch.tensor([2.0,1.0]))==torch.tensor([eps+1,2-eps])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. positive ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(5)', 't', 'torch.positive(t)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.pow(a,2)', 'exp=torch.arange(1.,5.)a=torch.arange(1.,5.)', 'a', 'exp', 'torch.pow(a,exp)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7
    exp=torch.arange(1.,5.)a=torch.arange(1.,5.)
                           ^
SyntaxError: invalid syntax
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'exp=torch.arange(1.,5.)', 'base=2', 'torch.pow(base,exp)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantized_batch_norm ( input ,  weight=None ,  bias=None ,  mean ,  var ,  eps ,  output_scale ,  output_zero_point )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'qx=torch.quantize_per_tensor(torch.rand(2,2,2,2),1.5,3,torch.quint8)', 'torch.quantized_batch_norm(qx,torch.ones(2),torch.zeros(2),torch.rand(2),torch.rand(2),0.00001,0.2,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantized_max_pool1d ( input ,  kernel_size ,  stride ,  padding ,  dilation ,  ceil_mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'qx=torch.quantize_per_tensor(torch.rand(2,2),1.5,3,torch.quint8)', 'torch.quantized_max_pool1d(qx,[2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantized_max_pool2d ( input ,  kernel_size ,  stride ,  padding ,  dilation ,  ceil_mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'qx=torch.quantize_per_tensor(torch.rand(2,2,2,2),1.5,3,torch.quint8)', 'torch.quantized_max_pool2d(qx,[2,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rad2deg ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[3.142,-3.142],[6.283,-6.283],[1.570,-1.570]])', 'torch.rad2deg(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. reciprocal ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.reciprocal(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. remainder ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.remainder(torch.tensor([-3.,-2,-1,1,2,3]),2)', 'torch.remainder(torch.tensor([1,2,3,4,5]),-1.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. round ( input ,  * ,  decimals ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.round(torch.tensor((4.7,-2.3,9.1,-7.7)))', '# Values equidistant from two integers are rounded towards the', '#   the nearest even value (zero is treated as even)', 'torch.round(torch.tensor([-0.5,0.5,1.5,2.5]))', '# A positive decimals argument rounds to the to that decimal place', 'torch.round(torch.tensor([0.1234567]),decimals=3)', '# A negative decimals argument rounds to the left of the decimal', 'torch.round(torch.tensor([1200.1234567]),decimals=-3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rsqrt ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.rsqrt(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sign ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([0.7,-1.2,0.,2.3])', 'a', 'torch.sign(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sgn ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([3+4j,7-24j,0,1+2j])', 't.sgn()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. signbit ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([0.7,-1.2,0.,2.3])', 'torch.signbit(a)', 'a=torch.tensor([-0.0,0.0])', 'torch.signbit(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sin ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.sin(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sinh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.sinh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sqrt ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.sqrt(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. square ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.square(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sub ( input ,  other ,  * ,  alpha ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor((1,2))', 'b=torch.tensor((0,1))', 'torch.sub(a,b,alpha=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tan ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.tan(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tanh ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.tanh(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argmax ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.argmax(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argmax ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.argmax(a,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argmin ( input ,  dim ,  keepdim )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.argmin(a)', 'torch.argmin(a,dim=1)', 'torch.argmin(a,dim=1,keepdim=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. amax ( input ,  dim ,  keepdim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.amax(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. amin ( input ,  dim ,  keepdim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.amin(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. aminmax ( input ,  * ,  dim=None ,  keepdim=False ,  out=None) ,  Tensor ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.aminmax(torch.tensor([1,-3,5]))', '# aminmax propagates NaNs', 'torch.aminmax(torch.tensor([1,-3,5,torch.nan]))', 't=torch.arange(10).view(2,5)', 't', 't.aminmax(dim=0,keepdim=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. all ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(1,2).bool()', 'a', 'torch.all(a)', 'a=torch.arange(0,3)', 'a', 'torch.all(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. all ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(4,2).bool()', 'a', 'torch.all(a,dim=1)', 'torch.all(a,dim=0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. any ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(1,2).bool()', 'a', 'torch.any(a)', 'a=torch.arange(0,3)', 'a', 'torch.any(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. any ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,2)<0', 'a', 'torch.any(a,1)', 'torch.any(a,0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. dist ( input ,  other ,  p )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4)', 'x', 'y=torch.randn(4)', 'y', 'torch.dist(x,y,3.5)', 'torch.dist(x,y,3)', 'torch.dist(x,y,0)', 'torch.dist(x,y,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logsumexp ( input ,  dim ,  keepdim ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3,3)', 'torch.logsumexp(a,1)', 'torch.dist(torch.logsumexp(a,1),torch.log(torch.sum(torch.exp(a),1)))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. mean ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.mean(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. mean ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.mean(a,1)', 'torch.mean(a,1,True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nanmean ( input ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[torch.nan,1,2],[1,2,3]])', 'x.mean()', 'x.nanmean()', 'x.mean(dim=0)', 'x.nanmean(dim=0)', 'torch.tensor([torch.nan]).nanmean()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. median ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.median(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. median ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,5)', 'a', 'torch.median(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nanmedian ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.tensor([1,float('nan'),3,2])"", 'a.median()', 'a.nanmedian()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nanmedian ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.tensor([[2,3,1],[float('nan'),1,float('nan')]])"", 'a', 'a.median(0)', 'a.nanmedian(0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. mode ( input ,  dim ,  keepdim ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randint(10,(5,))', 'a', 'b=a+(torch.randn(50,1)*5).long()', 'torch.mode(b,0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. norm ( input ,  p ,  dim ,  keepdim ,  out ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch', 'a=torch.arange(9,dtype=torch.float)-4', 'b=a.reshape((3,3))', 'torch.norm(a)', 'torch.norm(b)', ""torch.norm(a,float('inf'))"", ""torch.norm(b,float('inf'))"", 'c=torch.tensor([[1,2,3],[-1,1,4]],dtype=torch.float)', 'torch.norm(c,dim=0)', 'torch.norm(c,dim=1)', 'torch.norm(c,p=1,dim=1)', 'd=torch.arange(8,dtype=torch.float).reshape(2,2,2)', 'torch.norm(d,dim=(1,2))', 'torch.norm(d[0,:,:]),torch.norm(d[1,:,:])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nansum ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.tensor([1.,2.,float('nan'),4.])"", 'torch.nansum(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nansum ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.nansum(torch.tensor([1.,float(""nan"")]))', 'a=torch.tensor([[1,2],[3.,float(""nan"")]])', 'torch.nansum(a)', 'torch.nansum(a,dim=0)', 'torch.nansum(a,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. prod ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.prod(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. prod ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,2)', 'a', 'torch.prod(a,1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantile ( input ,  q ,  dim ,  keepdim ,  * ,  interpolation ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(2,3)', 'a', 'q=torch.tensor([0.25,0.5,0.75])', 'torch.quantile(a,q,dim=1,keepdim=True)', 'torch.quantile(a,q,dim=1,keepdim=True).shape', 'a=torch.arange(4.)', 'a', ""torch.quantile(a,0.6,interpolation='linear')"", ""torch.quantile(a,0.6,interpolation='lower')"", ""torch.quantile(a,0.6,interpolation='higher')"", ""torch.quantile(a,0.6,interpolation='midpoint')"", ""torch.quantile(a,0.6,interpolation='nearest')"", ""torch.quantile(a,0.4,interpolation='nearest')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nanquantile ( input ,  q ,  dim ,  keepdim ,  * ,  interpolation ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""t=torch.tensor([float('nan'),1,2])"", 't.quantile(0.5)', 't.nanquantile(0.5)', ""t=torch.tensor([[float('nan'),float('nan')],[1,2]])"", 't', 't.nanquantile(0.5,dim=0)', 't.nanquantile(0.5,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. std ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[-0.8166,-1.3802,-0.3560]])', 'torch.std(a,unbiased=False)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. std_mean ( input ,  dim ,  unbiased ,  keepdim ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[-0.8166,-1.3802,-0.3560]])', 'torch.std_mean(a,unbiased=False)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sum ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,3)', 'a', 'torch.sum(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sum ( input ,  * ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4,4)', 'a', 'torch.sum(a,1)', 'b=torch.arange(4*5*6).view(4,5,6)', 'torch.sum(b,(2,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_tensor ( obj ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'torch.is_tensor(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_nonzero ( input ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.is_nonzero(torch.tensor([0.]))', 'torch.is_nonzero(torch.tensor([1.5]))', 'torch.is_nonzero(torch.tensor([False]))', 'torch.is_nonzero(torch.tensor([3]))', 'torch.is_nonzero(torch.tensor([1,3,5]))...', 'torch.is_nonzero(torch.tensor([]))...']","  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 8
    torch.is_nonzero(torch.tensor([1,3,5]))...
                                           ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.get_default_dtype()# initial default for floating point is torch.float32', 'torch.set_default_dtype(torch.float64)', 'torch.get_default_dtype()# default is now changed to torch.float64', 'torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this', 'torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32', 'torch.set_default_tensor_type(torch.DoubleTensor)', 'torch.tensor([1.2,3]).dtype# a new floating point tensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. numel ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,2,3,4,5)', 'torch.numel(a)', 'a=torch.zeros(4,4)', 'torch.numel(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Limit the precision of elements', 'torch.set_printoptions(precision=2)', 'torch.tensor([1.12345])', '# Limit the number of elements shown', 'torch.set_printoptions(threshold=5)', 'torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])', '# Restore defaults', ""torch.set_printoptions(profile='default')"", 'torch.tensor([1.12345])', 'torch.arange(10)']","  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 9
    torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])
                    ^
SyntaxError: invalid syntax
"
"
 torch. set_flush_denormal ( mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.set_flush_denormal(True)', 'torch.tensor([1e-323],dtype=torch.float64)', 'torch.set_flush_denormal(False)', 'torch.tensor([1e-323],dtype=torch.float64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rand ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.rand(4)', 'torch.rand(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randn ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randn(4)', 'torch.randn(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randint ( low=0 ,  high ,  size ,  \* ,  generator=None ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randint(3,5,(3,))', 'torch.randint(10,(2,2))', 'torch.randint(3,10,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randperm ( n ,  * ,  generator ,  out ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randperm(4)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False ,  memory_format=torch.contiguous_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.empty((2,3),dtype=torch.int64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([[0.1,1.2],[2.2,3.1],[4.9,5.2]])', 'torch.tensor([0,1])# Type inference on data', ""torch.tensor([[0.11111,0.222222,0.3333333]],dtype=torch.float64,device=torch.device('cuda:0'))# creates a double tensor on a CUDA device"", 'torch.tensor(3.14159)# Create a zero-dimensional (scalar) tensor', 'torch.tensor([])# Create an empty tensor (of size (0,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', ""# Shares memory with tensor 'a'"", 'b=torch.asarray(a)', 'a.data_ptr()==b.data_ptr()', '# Forces memory copy', 'c=torch.asarray(a,copy=True)', 'a.data_ptr()==c.data_ptr()', 'a=torch.tensor([1,2,3],requires_grad=True).float()', 'b=a+2', 'b', ""# Shares memory with tensor 'b', with no grad"", 'c=torch.asarray(b)', 'c', ""# Shares memory with tensor 'b', retaining autograd history"", 'd=torch.asarray(b,requires_grad=True)', 'd', 'array=numpy.array([1,2,3])', ""# Shares memory with array 'array'"", 't1=torch.asarray(array)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", '# Copies memory due to dtype mismatch', 't2=torch.asarray(array,dtype=torch.float32)', ""array.__array_interface__['data'][0]==t1.data_ptr()""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_tensor ( data ,  dtype ,  device )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.as_tensor(a)', 't', 't[0]=-1', 'a', 'a=numpy.array([1,2,3])', ""t=torch.as_tensor(a,device=torch.device('cuda'))"", 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. as_strided ( input ,  size ,  stride ,  storage_offset )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,3)', 'x', 't=torch.as_strided(x,(2,2),(1,2))', 't', 't=torch.as_strided(x,(2,2),(1,2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_numpy ( ndarray )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.from_numpy(a)', 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. from_dlpack ( ext_tensor )   → [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch.utils.dlpack', 't=torch.arange(4)# Convert a tensor directly (supported in PyTorch >= 1.10)', 't2=torch.from_dlpack(t)', 't2[:2]=-1# show that memory is shared', 't2', 't', 'capsule=torch.utils.dlpack.to_dlpack(t)', 'capsule<capsule object ""dltensor"" at ...>', 't3=torch.from_dlpack(capsule)', 't3', ""t3[0]=-9# now we're sharing memory between 3 tensors"", 't3', 't2', 't']","  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 11
    capsule<capsule object ""dltensor"" at ...>
                    ^
SyntaxError: invalid syntax
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importarray', ""a=array.array('i',[1,2,3])"", 't=torch.frombuffer(a,dtype=torch.int32)', 't', 't[0]=-1', 'a', '# Interprets the signed char bytes as 32-bit integers.', '# Each 4 signed char elements will be interpreted as', '# 1 signed 32-bit integer.', 'importarray', ""a=array.array('b',[-1,0,0,0])"", 'torch.frombuffer(a,dtype=torch.int32)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.zeros(2,3)', 'torch.zeros(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. zeros_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.zeros_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.ones(2,3)', 'torch.ones(5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. ones_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.empty(2,3)', 'torch.ones_like(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. arange ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.arange(5)', 'torch.arange(1,4)', 'torch.arange(1,2.5,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.range(1,4)', 'torch.range(1,4,0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. linspace ( start ,  end ,  steps ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.linspace(3,10,steps=5)', 'torch.linspace(-10,10,steps=5)', 'torch.linspace(start=-10,end=10,steps=5)', 'torch.linspace(start=-10,end=10,steps=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. logspace ( start ,  end ,  steps ,  base ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.logspace(start=-10,end=10,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=5)', 'torch.logspace(start=0.1,end=1.0,steps=1)', 'torch.logspace(start=2,end=2,steps=1,base=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. eye ( n ,  m ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.eye(3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.empty((2,3),dtype=torch.int32,device='cuda')"", 'torch.empty_like(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. empty_strided ( size ,  stride ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.empty_strided((2,3),(1,2))', 'a', 'a.stride()', 'a.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. full ( size ,  fill_value ,  * ,  out ,  dtype ,  layout ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.full((2,3),3.141592)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_tensor ( input ,  scale ,  zero_point ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),0.1,10,torch.quint8).int_repr()', 'torch.quantize_per_tensor([torch.tensor([-1.0,0.0]),torch.tensor([-2.0,2.0])],', 'torch.tensor([0.1,0.2]),torch.tensor([10,20]),torch.quint8)', 'torch.quantize_per_tensor(torch.tensor([-1.0,0.0,1.0,2.0]),torch.tensor(0.1),torch.tensor(10),torch.quint8)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. quantize_per_channel ( input ,  scales ,  zero_points ,  axis ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[-1.0,0.0],[1.0,2.0]])', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8)', 'torch.quantize_per_channel(x,torch.tensor([0.1,0.01]),torch.tensor([10,0]),0,torch.quint8).int_repr()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. complex ( real ,  imag ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'real=torch.tensor([1,2],dtype=torch.float32)', 'imag=torch.tensor([3,4],dtype=torch.float32)', 'z=torch.complex(real,imag)', 'z', 'z.dtype']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. real ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.real']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. imag ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(4,dtype=torch.cfloat)', 'x', 'x.imag']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. polar ( abs ,  angle ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importnumpyasnp', 'abs=torch.tensor([1,2],dtype=torch.float64)', 'angle=torch.tensor([np.pi/2,5*np.pi/4],dtype=torch.float64)', 'z=torch.polar(abs,angle)', 'z']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. abs ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.abs(torch.tensor([-1,-2,3]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. angle ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.angle(torch.tensor([-1+1j,-2+2j,3-3j]))*180/3.14159']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. heaviside ( input ,  values ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.tensor([-1.5,0,2.0])', 'values=torch.tensor([0.5])', 'torch.heaviside(input,values)', 'values=torch.tensor([1.2,-2.0,3.5])', 'torch.heaviside(input,values)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. argwhere ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([1,0,1])', 'torch.argwhere(t)', 't=torch.tensor([[1,0,1],[0,1,1]])', 'torch.argwhere(t)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. cat ( tensors ,  dim ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,3)', 'x', 'torch.cat((x,x,x),0)', 'torch.cat((x,x,x),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. conj ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'x.is_conj()', 'y=torch.conj(x)', 'y.is_conj()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. column_stack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.column_stack((a,b))', 'a=torch.arange(5)', 'b=torch.arange(10).reshape(5,2)', 'torch.column_stack((a,b,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. dstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.dstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.dstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. gather ( input ,  dim ,  index ,  * ,  sparse_grad ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[1,2],[3,4]])', 'torch.gather(t,1,torch.tensor([[0,0],[1,0]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. hstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.hstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.hstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_add_ ( dim ,  index ,  source ,  * ,  alpha )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.ones(5,3)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)', 'index=torch.tensor([0,4,2])', 'x.index_add_(0,index,t)', 'x.index_add_(0,index,t,alpha=-1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.empty(5,3).fill_(2)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)', 'index=torch.tensor([0,4,2,0])', ""x.index_reduce_(0,index,t,'prod')"", 'x=torch.empty(5,3).fill_(2)', ""x.index_reduce_(0,index,t,'prod',include_self=False)""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. index_select ( input ,  dim ,  index ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'indices=torch.tensor([0,2])', 'torch.index_select(x,0,indices)', 'torch.index_select(x,1,indices)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. masked_select ( input ,  mask ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(3,4)', 'x', 'mask=x.ge(0.5)', 'mask', 'torch.masked_select(x,mask)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. movedim ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.movedim(t,1,0).shape', 'torch.movedim(t,1,0)', 'torch.movedim(t,(1,2),(0,1)).shape', 'torch.movedim(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. moveaxis ( input ,  source ,  destination )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(3,2,1)', 't', 'torch.moveaxis(t,1,0).shape', 'torch.moveaxis(t,1,0)', 'torch.moveaxis(t,(1,2),(0,1)).shape', 'torch.moveaxis(t,(1,2),(0,1))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. narrow ( input ,  dim ,  start ,  length )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[1,2,3],[4,5,6],[7,8,9]])', 'torch.narrow(x,0,0,2)', 'torch.narrow(x,1,1,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. nonzero ( input ,  * ,  out ,  as_tuple )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.nonzero(torch.tensor([1,1,1,0,1]))', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]))', 'torch.nonzero(torch.tensor([1,1,1,0,1]),as_tuple=True)', 'torch.nonzero(torch.tensor([[0.6,0.0,0.0,0.0],[0.0,0.4,0.0,0.0],[0.0,0.0,1.2,0.0],[0.0,0.0,0.0,-0.4]]),as_tuple=True)', 'torch.nonzero(torch.tensor(5),as_tuple=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. reshape ( input ,  shape )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(4.)', 'torch.reshape(a,(2,2))', 'b=torch.tensor([[0,1],[2,3]])', 'torch.reshape(b,(-1,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. vstack ( tensors ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', 'b=torch.tensor([4,5,6])', 'torch.vstack((a,b))', 'a=torch.tensor([[1],[2],[3]])', 'b=torch.tensor([[4],[5],[6]])', 'torch.vstack((a,b))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_ ( dim ,  index ,  src ,  reduce )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.arange(1,11).reshape((2,5))', 'src', 'index=torch.tensor([[0,1,2,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(0,index,src)', 'index=torch.tensor([[0,1,2],[0,1,4]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_(1,index,src)', ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='multiply')"", ""torch.full((2,4),2.).scatter_(1,torch.tensor([[2],[3]]),1.23,reduce='add')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. diagonal_scatter ( input ,  src ,  offset ,  dim1 ,  dim2 )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(3,3)', 'a', 'torch.diagonal_scatter(a,torch.ones(3),0)', 'torch.diagonal_scatter(a,torch.ones(2),1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. select_scatter ( input ,  src ,  dim ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(2,2)', 'b=torch.ones(2)', 'a.select_scatter(b,0,0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(8,8)', 'b=torch.ones(8)', 'a.slice_scatter(b,start=6)', 'b=torch.ones(2)', 'a.slice_scatter(b,dim=1,start=2,end=6,step=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 Tensor. scatter_add_ ( dim ,  index ,  src )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.ones((2,5))', 'index=torch.tensor([[0,1,2,0,0]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)', 'index=torch.tensor([[0,1,2,0,0],[0,1,2,2,2]])', 'torch.zeros(3,5,dtype=src.dtype).scatter_add_(0,index,src)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_tensor ( obj ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'torch.is_tensor(x)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. is_nonzero ( input ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.is_nonzero(torch.tensor([0.]))', 'torch.is_nonzero(torch.tensor([1.5]))', 'torch.is_nonzero(torch.tensor([False]))', 'torch.is_nonzero(torch.tensor([3]))', 'torch.is_nonzero(torch.tensor([1,3,5]))...', 'torch.is_nonzero(torch.tensor([]))...']","  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 8
    torch.is_nonzero(torch.tensor([1,3,5]))...
                                           ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.get_default_dtype()# initial default for floating point is torch.float32', 'torch.set_default_dtype(torch.float64)', 'torch.get_default_dtype()# default is now changed to torch.float64', 'torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this', 'torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32', 'torch.set_default_tensor_type(torch.DoubleTensor)', 'torch.tensor([1.2,3]).dtype# a new floating point tensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. numel ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(1,2,3,4,5)', 'torch.numel(a)', 'a=torch.zeros(4,4)', 'torch.numel(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Limit the precision of elements', 'torch.set_printoptions(precision=2)', 'torch.tensor([1.12345])', '# Limit the number of elements shown', 'torch.set_printoptions(threshold=5)', 'torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])', '# Restore defaults', ""torch.set_printoptions(profile='default')"", 'torch.tensor([1.12345])', 'torch.arange(10)']","  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 9
    torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])
                    ^
SyntaxError: invalid syntax
"
"
 torch. set_flush_denormal ( mode )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.set_flush_denormal(True)', 'torch.tensor([1e-323],dtype=torch.float64)', 'torch.set_flush_denormal(False)', 'torch.tensor([1e-323],dtype=torch.float64)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. rand ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.rand(4)', 'torch.rand(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randn ( *size ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False ,  pin_memory=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randn(4)', 'torch.randn(2,3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. randint ( low=0 ,  high ,  size ,  \* ,  generator=None ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.randint(3,5,(3,))', 'torch.randint(10,(2,2))', 'torch.randint(3,10,(2,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/example.py"", line 3, in <module>
    import torch
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py"", line 236, in <module>
    from torch._C import *  # noqa: F403
ImportError: /home/nimashiri/anaconda3/envs/torch-1.8.0/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /home/nimashiri/.local/lib/python3.9/site-packages/torch/lib/libtorch_python.so)
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: PyTorch is not linked with support for cuda devices
"
"
 torch. is_nonzero ( input ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.is_nonzero(torch.tensor([0.]))', 'torch.is_nonzero(torch.tensor([1.5]))', 'torch.is_nonzero(torch.tensor([False]))', 'torch.is_nonzero(torch.tensor([3]))', 'torch.is_nonzero(torch.tensor([1,3,5]))...', 'torch.is_nonzero(torch.tensor([]))...']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    torch.is_nonzero(torch.tensor([1,3,5]))...
                                           ^
SyntaxError: invalid syntax
"
"
 torch. get_default_dtype ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.get_default_dtype()# initial default for floating point is torch.float32', 'torch.set_default_dtype(torch.float64)', 'torch.get_default_dtype()# default is now changed to torch.float64', 'torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this', 'torch.get_default_dtype()# changed to torch.float32, the dtype for torch.FloatTensor']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py:615: UserWarning: torch.set_default_tensor_type() is deprecated as of PyTorch 2.1, please use torch.set_default_dtype() and torch.set_default_device() as alternatives. (Triggered internally at /media/nimashiri/SSD/pytorch/torch/csrc/tensor/python_tensor.cpp:451.)
  _C._set_default_tensor_type(t)
Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 13, in json_serialize
    json.dumps(v)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/__init__.py"", line 231, in dumps
    return _default_encoder.encode(obj)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 257, in iterencode
    return _iterencode(o, 0)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type tensortype is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 56, in get_var_shape
    return list(s)  # convert torch.Size to list
TypeError: 'getset_descriptor' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    torch.set_default_tensor_type(torch.FloatTensor)# setting tensor type also affects this
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 102, in wrapper
    param_dict = build_param_dict(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 42, in build_param_dict
    param_dict['parameter:%d' % ind] = json_serialize(arg)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 17, in json_serialize
    return get_var_signature(
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 88, in get_var_signature
    s['shape'] = get_var_shape(var)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 58, in get_var_shape
    print(e.message)
AttributeError: 'TypeError' object has no attribute 'message'
"
"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype# initial default for floating point is torch.float32', 'torch.set_default_tensor_type(torch.DoubleTensor)', 'torch.tensor([1.2,3]).dtype# a new floating point tensor']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/__init__.py:615: UserWarning: torch.set_default_tensor_type() is deprecated as of PyTorch 2.1, please use torch.set_default_dtype() and torch.set_default_device() as alternatives. (Triggered internally at /media/nimashiri/SSD/pytorch/torch/csrc/tensor/python_tensor.cpp:451.)
  _C._set_default_tensor_type(t)
Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 13, in json_serialize
    json.dumps(v)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/__init__.py"", line 231, in dumps
    return _default_encoder.encode(obj)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 257, in iterencode
    return _iterencode(o, 0)
  File ""/home/nimashiri/anaconda3/envs/torch-1.8.0/lib/python3.9/json/encoder.py"", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type tensortype is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 56, in get_var_shape
    return list(s)  # convert torch.Size to list
TypeError: 'getset_descriptor' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    torch.set_default_tensor_type(torch.DoubleTensor)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 102, in wrapper
    param_dict = build_param_dict(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 42, in build_param_dict
    param_dict['parameter:%d' % ind] = json_serialize(arg)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 17, in json_serialize
    return get_var_signature(
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 88, in get_var_signature
    s['shape'] = get_var_shape(var)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 58, in get_var_shape
    print(e.message)
AttributeError: 'TypeError' object has no attribute 'message'
"
"
 torch. set_printoptions ( precision ,  threshold ,  edgeitems ,  linewidth ,  profile ,  sci_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Limit the precision of elements', 'torch.set_printoptions(precision=2)', 'torch.tensor([1.12345])', '# Limit the number of elements shown', 'torch.set_printoptions(threshold=5)', 'torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])', '# Restore defaults', ""torch.set_printoptions(profile='default')"", 'torch.tensor([1.12345])', 'torch.arange(10)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    torch.arange(10)tensor([0, 1, 2, ..., 7, 8, 9])
                    ^
SyntaxError: invalid syntax
"
"
 torch. tensor ( data ,  * ,  dtype ,  device ,  requires_grad ,  pin_memory )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([[0.1,1.2],[2.2,3.1],[4.9,5.2]])', 'torch.tensor([0,1])# Type inference on data', ""torch.tensor([[0.11111,0.222222,0.3333333]],dtype=torch.float64,device=torch.device('cuda:0'))# creates a double tensor on a CUDA device"", 'torch.tensor(3.14159)# Create a zero-dimensional (scalar) tensor', 'torch.tensor([])# Create an empty tensor (of size (0,))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    torch.tensor([[0.11111,0.222222,0.3333333]],dtype=torch.float64,device=torch.device('cuda:0'))# creates a double tensor on a CUDA device
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 torch. sparse_coo_tensor ( indices ,  values ,  size ,  * ,  dtype ,  device ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'i=torch.tensor([[0,1,1],[2,0,2]])', 'v=torch.tensor([3,4,5],dtype=torch.float32)', 'torch.sparse_coo_tensor(i,v,[2,4])', 'torch.sparse_coo_tensor(i,v)# Shape inference', ""torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))"", 'S=torch.sparse_coo_tensor(torch.empty([1,0]),[],[1])', 'S=torch.sparse_coo_tensor(torch.empty([1,0]),torch.empty([0,2]),[1,2])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    torch.sparse_coo_tensor(i,v,[2,4],dtype=torch.float64,device=torch.device('cuda:0'))
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: PyTorch is not linked with support for cuda devices
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([1,2,3])', ""# Shares memory with tensor 'a'"", 'b=torch.asarray(a)', 'a.data_ptr()==b.data_ptr()', '# Forces memory copy', 'c=torch.asarray(a,copy=True)', 'a.data_ptr()==c.data_ptr()', 'a=torch.tensor([1,2,3],requires_grad=True).float()', 'b=a+2', 'b', ""# Shares memory with tensor 'b', with no grad"", 'c=torch.asarray(b)', 'c', ""# Shares memory with tensor 'b', retaining autograd history"", 'd=torch.asarray(b,requires_grad=True)', 'd', 'array=numpy.array([1,2,3])', ""# Shares memory with array 'array'"", 't1=torch.asarray(array)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", '# Copies memory due to dtype mismatch', 't2=torch.asarray(array,dtype=torch.float32)', ""array.__array_interface__['data'][0]==t1.data_ptr()""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 11, in <module>
    a=torch.tensor([1,2,3],requires_grad=True).float()
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: Only Tensors of floating point and complex dtype can require gradients
"
"
 torch. as_tensor ( data ,  dtype ,  device )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.as_tensor(a)', 't', 't[0]=-1', 'a', 'a=numpy.array([1,2,3])', ""t=torch.as_tensor(a,device=torch.device('cuda'))"", 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    t=torch.as_tensor(a)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: Could not infer dtype of numpy.int64
"
"
 torch. from_numpy ( ndarray )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=numpy.array([1,2,3])', 't=torch.from_numpy(a)', 't', 't[0]=-1', 'a']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    t=torch.from_numpy(a)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: PyTorch was compiled without NumPy support
"
"
 torch. from_dlpack ( ext_tensor )   → [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch.utils.dlpack', 't=torch.arange(4)# Convert a tensor directly (supported in PyTorch >= 1.10)', 't2=torch.from_dlpack(t)', 't2[:2]=-1# show that memory is shared', 't2', 't', 'capsule=torch.utils.dlpack.to_dlpack(t)', 'capsule<capsule object ""dltensor"" at ...>', 't3=torch.from_dlpack(capsule)', 't3', ""t3[0]=-9# now we're sharing memory between 3 tensors"", 't3', 't2', 't']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 11
    capsule<capsule object ""dltensor"" at ...>
                    ^
SyntaxError: invalid syntax
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importarray', ""a=array.array('i',[1,2,3])"", 't=torch.frombuffer(a,dtype=torch.int32)', 't', 't[0]=-1', 'a', '# Interprets the signed char bytes as 32-bit integers.', '# Each 4 signed char elements will be interpreted as', '# 1 signed 32-bit integer.', 'importarray', ""a=array.array('b',[-1,0,0,0])"", 'torch.frombuffer(a,dtype=torch.int32)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importarray
NameError: name 'importarray' is not defined
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.range(1,4)', 'torch.range(1,4,0.5)']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  outputs = func(*args, **kwargs)
"
"
 torch. empty_like ( input ,  * ,  dtype ,  layout ,  device ,  requires_grad ,  memory_format )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""a=torch.empty((2,3),dtype=torch.int32,device='cuda')"", 'torch.empty_like(a)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    a=torch.empty((2,3),dtype=torch.int32,device='cuda')
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 torch. polar ( abs ,  angle ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'importnumpyasnp', 'abs=torch.tensor([1,2],dtype=torch.float64)', 'angle=torch.tensor([np.pi/2,5*np.pi/4],dtype=torch.float64)', 'z=torch.polar(abs,angle)', 'z']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importnumpyasnp
NameError: name 'importnumpyasnp' is not defined
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.empty(5,3).fill_(2)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)', 'index=torch.tensor([0,4,2,0])', ""x.index_reduce_(0,index,t,'prod')"", 'x=torch.empty(5,3).fill_(2)', ""x.index_reduce_(0,index,t,'prod',include_self=False)""]","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: index_reduce() is in beta and the API may change at any time. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/TensorAdvancedIndexing.cpp:1138.)
  outputs = func(*args, **kwargs)
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(8,8)', 'b=torch.ones(8)', 'a.slice_scatter(b,start=6)', 'b=torch.ones(2)', 'a.slice_scatter(b,dim=1,start=2,end=6,step=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    a.slice_scatter(b,start=6)
RuntimeError: expected src to have a size equal to the slice of self. src size = [8], slice size = [2, 8]
"
"
 class torch. Generator ( device ) ¶","['import numpy as np', 'import numpy', 'import torch', 'g_cpu=torch.Generator()', ""g_cuda=torch.Generator(device='cuda')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    g_cuda=torch.Generator(device='cuda')
RuntimeError: Device type CUDA is not supported for torch.Generator() api.
"
"
 torch. exp ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.exp(torch.tensor([0,math.log(2.)]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    torch.exp(torch.tensor([0,math.log(2.)]))
NameError: name 'math' is not defined
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', 'a', 'torch.pow(a,2)', 'exp=torch.arange(1.,5.)a=torch.arange(1.,5.)', 'a', 'exp', 'torch.pow(a,exp)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7
    exp=torch.arange(1.,5.)a=torch.arange(1.,5.)
                           ^
SyntaxError: invalid syntax
"
"
 torch. norm ( input ,  p ,  dim ,  keepdim ,  out ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch', 'a=torch.arange(9,dtype=torch.float)-4', 'b=a.reshape((3,3))', 'torch.norm(a)', 'torch.norm(b)', ""torch.norm(a,float('inf'))"", ""torch.norm(b,float('inf'))"", 'c=torch.tensor([[1,2,3],[-1,1,4]],dtype=torch.float)', 'torch.norm(c,dim=0)', 'torch.norm(c,dim=1)', 'torch.norm(c,p=1,dim=1)', 'd=torch.arange(8,dtype=torch.float).reshape(2,2,2)', 'torch.norm(d,dim=(1,2))', 'torch.norm(d[0,:,:]),torch.norm(d[1,:,:])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importtorch
NameError: name 'importtorch' is not defined
"
"
 torch. block_diag ( * ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch', 'A=torch.tensor([[0,1],[1,0]])', 'B=torch.tensor([[3,4,5],[6,7,8]])', 'C=torch.tensor(7)', 'D=torch.tensor([1,2,3])', 'E=torch.tensor([[4],[5],[6]])', 'torch.block_diag(A,B,C,D,E)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importtorch
NameError: name 'importtorch' is not defined
"
"
 torch. cartesian_prod ( * ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importitertools', 'a=[1,2,3]', 'b=[4,5]', 'list(itertools.product(a,b))', 'tensor_a=torch.tensor(a)', 'tensor_b=torch.tensor(b)', 'torch.cartesian_prod(tensor_a,tensor_b)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importitertools
NameError: name 'importitertools' is not defined
"
"
 torch. combinations ( input ,  r ,  with_replacement )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=[1,2,3]', 'list(itertools.combinations(a,r=2))', 'list(itertools.combinations(a,r=3))', 'list(itertools.combinations_with_replacement(a,r=2))', 'tensor_a=torch.tensor(a)', 'torch.combinations(tensor_a)', 'torch.combinations(tensor_a,r=3)', 'torch.combinations(tensor_a,with_replacement=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    list(itertools.combinations(a,r=2))
NameError: name 'itertools' is not defined
"
"
 torch. meshgrid ( * ,  indexing ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'y=torch.tensor([4,5,6])Observe the element-wise pairings across the grid, (1, 4),(1, 5), ..., (3, 6). This is the same thing as the', ""grid_x,grid_y=torch.meshgrid(x,y,indexing='ij')"", 'grid_x', 'grid_y', 'torch.equal(torch.cat(tuple(torch.dstack([grid_x,grid_y]))),torch.cartesian_prod(x,y))', 'importmatplotlib.pyplotasplt', 'xs=torch.linspace(-5,5,steps=100)', 'ys=torch.linspace(-5,5,steps=100)', ""x,y=torch.meshgrid(xs,ys,indexing='xy')"", 'z=torch.sin(torch.sqrt(x*x+y*y))', ""ax=plt.axes(projection='3d')"", 'ax.plot_surface(x.numpy(),y.numpy(),z.numpy())', 'plt.show()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5
    y=torch.tensor([4,5,6])Observe the element-wise pairings across the grid, (1, 4),(1, 5), ..., (3, 6). This is the same thing as the
                           ^
SyntaxError: invalid syntax
"
"
 torch. tensordot ( a ,  b ,  dims ,  out ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.arange(60.).reshape(3,4,5)', 'b=torch.arange(24.).reshape(4,3,2)', 'torch.tensordot(a,b,dims=([1,0],[0,1]))', ""a=torch.randn(3,4,5,device='cuda')"", ""b=torch.randn(4,5,6,device='cuda')"", 'c=torch.tensordot(a,b,dims=2).cpu()', 'a=torch.randn(3,5,4,6)', 'b=torch.randn(6,4,5,3)', 'torch.tensordot(a,b,dims=([2,1,3],[1,2,0]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    a=torch.randn(3,4,5,device='cuda')
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 torch. chain_matmul ( * ,  out ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3,4)', 'b=torch.randn(4,5)', 'c=torch.randn(5,6)', 'd=torch.randn(6,7)', '# will raise a deprecation warning', 'torch.chain_matmul(a,b,c,d)']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/functional.py:1647: UserWarning: torch.chain_matmul is deprecated and will be removed in a future PyTorch release. Use torch.linalg.multi_dot instead, which accepts a list of two or more tensors rather than multiple parameters. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/LinearAlgebra.cpp:1080.)
  return _VF.chain_matmul(matrices)  # type: ignore[attr-defined]
"
"
 torch. cholesky ( input ,  upper ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3,3)', 'a=a@a.mT+1e-3# make symmetric positive-definite', 'l=torch.cholesky(a)', 'a', 'l', 'l@l.mT', 'a=torch.randn(3,2,2)# Example for batched input', 'a=a@a.mT+1e-03# make symmetric positive-definite', 'l=torch.cholesky(a)', 'z=l@l.mT', 'torch.dist(z,a)']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: torch.cholesky is deprecated in favor of torch.linalg.cholesky and will be removed in a future PyTorch release.
L = torch.cholesky(A)
should be replaced with
L = torch.linalg.cholesky(A)
and
U = torch.cholesky(A, upper=True)
should be replaced with
U = torch.linalg.cholesky(A).mH().
This transform will produce equivalent results for all valid (symmetric positive definite) inputs. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/BatchLinearAlgebra.cpp:1692.)
  outputs = func(*args, **kwargs)
"
"
 torch. inner ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', '>>>torch.inner(torch.tensor([1,2,3]),torch.tensor([0,2,1]))', '>>>a=torch.randn(2,3)', '>>>a', '>>>b=torch.randn(2,4,3)', '>>>b', '>>>torch.inner(a,b)', '>>>torch.inner(a,torch.tensor(2))']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4
    >>>torch.inner(torch.tensor([1,2,3]),torch.tensor([0,2,1]))
    ^
SyntaxError: invalid syntax
"
"
 torch. lu ( * ,  ** ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'A_LU,pivots=torch.lu(A)', 'A_LU', 'pivots', 'A_LU,pivots,info=torch.lu(A,get_infos=True)', ""ifinfo.nonzero().size(0)==0:print('LU factorization succeeded for all samples!')""]","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    ifinfo.nonzero().size(0)==0:print('LU factorization succeeded for all samples!')
    ^
SyntaxError: illegal target for annotation
"
"
 torch. lu_solve ( b ,  LU_data ,  LU_pivots ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'b=torch.randn(2,3,1)', 'LU,pivots=torch.linalg.lu_factor(A)', 'x=torch.lu_solve(b,LU,pivots)', 'torch.dist(A@x,b)']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: torch.lu_solve is deprecated in favor of torch.linalg.lu_solveand will be removed in a future PyTorch release.
Note that torch.linalg.lu_solve has its arguments reversed.
X = torch.lu_solve(B, LU, pivots)
should be replaced with
X = torch.linalg.lu_solve(LU, pivots, B) (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/BatchLinearAlgebra.cpp:2149.)
  outputs = func(*args, **kwargs)
"
"
 torch.linalg. lu_factor ( A ,  * ,  bool ,  out=None) ,  Tensor ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'B1=torch.randn(2,3,4)', 'B2=torch.randn(2,3,7)', 'A_factor=torch.linalg.lu_factor(A)', 'X1=torch.linalg.lu_solve(A_factor,B1)', 'X2=torch.linalg.lu_solve(A_factor,B2)', 'torch.allclose(A@X1,B1)', 'torch.allclose(A@X2,B2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    X1=torch.linalg.lu_solve(A_factor,B1)
TypeError: linalg_lu_solve(): argument 'LU' (position 1) must be Tensor, not torch.return_types.linalg_lu_factor
"
"
 torch. lu_unpack ( LU_data ,  LU_pivots ,  unpack_data ,  unpack_pivots ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'LU,pivots=torch.linalg.lu_factor(A)', 'P,L,U=torch.lu_unpack(LU,pivots)', '# We can recover A from the factorization', 'A_=P@L@U', 'torch.allclose(A,A_)', '# LU factorization of a rectangular matrix:', 'A=torch.randn(2,3,2)', 'LU,pivots=torch.linalg.lu_factor(A)', 'P,L,U=torch.lu_unpack(LU,pivots)', '# P, L, U are the same as returned by linalg.lu', 'P_,L_,U_=torch.linalg.lu(A)', 'torch.allclose(P,P_)andtorch.allclose(L,L_)andtorch.allclose(U,U_)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 16
    torch.allclose(P,P_)andtorch.allclose(L,L_)andtorch.allclose(U,U_)
                        ^
SyntaxError: invalid syntax
"
"
 torch.linalg. matrix_exp ( A )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.empty(2,2,2)', 'A[0,:,:]=torch.eye(2,2)', 'A[1,:,:]=2*torch.eye(2,2)', 'A', 'torch.linalg.matrix_exp(A)', 'importmath', 'A=torch.tensor([[0,math.pi/3],[-math.pi/3,0]])# A is skew-symmetric', 'torch.linalg.matrix_exp(A)# matrix_exp(A) = [[cos(pi/3), sin(pi/3)], [-sin(pi/3), cos(pi/3)]]']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9, in <module>
    importmath
NameError: name 'importmath' is not defined
"
"
 torch. qr ( input ,  some ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[12.,-51,4],[6,167,-68],[-4,24,-41]])', 'q,r=torch.qr(a)', 'q', 'r', 'torch.mm(q,r).round()', 'torch.mm(q.t(),q).round()', 'a=torch.randn(3,4,5)', 'q,r=torch.qr(a,some=False)', 'torch.allclose(torch.matmul(q,r),a)', 'torch.allclose(torch.matmul(q.mT,q),torch.eye(5))']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: torch.qr is deprecated in favor of torch.linalg.qr and will be removed in a future PyTorch release.
The boolean parameter 'some' has been replaced with a string parameter 'mode'.
Q, R = torch.qr(A, some)
should be replaced with
Q, R = torch.linalg.qr(A, 'reduced' if some else 'complete') (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/BatchLinearAlgebra.cpp:2426.)
  outputs = func(*args, **kwargs)
Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 13, in <module>
    torch.allclose(torch.matmul(q.mT,q),torch.eye(5))
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: The size of tensor a (4) must match the size of tensor b (5) at non-singleton dimension 2
"
"
 torch. symeig ( input ,  eigenvectors ,  upper ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(5,5)', 'a=a+a.t()# To make a symmetric', 'a', 'e,v=torch.symeig(a,eigenvectors=True)', 'e', 'v', 'a_big=torch.randn(5,2,2)', 'a_big=a_big+a_big.mT# To make a_big symmetric', 'e,v=a_big.symeig(eigenvectors=True)', 'torch.allclose(torch.matmul(v,torch.matmul(e.diag_embed(),v.mT)),a_big)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    e,v=torch.symeig(a,eigenvectors=True)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/_linalg_utils.py"", line 119, in _symeig
    raise RuntimeError(
RuntimeError: This function was deprecated since version 1.9 and is now removed. Please use the `torch.linalg.eigh` function instead.
"
"
 torch. triangular_solve ( b ,  A ,  upper ,  transpose ,  unitriangular ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,2).triu()', 'A', 'b=torch.randn(2,3)', 'b', 'torch.triangular_solve(b,A)']","/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py:99: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/native/BatchLinearAlgebra.cpp:2192.)
  outputs = func(*args, **kwargs)
"
"
 torch. use_deterministic_algorithms ( mode ,  * ,  warn_only ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.use_deterministic_algorithms(True)# Forward mode nondeterministic error', ""torch.randn(10,device='cuda').kthvalue(0)...RuntimeError: kthvalue CUDA does not have a deterministic implementation...# Backward mode nondeterministic error"", 'torch.nn.AvgPool3d(1)(torch.randn(3,4,5,6,requires_grad=True).cuda()).sum().backward()...RuntimeError: avg_pool3d_backward_cuda does not have a deterministic implementation...']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5
    torch.randn(10,device='cuda').kthvalue(0)...RuntimeError: kthvalue CUDA does not have a deterministic implementation...# Backward mode nondeterministic error
                                             ^
SyntaxError: invalid syntax
"
"
 class torch.nn. Conv1d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  dilation ,  groups ,  bias ,  padding_mode ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Conv1d(16,33,3,stride=2)', 'input=torch.randn(20,16,50)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Conv1d(16,33,3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Conv3d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  dilation ,  groups ,  bias ,  padding_mode ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With square kernels and equal stride', 'm=nn.Conv3d(16,33,3,stride=2)', '# non-square kernels and unequal stride and with padding', 'm=nn.Conv3d(16,33,(3,5,2),stride=(2,1,1),padding=(4,2,0))', 'input=torch.randn(20,16,10,50,100)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.Conv3d(16,33,3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ConvTranspose2d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  output_padding ,  groups ,  bias ,  dilation ,  padding_mode ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With square kernels and equal stride', 'm=nn.ConvTranspose2d(16,33,3,stride=2)', '# non-square kernels and unequal stride and with padding', 'm=nn.ConvTranspose2d(16,33,(3,5),stride=(2,1),padding=(4,2))', 'input=torch.randn(20,16,50,100)', 'output=m(input)', '# exact output size can be also specified as an argument', 'input=torch.randn(1,16,12,12)', 'downsample=nn.Conv2d(16,16,3,stride=2,padding=1)', 'upsample=nn.ConvTranspose2d(16,16,3,stride=2,padding=1)', 'h=downsample(input)', 'h.size()', 'output=upsample(h,output_size=input.size())', 'output.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.ConvTranspose2d(16,33,3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ConvTranspose3d ( in_channels ,  out_channels ,  kernel_size ,  stride ,  padding ,  output_padding ,  groups ,  bias ,  dilation ,  padding_mode ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With square kernels and equal stride', 'm=nn.ConvTranspose3d(16,33,3,stride=2)', '# non-square kernels and unequal stride and with padding', 'm=nn.ConvTranspose3d(16,33,(3,5,2),stride=(2,1,1),padding=(0,4,2))', 'input=torch.randn(20,16,10,50,100)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.ConvTranspose3d(16,33,3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Unfold ( kernel_size ,  dilation ,  padding ,  stride ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'unfold=nn.Unfold(kernel_size=(2,3))', 'input=torch.randn(2,5,3,4)', 'output=unfold(input)', '# each patch contains 30 values (2x3=6 vectors, each of 5 channels)', '# 4 blocks (2x3 kernels) in total in the 3x4 input', 'output.size()', '# Convolution is equivalent with Unfold + Matrix Multiplication + Fold (or view to output shape)', 'inp=torch.randn(1,3,10,12)', 'w=torch.randn(2,3,4,5)', 'inp_unf=torch.nn.functional.unfold(inp,(4,5))', 'out_unf=inp_unf.transpose(1,2).matmul(w.view(w.size(0),-1).t()).transpose(1,2)', 'out=torch.nn.functional.fold(out_unf,(7,8),(1,1))', '# or equivalently (and avoiding a copy),', '# out = out_unf.view(1, 2, 7, 8)', '(torch.nn.functional.conv2d(inp,w)-out).abs().max()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    unfold=nn.Unfold(kernel_size=(2,3))
NameError: name 'nn' is not defined
"
"
 class torch.nn. Fold ( output_size ,  kernel_size ,  dilation ,  padding ,  stride ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'fold=nn.Fold(output_size=(4,5),kernel_size=(2,2))', 'input=torch.randn(1,3*2*2,12)', 'output=fold(input)', 'output.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    fold=nn.Fold(output_size=(4,5),kernel_size=(2,2))
NameError: name 'nn' is not defined
"
"
 class torch.nn. MaxPool1d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of size=3, stride=2', 'm=nn.MaxPool1d(3,stride=2)', 'input=torch.randn(20,16,50)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.MaxPool1d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. MaxPool2d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'm=nn.MaxPool2d(3,stride=2)', '# pool of non-square window', 'm=nn.MaxPool2d((3,2),stride=(2,1))', 'input=torch.randn(20,16,50,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.MaxPool2d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. MaxPool3d ( kernel_size ,  stride ,  padding ,  dilation ,  return_indices ,  ceil_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'm=nn.MaxPool3d(3,stride=2)', '# pool of non-square window', 'm=nn.MaxPool3d((3,2,2),stride=(2,1,2))', 'input=torch.randn(20,16,50,44,31)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.MaxPool3d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. MaxUnpool1d ( kernel_size ,  stride ,  padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'pool=nn.MaxPool1d(2,stride=2,return_indices=True)', 'unpool=nn.MaxUnpool1d(2,stride=2)', 'input=torch.tensor([[[1.,2,3,4,5,6,7,8]]])', 'output,indices=pool(input)', 'unpool(output,indices)', '# Example showcasing the use of output_size', 'input=torch.tensor([[[1.,2,3,4,5,6,7,8,9]]])', 'output,indices=pool(input)', 'unpool(output,indices,output_size=input.size())', 'unpool(output,indices)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    pool=nn.MaxPool1d(2,stride=2,return_indices=True)
NameError: name 'nn' is not defined
"
"
 class torch.nn. MaxUnpool2d ( kernel_size ,  stride ,  padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'pool=nn.MaxPool2d(2,stride=2,return_indices=True)', 'unpool=nn.MaxUnpool2d(2,stride=2)', 'input=torch.tensor([[[[1.,2.,3.,4.],', 'output,indices=pool(input)', 'unpool(output,indices)', '# Now using output_size to resolve an ambiguous size for the inverse', 'input=torch.torch.tensor([[[[1.,2.,3.,4.,5.],', 'output,indices=pool(input)', '# This call will not work without specifying output_size', 'unpool(output,indices,output_size=input.size())']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7
    output,indices=pool(input)
                  ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MaxUnpool3d ( kernel_size ,  stride ,  padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'pool=nn.MaxPool3d(3,stride=2,return_indices=True)', 'unpool=nn.MaxUnpool3d(3,stride=2)', 'output,indices=pool(torch.randn(20,16,51,33,15))', 'unpooled_output=unpool(output,indices)', 'unpooled_output.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    pool=nn.MaxPool3d(3,stride=2,return_indices=True)
NameError: name 'nn' is not defined
"
"
 class torch.nn. AvgPool1d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool with window of size=3, stride=2', 'm=nn.AvgPool1d(3,stride=2)', 'm(torch.tensor([[[1.,2,3,4,5,6,7]]]))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.AvgPool1d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. AvgPool2d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ,  divisor_override ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'm=nn.AvgPool2d(3,stride=2)', '# pool of non-square window', 'm=nn.AvgPool2d((3,2),stride=(2,1))', 'input=torch.randn(20,16,50,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.AvgPool2d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. AvgPool3d ( kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad ,  divisor_override ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'm=nn.AvgPool3d(3,stride=2)', '# pool of non-square window', 'm=nn.AvgPool3d((3,2,2),stride=(2,1,2))', 'input=torch.randn(20,16,50,44,31)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.AvgPool3d(3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. LPPool2d ( norm_type ,  kernel_size ,  stride ,  ceil_mode ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# power-2 pool of square window of size=3, stride=2', 'm=nn.LPPool2d(2,3,stride=2)', '# pool of non-square window of power 1.2', 'm=nn.LPPool2d(1.2,(3,2),stride=(2,1))', 'input=torch.randn(20,16,50,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.LPPool2d(2,3,stride=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReflectionPad1d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReflectionPad1d(2)', 'input=torch.arange(8,dtype=torch.float).reshape(1,2,4)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ReflectionPad1d((3,1))', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReflectionPad1d(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReflectionPad2d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReflectionPad2d(2)', 'input=torch.arange(9,dtype=torch.float).reshape(1,1,3,3)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ReflectionPad2d((1,1,2,0))', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReflectionPad2d(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReflectionPad3d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReflectionPad3d(1)', 'input=torch.arange(8,dtype=torch.float).reshape(1,1,2,2,2)', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReflectionPad3d(1)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReplicationPad1d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReplicationPad1d(2)', 'input=torch.arange(8,dtype=torch.float).reshape(1,2,4)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ReplicationPad1d((3,1))', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReplicationPad1d(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReplicationPad2d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReplicationPad2d(2)', 'input=torch.arange(9,dtype=torch.float).reshape(1,1,3,3)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ReplicationPad2d((1,1,2,0))', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReplicationPad2d(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ReplicationPad3d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ReplicationPad3d(3)', 'input=torch.randn(16,3,8,320,480)', 'output=m(input)', '# using different paddings for different sides', 'm=nn.ReplicationPad3d((3,3,6,6,1,1))', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ReplicationPad3d(3)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ZeroPad2d ( padding ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ZeroPad2d(2)', 'input=torch.randn(1,1,3,3)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ZeroPad2d((1,1,2,0))', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ZeroPad2d(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ConstantPad1d ( padding ,  value ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ConstantPad1d(2,3.5)', 'input=torch.randn(1,2,4)', 'input', 'm(input)', 'm=nn.ConstantPad1d(2,3.5)', 'input=torch.randn(1,2,3)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ConstantPad1d((3,1),3.5)', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ConstantPad1d(2,3.5)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ConstantPad2d ( padding ,  value ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ConstantPad2d(2,3.5)', 'input=torch.randn(1,2,2)', 'input', 'm(input)', '# using different paddings for different sides', 'm=nn.ConstantPad2d((3,0,2,1),3.5)', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ConstantPad2d(2,3.5)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ConstantPad3d ( padding ,  value ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.ConstantPad3d(3,3.5)', 'input=torch.randn(16,3,10,20,30)', 'output=m(input)', '# using different paddings for different sides', 'm=nn.ConstantPad3d((3,3,6,6,0,1),3.5)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.ConstantPad3d(3,3.5)
NameError: name 'nn' is not defined
"
"
 class torch.nn. MultiheadAttention ( embed_dim ,  num_heads ,  dropout ,  bias ,  add_bias_kv ,  add_zero_attn ,  kdim ,  vdim ,  batch_first ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'multihead_attn=nn.MultiheadAttention(embed_dim,num_heads)', 'attn_output,attn_output_weights=multihead_attn(query,key,value)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    multihead_attn=nn.MultiheadAttention(embed_dim,num_heads)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Threshold ( threshold ,  value ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Threshold(0.1,20)', 'input=torch.randn(2)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Threshold(0.1,20)
NameError: name 'nn' is not defined
"
"
 class torch.nn. GLU ( dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.GLU()', 'input=torch.randn(4,2)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.GLU()
NameError: name 'nn' is not defined
"
"
 class torch.nn. Softmin ( dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Softmin(dim=1)', 'input=torch.randn(2,3)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Softmin(dim=1)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Softmax ( dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Softmax(dim=1)', 'input=torch.randn(2,3)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Softmax(dim=1)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Softmax2d [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Softmax2d()', '# you softmax over the 2nd dimension', 'input=torch.randn(2,3,12,13)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Softmax2d()
NameError: name 'nn' is not defined
"
"
 class torch.nn. LogSoftmax ( dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.LogSoftmax(dim=1)', 'input=torch.randn(2,3)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.LogSoftmax(dim=1)
NameError: name 'nn' is not defined
"
"
 class torch.nn. BatchNorm1d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With Learnable Parameters', 'm=nn.BatchNorm1d(100)', '# Without Learnable Parameters', 'm=nn.BatchNorm1d(100,affine=False)', 'input=torch.randn(20,100)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.BatchNorm1d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. BatchNorm2d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With Learnable Parameters', 'm=nn.BatchNorm2d(100)', '# Without Learnable Parameters', 'm=nn.BatchNorm2d(100,affine=False)', 'input=torch.randn(20,100,35,45)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.BatchNorm2d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. BatchNorm3d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With Learnable Parameters', 'm=nn.BatchNorm3d(100)', '# Without Learnable Parameters', 'm=nn.BatchNorm3d(100,affine=False)', 'input=torch.randn(20,100,35,45,10)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.BatchNorm3d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. GroupNorm ( num_groups ,  num_channels ,  eps ,  affine ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.randn(20,6,10,10)', '# Separate 6 channels into 3 groups', 'm=nn.GroupNorm(3,6)', '# Separate 6 channels into 6 groups (equivalent with InstanceNorm)', 'm=nn.GroupNorm(6,6)', '# Put all 6 channels into a single group (equivalent with LayerNorm)', 'm=nn.GroupNorm(1,6)', '# Activating the module', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    m=nn.GroupNorm(3,6)
NameError: name 'nn' is not defined
"
"
 class torch.nn. SyncBatchNorm ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  process_group ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# With Learnable Parameters', 'm=nn.SyncBatchNorm(100)', '# creating process group (optional)', '# ranks is a list of int identifying rank ids.', 'ranks=list(range(8))', 'r1,r2=ranks[:4],ranks[4:]', '# Note: every rank calls into new_group for every', '# process group created, even if that rank is not', '# part of the group.', 'process_groups=[torch.distributed.new_group(pids)forpidsin[r1,r2]]', 'process_group=process_groups[0ifdist.get_rank()<=3else1]', '# Without Learnable Parameters', 'm=nn.BatchNorm3d(100,affine=False,process_group=process_group)', 'input=torch.randn(20,100,35,45,10)', 'output=m(input)# network is nn.BatchNorm layer', 'sync_bn_network=nn.SyncBatchNorm.convert_sync_batchnorm(network,process_group)', '# only single gpu per process is currently supported', 'ddp_sync_bn_network=torch.nn.parallel.DistributedDataParallel(', 'sync_bn_network,', 'device_ids=[args.local_rank],', 'output_device=args.local_rank)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 13
    process_groups=[torch.distributed.new_group(pids)forpidsin[r1,r2]]
                                                     ^
SyntaxError: invalid syntax
"
"
 class torch.nn. InstanceNorm1d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Without Learnable Parameters', 'm=nn.InstanceNorm1d(100)', '# With Learnable Parameters', 'm=nn.InstanceNorm1d(100,affine=True)', 'input=torch.randn(20,100,40)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.InstanceNorm1d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. InstanceNorm2d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Without Learnable Parameters', 'm=nn.InstanceNorm2d(100)', '# With Learnable Parameters', 'm=nn.InstanceNorm2d(100,affine=True)', 'input=torch.randn(20,100,35,45)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.InstanceNorm2d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. InstanceNorm3d ( num_features ,  eps ,  momentum ,  affine ,  track_running_stats ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Without Learnable Parameters', 'm=nn.InstanceNorm3d(100)', '# With Learnable Parameters', 'm=nn.InstanceNorm3d(100,affine=True)', 'input=torch.randn(20,100,35,45,10)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    m=nn.InstanceNorm3d(100)
NameError: name 'nn' is not defined
"
"
 class torch.nn. LayerNorm ( normalized_shape ,  eps ,  elementwise_affine ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# NLP Example', 'batch,sentence_length,embedding_dim=20,5,10', 'embedding=torch.randn(batch,sentence_length,embedding_dim)', 'layer_norm=nn.LayerNorm(embedding_dim)', '# Activate module', 'layer_norm(embedding)', '>>>', '# Image Example', 'N,C,H,W=20,5,10,10', 'input=torch.randn(N,C,H,W)', '# Normalize over the last three dimensions (i.e. the channel and spatial dimensions)', '# as shown in the image below', 'layer_norm=nn.LayerNorm([C,H,W])', 'output=layer_norm(input)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10
    >>>
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. LocalResponseNorm ( size ,  alpha ,  beta ,  k ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'lrn=nn.LocalResponseNorm(2)', 'signal_2d=torch.randn(32,5,24,24)', 'signal_4d=torch.randn(16,5,7,7,7,7)', 'output_2d=lrn(signal_2d)', 'output_4d=lrn(signal_4d)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    lrn=nn.LocalResponseNorm(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. RNN ( * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.RNN(10,20,2)', 'input=torch.randn(5,3,10)', 'h0=torch.randn(2,3,20)', 'output,hn=rnn(input,h0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    rnn=nn.RNN(10,20,2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. LSTM ( * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.LSTM(10,20,2)', 'input=torch.randn(5,3,10)', 'h0=torch.randn(2,3,20)', 'c0=torch.randn(2,3,20)', 'output,(hn,cn)=rnn(input,(h0,c0))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    rnn=nn.LSTM(10,20,2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. GRU ( * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.GRU(10,20,2)', 'input=torch.randn(5,3,10)', 'h0=torch.randn(2,3,20)', 'output,hn=rnn(input,h0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    rnn=nn.GRU(10,20,2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. RNNCell ( input_size ,  hidden_size ,  bias ,  nonlinearity ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.RNNCell(10,20)', 'input=torch.randn(6,3,10)', 'hx=torch.randn(3,20)', 'output=[]', 'foriinrange(6):hx=rnn(input[i],hx)output.append(hx)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    foriinrange(6):hx=rnn(input[i],hx)output.append(hx)
    ^
SyntaxError: illegal target for annotation
"
"
 class torch.nn. LSTMCell ( input_size ,  hidden_size ,  bias ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.LSTMCell(10,20)# (input_size, hidden_size)', 'input=torch.randn(2,3,10)# (time_steps, batch, input_size)', 'hx=torch.randn(3,20)# (batch, hidden_size)', 'cx=torch.randn(3,20)', 'output=[]', 'foriinrange(input.size()[0]):hx,cx=rnn(input[i],(hx,cx))output.append(hx)', 'output=torch.stack(output,dim=0)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    foriinrange(input.size()[0]):hx,cx=rnn(input[i],(hx,cx))output.append(hx)
    ^
SyntaxError: illegal target for annotation
"
"
 class torch.nn. GRUCell ( input_size ,  hidden_size ,  bias ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'rnn=nn.GRUCell(10,20)', 'input=torch.randn(6,3,10)', 'hx=torch.randn(3,20)', 'output=[]', 'foriinrange(6):hx=rnn(input[i],hx)output.append(hx)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    foriinrange(6):hx=rnn(input[i],hx)output.append(hx)
    ^
SyntaxError: illegal target for annotation
"
"
 class torch.nn. Identity ( * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Identity(54,unused_argument1=0.1,unused_argument2=False)', 'input=torch.randn(128,20)', 'output=m(input)', 'print(output.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Identity(54,unused_argument1=0.1,unused_argument2=False)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Linear ( in_features ,  out_features ,  bias ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Linear(20,30)', 'input=torch.randn(128,20)', 'output=m(input)', 'print(output.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Linear(20,30)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Bilinear ( in1_features ,  in2_features ,  out_features ,  bias ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Bilinear(20,30,40)', 'input1=torch.randn(128,20)', 'input2=torch.randn(128,30)', 'output=m(input1,input2)', 'print(output.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Bilinear(20,30,40)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Dropout ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Dropout(p=0.2)', 'input=torch.randn(20,16)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Dropout(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Dropout1d ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Dropout1d(p=0.2)', 'input=torch.randn(20,16,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Dropout1d(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Dropout2d ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Dropout2d(p=0.2)', 'input=torch.randn(20,16,32,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Dropout2d(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Dropout3d ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Dropout3d(p=0.2)', 'input=torch.randn(20,16,4,32,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Dropout3d(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. AlphaDropout ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.AlphaDropout(p=0.2)', 'input=torch.randn(20,16)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.AlphaDropout(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. FeatureAlphaDropout ( p ,  inplace ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.FeatureAlphaDropout(p=0.2)', 'input=torch.randn(20,16,4,32,32)', 'output=m(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.FeatureAlphaDropout(p=0.2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Embedding ( num_embeddings ,  embedding_dim ,  padding_idx ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  sparse ,  _weight ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# an Embedding module containing 10 tensors of size 3', 'embedding=nn.Embedding(10,3)', '# a batch of 2 samples of 4 indices each', 'input=torch.LongTensor([[1,2,4,5],[4,3,2,9]])', 'embedding(input)', '# example with padding_idx', 'embedding=nn.Embedding(10,3,padding_idx=0)', 'input=torch.LongTensor([[0,2,0,5]])', 'embedding(input)', '# example of changing `pad` vector', 'padding_idx=0', 'embedding=nn.Embedding(3,3,padding_idx=padding_idx)', 'embedding.weight', 'withtorch.no_grad():embedding.weight[padding_idx]=torch.ones(3)', 'embedding.weight']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 17
    withtorch.no_grad():embedding.weight[padding_idx]=torch.ones(3)
    ^
SyntaxError: illegal target for annotation
"
"
 class torch.nn. EmbeddingBag ( num_embeddings ,  embedding_dim ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  mode ,  sparse ,  _weight ,  include_last_offset ,  padding_idx ,  device ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# an EmbeddingBag module containing 10 tensors of size 3', ""embedding_sum=nn.EmbeddingBag(10,3,mode='sum')"", '# a batch of 2 samples of 4 indices each', 'input=torch.tensor([1,2,4,5,4,3,2,9],dtype=torch.long)', 'offsets=torch.tensor([0,4],dtype=torch.long)', 'embedding_sum(input,offsets)', '# Example with padding_idx', ""embedding_sum=nn.EmbeddingBag(10,3,mode='sum',padding_idx=2)"", 'input=torch.tensor([2,2,2,2,4,3,2,9],dtype=torch.long)', 'offsets=torch.tensor([0,4],dtype=torch.long)', 'embedding_sum(input,offsets)', '# An EmbeddingBag can be loaded from an Embedding like so', 'embedding=nn.Embedding(10,3,padding_idx=2)', 'embedding_sum=nn.EmbeddingBag.from_pretrained(']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 18
    
    ^
SyntaxError: unexpected EOF while parsing
"
"
 class torch.nn. L1Loss ( size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.L1Loss()', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.randn(3,5)', 'output=loss(input,target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    loss=nn.L1Loss()
NameError: name 'nn' is not defined
"
"
 class torch.nn. MSELoss ( size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.MSELoss()', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.randn(3,5)', 'output=loss(input,target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    loss=nn.MSELoss()
NameError: name 'nn' is not defined
"
"
 class torch.nn. CrossEntropyLoss ( weight ,  size_average ,  ignore_index ,  reduce ,  reduction ,  label_smoothing ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Example of target with class indices', 'loss=nn.CrossEntropyLoss()', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.empty(3,dtype=torch.long).random_(5)', 'output=loss(input,target)', 'output.backward()', '>>>', '# Example of target with class probabilities', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.randn(3,5).softmax(dim=1)', 'output=loss(input,target)', 'output.backward()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10
    >>>
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. CTCLoss ( blank ,  reduction ,  zero_infinity ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Target are to be padded', 'T=50# Input sequence length', 'C=20# Number of classes (including blank)', 'N=16# Batch size', 'S=30# Target sequence length of longest target in batch (padding length)', 'S_min=10# Minimum target length, for demonstration purposes', '>>>', '# Initialize random batch of input vectors, for *size = (T,N,C)', 'input=torch.randn(T,N,C).log_softmax(2).detach().requires_grad_()', '>>>', '# Initialize random batch of targets (0 = blank, 1:C = classes)', 'target=torch.randint(low=1,high=C,size=(N,S),dtype=torch.long)', '>>>', 'input_lengths=torch.full(size=(N,),fill_value=T,dtype=torch.long)', 'target_lengths=torch.randint(low=S_min,high=S,size=(N,),dtype=torch.long)', 'ctc_loss=nn.CTCLoss()', 'loss=ctc_loss(input,target,input_lengths,target_lengths)', 'loss.backward()', '>>>', '>>>', '# Target are to be un-padded', 'T=50# Input sequence length', 'C=20# Number of classes (including blank)', 'N=16# Batch size', '>>>', '# Initialize random batch of input vectors, for *size = (T,N,C)', 'input=torch.randn(T,N,C).log_softmax(2).detach().requires_grad_()', 'input_lengths=torch.full(size=(N,),fill_value=T,dtype=torch.long)', '>>>', '# Initialize random batch of targets (0 = blank, 1:C = classes)', 'target_lengths=torch.randint(low=1,high=T,size=(N,),dtype=torch.long)', 'target=torch.randint(low=1,high=C,size=(sum(target_lengths),),dtype=torch.long)', 'ctc_loss=nn.CTCLoss()', 'loss=ctc_loss(input,target,input_lengths,target_lengths)', 'loss.backward()', '>>>', '>>>', '# Target are to be un-padded and unbatched (effectively N=1)', 'T=50# Input sequence length', 'C=20# Number of classes (including blank)', '>>>', '# Initialize random batch of input vectors, for *size = (T,C)', 'input=torch.randn(T,C).log_softmax(2).detach().requires_grad_()', 'input_lengths=torch.tensor(T,dtype=torch.long)', '>>>', '# Initialize random batch of targets (0 = blank, 1:C = classes)', 'target_lengths=torch.randint(low=1,high=T,size=(),dtype=torch.long)', 'target=torch.randint(low=1,high=C,size=(target_lengths,),dtype=torch.long)', 'ctc_loss=nn.CTCLoss()', 'loss=ctc_loss(input,target,input_lengths,target_lengths)', 'loss.backward()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10
    >>>
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. NLLLoss ( weight ,  size_average ,  ignore_index ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.LogSoftmax(dim=1)', 'loss=nn.NLLLoss()', '# input is of size N x C = 3 x 5', 'input=torch.randn(3,5,requires_grad=True)', '# each element in target has to have 0 <= value < C', 'target=torch.tensor([1,0,4])', 'output=loss(m(input),target)', 'output.backward()', '>>>', '>>>', '# 2D loss example (used, for example, with image inputs)', 'N,C=5,4', 'loss=nn.NLLLoss()', '# input is of size N x C x height x width', 'data=torch.randn(N,16,10,10)', 'conv=nn.Conv2d(16,C,(3,3))', 'm=nn.LogSoftmax(dim=1)', '# each element in target has to have 0 <= value < C', 'target=torch.empty(N,8,8,dtype=torch.long).random_(0,C)', 'output=loss(m(conv(data)),target)', 'output.backward()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 12
    >>>
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. PoissonNLLLoss ( log_input ,  full ,  size_average ,  eps ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.PoissonNLLLoss()', 'log_input=torch.randn(5,2,requires_grad=True)', 'target=torch.randn(5,2)', 'output=loss(log_input,target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    loss=nn.PoissonNLLLoss()
NameError: name 'nn' is not defined
"
"
 class torch.nn. KLDivLoss ( size_average ,  reduce ,  reduction ,  log_target ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch.nn.functionalasF', 'kl_loss=nn.KLDivLoss(reduction=""batchmean"")', '# input should be a distribution in the log space', 'input=F.log_softmax(torch.randn(3,5,requires_grad=True),dim=1)', '# Sample a batch of distributions. Usually this would come from the dataset', 'target=F.softmax(torch.rand(3,5),dim=1)', 'output=kl_loss(input,target)kl_loss=nn.KLDivLoss(reduction=""batchmean"",log_target=True)', 'log_target=F.log_softmax(torch.rand(3,5),dim=1)', 'output=kl_loss(input,log_target)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10
    output=kl_loss(input,target)kl_loss=nn.KLDivLoss(reduction=""batchmean"",log_target=True)
                                ^
SyntaxError: invalid syntax
"
"
 class torch.nn. BCELoss ( weight ,  size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=nn.Sigmoid()', 'loss=nn.BCELoss()', 'input=torch.randn(3,requires_grad=True)', 'target=torch.empty(3).random_(2)', 'output=loss(m(input),target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=nn.Sigmoid()
NameError: name 'nn' is not defined
"
"
 class torch.nn. MarginRankingLoss ( margin ,  size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.MarginRankingLoss()', 'input1=torch.randn(3,requires_grad=True)', 'input2=torch.randn(3,requires_grad=True)', 'target=torch.randn(3).sign()', 'output=loss(input1,input2,target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    loss=nn.MarginRankingLoss()
NameError: name 'nn' is not defined
"
"
 class torch.nn. MultiLabelMarginLoss ( size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.MultiLabelMarginLoss()', 'x=torch.FloatTensor([[0.1,0.2,0.4,0.8]])', '# for target y, only consider labels 3 and 0, not after label -1', 'y=torch.LongTensor([[3,0,-1,1]])', '# 0.25 * ((1-(0.1-0.2)) + (1-(0.1-0.4)) + (1-(0.8-0.2)) + (1-(0.8-0.4)))', 'loss(x,y)tensor(0.85...)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    loss(x,y)tensor(0.85...)
             ^
SyntaxError: invalid syntax
"
"
 class torch.nn. MultiMarginLoss ( p ,  margin ,  weight ,  size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'loss=nn.MultiMarginLoss()', 'x=torch.tensor([[0.1,0.2,0.4,0.8]])', 'y=torch.tensor([3])', '# 0.25 * ((1-(0.8-0.1)) + (1-(0.8-0.2)) + (1-(0.8-0.4)))', 'loss(x,y)tensor(0.32...)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8
    loss(x,y)tensor(0.32...)
             ^
SyntaxError: invalid syntax
"
"
 class torch.nn. TripletMarginLoss ( margin ,  p ,  eps ,  swap ,  size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'triplet_loss=nn.TripletMarginLoss(margin=1.0,p=2)', 'anchor=torch.randn(100,128,requires_grad=True)', 'positive=torch.randn(100,128,requires_grad=True)', 'negative=torch.randn(100,128,requires_grad=True)', 'output=triplet_loss(anchor,positive,negative)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    triplet_loss=nn.TripletMarginLoss(margin=1.0,p=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. TripletMarginWithDistanceLoss ( * ,  distance_function ,  margin ,  swap ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Initialize embeddings', 'embedding=nn.Embedding(1000,128)', 'anchor_ids=torch.randint(0,1000,(1,))', 'positive_ids=torch.randint(0,1000,(1,))', 'negative_ids=torch.randint(0,1000,(1,))', 'anchor=embedding(anchor_ids)', 'positive=embedding(positive_ids)', 'negative=embedding(negative_ids)', '>>>', '# Built-in Distance Function', 'triplet_loss=nn.TripletMarginWithDistanceLoss(distance_function=nn.PairwiseDistance())', 'output=triplet_loss(anchor,positive,negative)', 'output.backward()', '>>>', '# Custom Distance Function', 'defl_infinity(x1,x2):', 'returntorch.max(torch.abs(x1-x2),dim=1).values', '>>>', 'triplet_loss=(', 'nn.TripletMarginWithDistanceLoss(distance_function=l_infinity,margin=1.5))', 'output=triplet_loss(anchor,positive,negative)', 'output.backward()', '>>>', '# Custom Distance Function (Lambda)', 'triplet_loss=(', 'nn.TripletMarginWithDistanceLoss(', 'distance_function=lambdax,y:1.0-F.cosine_similarity(x,y)))', 'output=triplet_loss(anchor,positive,negative)', 'output.backward()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 12
    >>>
    ^
SyntaxError: invalid syntax
"
"
 class torch.nn. PixelShuffle ( upscale_factor ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'pixel_shuffle=nn.PixelShuffle(3)', 'input=torch.randn(1,9,4,4)', 'output=pixel_shuffle(input)', 'print(output.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    pixel_shuffle=nn.PixelShuffle(3)
NameError: name 'nn' is not defined
"
"
 class torch.nn. PixelUnshuffle ( downscale_factor ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'pixel_unshuffle=nn.PixelUnshuffle(3)', 'input=torch.randn(1,1,12,12)', 'output=pixel_unshuffle(input)', 'print(output.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    pixel_unshuffle=nn.PixelUnshuffle(3)
NameError: name 'nn' is not defined
"
"
 class torch.nn. Upsample ( size ,  scale_factor ,  mode ,  align_corners ,  recompute_scale_factor ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)', 'input', ""m=nn.Upsample(scale_factor=2,mode='nearest')"", 'm(input)', ""m=nn.Upsample(scale_factor=2,mode='bilinear')# align_corners=False"", 'm(input)', ""m=nn.Upsample(scale_factor=2,mode='bilinear',align_corners=True)"", 'm(input)', '# Try scaling the same data in a larger tensor', 'input_3x3=torch.zeros(3,3).view(1,1,3,3)', 'input_3x3[:,:,:2,:2].copy_(input)', 'input_3x3', ""m=nn.Upsample(scale_factor=2,mode='bilinear')# align_corners=False"", '# Notice that values in top left corner are the same with the small input (except at boundary)', 'm(input_3x3)', ""m=nn.Upsample(scale_factor=2,mode='bilinear',align_corners=True)"", '# Notice that values in top left corner are now changed', 'm(input_3x3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    m=nn.Upsample(scale_factor=2,mode='nearest')
NameError: name 'nn' is not defined
"
"
 class torch.nn. UpsamplingNearest2d ( size ,  scale_factor ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)', 'input', 'm=nn.UpsamplingNearest2d(scale_factor=2)', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    m=nn.UpsamplingNearest2d(scale_factor=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. UpsamplingBilinear2d ( size ,  scale_factor ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.arange(1,5,dtype=torch.float32).view(1,1,2,2)', 'input', 'm=nn.UpsamplingBilinear2d(scale_factor=2)', 'm(input)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    m=nn.UpsamplingBilinear2d(scale_factor=2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. ChannelShuffle ( groups ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'channel_shuffle=nn.ChannelShuffle(2)', 'input=torch.randn(1,4,2,2)', 'print(input)', 'output=channel_shuffle(input)', 'print(output)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    channel_shuffle=nn.ChannelShuffle(2)
NameError: name 'nn' is not defined
"
"
 class torch.nn. DataParallel ( module ,  device_ids ,  output_device ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'net=torch.nn.DataParallel(model,device_ids=[0,1,2])', 'output=net(input_var)# input_var can be on any device, including CPU']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    net=torch.nn.DataParallel(model,device_ids=[0,1,2])
NameError: name 'model' is not defined
"
"
 class torch.nn.parallel. DistributedDataParallel ( module ,  device_ids ,  output_device ,  dim ,  broadcast_buffers ,  process_group ,  bucket_cap_mb ,  find_unused_parameters ,  check_reduction ,  gradient_as_bucket_view ,  static_graph ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', ""torch.distributed.init_process_group(backend='nccl',world_size=4,init_method='...')"", 'net=torch.nn.parallel.DistributedDataParallel(model)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    torch.distributed.init_process_group(backend='nccl',world_size=4,init_method='...')
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/distributed/c10d_logger.py"", line 74, in wrapper
    func_return = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py"", line 1110, in init_process_group
    rendezvous_iterator = rendezvous(
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/distributed/rendezvous.py"", line 102, in rendezvous
    return _rendezvous_helper(url, rank, world_size, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/distributed/rendezvous.py"", line 88, in _rendezvous_helper
    raise RuntimeError(""No rendezvous handler for {}://"".format(result.scheme))
RuntimeError: No rendezvous handler for ://
"
"
 torch.nn.utils. weight_norm ( module ,  name ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', ""m=weight_norm(nn.Linear(20,40),name='weight')"", 'm', 'm.weight_g.size()', 'm.weight_v.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=weight_norm(nn.Linear(20,40),name='weight')
NameError: name 'weight_norm' is not defined
"
"
 torch.nn.utils. spectral_norm ( module ,  name ,  n_power_iterations ,  eps ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'm=spectral_norm(nn.Linear(20,40))', 'm', 'm.weight_u.size()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    m=spectral_norm(nn.Linear(20,40))
NameError: name 'spectral_norm' is not defined
"
"
 torch.nn.utils. skip_init ( module_cls ,  * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'importtorch', 'm=torch.nn.utils.skip_init(torch.nn.Linear,5,1)', 'm.weight', 'm2=torch.nn.utils.skip_init(torch.nn.Linear,in_features=6,out_features=1)', 'm2.weight']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    importtorch
NameError: name 'importtorch' is not defined
"
"
 torch.nn.utils.parametrizations. orthogonal ( module ,  name ,  orthogonal_map ,  * ,  use_trivialization ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'orth_linear=orthogonal(nn.Linear(20,40))', 'orth_linear', 'Q=orth_linear.weight', 'torch.dist(Q.T@Q,torch.eye(20))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    orth_linear=orthogonal(nn.Linear(20,40))
NameError: name 'orthogonal' is not defined
"
"
 torch.nn.utils.parametrizations. spectral_norm ( module ,  name ,  n_power_iterations ,  eps ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'snm=spectral_norm(nn.Linear(20,40))', 'snm', 'torch.linalg.matrix_norm(snm.weight,2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    snm=spectral_norm(nn.Linear(20,40))
NameError: name 'spectral_norm' is not defined
"
"
 torch.nn.functional. conv1d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'inputs=torch.randn(33,16,30)', 'filters=torch.randn(20,16,5)', 'F.conv1d(inputs,filters)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    F.conv1d(inputs,filters)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. conv2d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶","['import numpy as np', 'import numpy', 'import torch', '# With square kernels and equal stride', 'filters=torch.randn(8,4,3,3)', 'inputs=torch.randn(1,4,5,5)', 'F.conv2d(inputs,filters,padding=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    F.conv2d(inputs,filters,padding=1)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. conv3d ( input ,  weight ,  bias ,  stride ,  padding ,  dilation ,  groups )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'filters=torch.randn(33,16,3,3,3)', 'inputs=torch.randn(20,16,50,10,20)', 'F.conv3d(inputs,filters)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    F.conv3d(inputs,filters)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. conv_transpose1d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'inputs=torch.randn(20,16,50)', 'weights=torch.randn(16,33,5)', 'F.conv_transpose1d(inputs,weights)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    F.conv_transpose1d(inputs,weights)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. conv_transpose2d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶","['import numpy as np', 'import numpy', 'import torch', '# With square kernels and equal stride', 'inputs=torch.randn(1,4,5,5)', 'weights=torch.randn(4,8,3,3)', 'F.conv_transpose2d(inputs,weights,padding=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    F.conv_transpose2d(inputs,weights,padding=1)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. conv_transpose3d ( input ,  weight ,  bias ,  stride ,  padding ,  output_padding ,  groups ,  dilation )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'inputs=torch.randn(20,16,50,10,20)', 'weights=torch.randn(16,33,3,3,3)', 'F.conv_transpose3d(inputs,weights)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    F.conv_transpose3d(inputs,weights)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. avg_pool1d ( input ,  kernel_size ,  stride ,  padding ,  ceil_mode ,  count_include_pad )   → ¶","['import numpy as np', 'import numpy', 'import torch', '# pool of square window of size=3, stride=2', 'input=torch.tensor([[[1,2,3,4,5,6,7]]],dtype=torch.float32)', 'F.avg_pool1d(input,kernel_size=3,stride=2)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    F.avg_pool1d(input,kernel_size=3,stride=2)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. embedding ( input ,  weight ,  padding_idx ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  sparse ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# a batch of 2 samples of 4 indices each', 'input=torch.tensor([[1,2,4,5],[4,3,2,9]])', '# an embedding matrix containing 10 tensors of size 3', 'embedding_matrix=torch.rand(10,3)', 'F.embedding(input,embedding_matrix)', '# example with padding_idx', 'weights=torch.rand(10,3)', 'weights[0,:].zero_()', 'embedding_matrix=weights', 'input=torch.tensor([[0,2,0,5]])', 'F.embedding(input,embedding_matrix,padding_idx=0)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    F.embedding(input,embedding_matrix)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. embedding_bag ( input ,  weight ,  offsets ,  max_norm ,  norm_type ,  scale_grad_by_freq ,  mode ,  sparse ,  per_sample_weights ,  include_last_offset ,  padding_idx ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# an Embedding module containing 10 tensors of size 3', 'embedding_matrix=torch.rand(10,3)', '# a batch of 2 samples of 4 indices each', 'input=torch.tensor([1,2,4,5,4,3,2,9])', 'offsets=torch.tensor([0,4])', 'F.embedding_bag(input,embedding_matrix,offsets)', '# example with padding_idx', 'embedding_matrix=torch.rand(10,3)', 'input=torch.tensor([2,2,2,2,4,3,2,9])', 'offsets=torch.tensor([0,4])', ""F.embedding_bag(input,embedding_matrix,offsets,padding_idx=2,mode='sum')""]","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9, in <module>
    F.embedding_bag(input,embedding_matrix,offsets)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. cosine_similarity ( x1 ,  x2 ,  dim ,  eps )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'input1=torch.randn(100,128)', 'input2=torch.randn(100,128)', 'output=F.cosine_similarity(input1,input2)', 'print(output)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    output=F.cosine_similarity(input1,input2)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. binary_cross_entropy ( input ,  target ,  weight ,  size_average ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.randn(3,2,requires_grad=True)', 'target=torch.rand(3,2,requires_grad=False)', 'loss=F.binary_cross_entropy(torch.sigmoid(input),target)', 'loss.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    loss=F.binary_cross_entropy(torch.sigmoid(input),target)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. binary_cross_entropy_with_logits ( input ,  target ,  weight ,  size_average ,  reduce ,  reduction ,  pos_weight ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'input=torch.randn(3,requires_grad=True)', 'target=torch.empty(3).random_(2)', 'loss=F.binary_cross_entropy_with_logits(input,target)', 'loss.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    loss=F.binary_cross_entropy_with_logits(input,target)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. cross_entropy ( input ,  target ,  weight ,  size_average ,  ignore_index ,  reduce ,  reduction ,  label_smoothing ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# Example of target with class indices', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.randint(5,(3,),dtype=torch.int64)', 'loss=F.cross_entropy(input,target)', 'loss.backward()', '>>>', '# Example of target with class probabilities', 'input=torch.randn(3,5,requires_grad=True)', 'target=torch.randn(3,5).softmax(dim=1)', 'loss=F.cross_entropy(input,target)', 'loss.backward()']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 9
    >>>
    ^
SyntaxError: invalid syntax
"
"
 torch.nn.functional. ctc_loss ( log_probs ,  targets ,  input_lengths ,  target_lengths ,  blank ,  reduction ,  zero_infinity ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'log_probs=torch.randn(50,16,20).log_softmax(2).detach().requires_grad_()', 'targets=torch.randint(1,20,(16,30),dtype=torch.long)', 'input_lengths=torch.full((16,),50,dtype=torch.long)', 'target_lengths=torch.randint(10,30,(16,),dtype=torch.long)', 'loss=F.ctc_loss(log_probs,targets,input_lengths,target_lengths)', 'loss.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    loss=F.ctc_loss(log_probs,targets,input_lengths,target_lengths)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. nll_loss ( input ,  target ,  weight ,  size_average ,  ignore_index ,  reduce ,  reduction ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '# input is of size N x C = 3 x 5', 'input=torch.randn(3,5,requires_grad=True)', '# each element in target has to have 0 <= value < C', 'target=torch.tensor([1,0,4])', 'output=F.nll_loss(F.log_softmax(input,dim=1),target)', 'output.backward()']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    output=F.nll_loss(F.log_softmax(input,dim=1),target)
NameError: name 'F' is not defined
"
"
 torch.nn.functional. pad ( input ,  pad ,  mode ,  value )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't4d=torch.empty(3,3,4,2)', 'p1d=(1,1)# pad last dim by 1 on each side', 'out=F.pad(t4d,p1d,""constant"",0)# effectively zero padding', 'print(out.size())', 'p2d=(1,1,2,2)# pad last dim by (1, 1) and 2nd to last by (2, 2)', 'out=F.pad(t4d,p2d,""constant"",0)', 'print(out.size())', 't4d=torch.empty(3,3,4,2)', 'p3d=(0,1,2,1,3,3)# pad by (0, 1), (2, 1), and (3, 3)', 'out=F.pad(t4d,p3d,""constant"",0)', 'print(out.size())']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    out=F.pad(t4d,p1d,""constant"",0)# effectively zero padding
NameError: name 'F' is not defined
"
"
 Tensor. requires_grad_ ( requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""# Let's say we want to preprocess some saved weights and use"", '# the result as new weights.', 'saved_weights=[0.1,0.2,0.3,0.25]', 'loaded_weights=torch.tensor(saved_weights)', 'weights=preprocess(loaded_weights)# some function', 'weights', '# Now, start to record operations done to weights', 'weights.requires_grad_()', 'out=weights.pow(2).sum()', 'out.backward()', 'weights.grad']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 8, in <module>
    weights=preprocess(loaded_weights)# some function
NameError: name 'preprocess' is not defined
"
"
 Tensor. to ( * ,  ** )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'tensor=torch.randn(2,2)# Initially dtype=float32, device=cpu', 'tensor.to(torch.float64)', ""cuda0=torch.device('cuda:0')"", 'tensor.to(cuda0)', 'tensor.to(cuda0,dtype=torch.float64)', 'other=torch.randn((),dtype=torch.float64,device=cuda0)', 'tensor.to(other,non_blocking=True)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7, in <module>
    tensor.to(cuda0)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 Tensor. get_device ( ) ) ¶","['import numpy as np', 'import numpy', 'import torch', ""x=torch.randn(3,4,5,device='cuda:0')"", 'x.get_device()', 'x.cpu().get_device()# RuntimeError: get_device is not implemented for type torch.FloatTensor']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    x=torch.randn(3,4,5,device='cuda:0')
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 Tensor. is_leaf ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.rand(10,requires_grad=True)', 'a.is_leaf', 'b=torch.rand(10,requires_grad=True).cuda()', 'b.is_leaf', 'c=torch.rand(10,requires_grad=True)+2', 'c.is_leaf', 'd=torch.rand(10).cuda()', 'd.is_leaf', 'e=torch.rand(10).cuda().requires_grad_()', 'e.is_leaf', 'f=torch.rand(10,requires_grad=True,device=""cuda"")', 'f.is_leaf']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    b=torch.rand(10,requires_grad=True).cuda()
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 Tensor. register_hook ( hook ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'v=torch.tensor([0.,0.,0.],requires_grad=True)', 'h=v.register_hook(lambdagrad:grad*2)# double the gradient', 'v.backward(torch.tensor([1.,2.,3.]))', 'v.grad 2', 'h.remove()# removes the hook']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5
    h=v.register_hook(lambdagrad:grad*2)# double the gradient
                                ^
SyntaxError: invalid syntax
"
"
 Tensor. to_sparse_csr ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(5,5)', 'sparse=dense.to_sparse_csr()', 'sparse._nnz()']","/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py:5: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  sparse=dense.to_sparse_csr()
"
"
 Tensor. to_sparse_csc ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(5,5)', 'sparse=dense.to_sparse_csc()', 'sparse._nnz()']","/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py:5: UserWarning: Sparse CSC tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  sparse=dense.to_sparse_csc()
"
"
 Tensor. to_sparse_bsr ( blocksize )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(10,10)', 'sparse=dense.to_sparse_csr()', 'sparse_bsr=sparse.to_sparse_bsr((5,5))', 'sparse_bsr.col_indices()']","/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py:5: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  sparse=dense.to_sparse_csr()
"
"
 Tensor. to_sparse_bsc ( blocksize )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(10,10)', 'sparse=dense.to_sparse_csr()', 'sparse_bsc=sparse.to_sparse_bsc((5,5))', 'sparse_bsc.row_indices()']","/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py:5: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  sparse=dense.to_sparse_csr()
"
"
 class torch.autograd.forward_ad. dual_level [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1])', 'x_t=torch.tensor([1])', 'withdual_level():inp=make_dual(x,x_t)# Do computations with inpout=your_fn(inp)_,grad=unpack_dual(out)', 'gradisNone', '# After exiting the level, the grad is deleted', '_,grad_after=unpack_dual(out)', 'gradisNone']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6
    withdual_level():inp=make_dual(x,x_t)# Do computations with inpout=your_fn(inp)_,grad=unpack_dual(out)
    ^
SyntaxError: illegal target for annotation
"
"
 torch.autograd.forward_ad. make_dual ( tensor ,  tangent ,  * ,  level ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'withdual_level():inp=make_dual(x,v)out=f(inp)y,jvp=unpack_dual(out)']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4
    withdual_level():inp=make_dual(x,v)out=f(inp)y,jvp=unpack_dual(out)
    ^
SyntaxError: illegal target for annotation
"
"
 torch.autograd.forward_ad. unpack_dual ( tensor ,  * ,  level ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'withdual_level():inp=make_dual(x,x_t)out=f(inp)y,jvp=unpack_dual(out)jvp=unpack_dual(out).tangent']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4
    withdual_level():inp=make_dual(x,x_t)out=f(inp)y,jvp=unpack_dual(out)jvp=unpack_dual(out).tangent
    ^
SyntaxError: illegal target for annotation
"
"
 torch.linalg. lu ( A ,  * ,  pivot ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(3,2)', 'P,L,U=torch.linalg.lu(A)', 'P', 'L', 'U', 'torch.dist(A,P@L@U)', 'A=torch.randn(2,5,7,device=""cuda"")', 'P,L,U=torch.linalg.lu(A,pivot=False)', 'P', 'torch.dist(A,L@U)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10, in <module>
    A=torch.randn(2,5,7,device=""cuda"")
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 torch.linalg. norm ( A ,  ord ,  dim ,  keepdim ,  * ,  out ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'fromtorchimportlinalgasLA', 'a=torch.arange(9,dtype=torch.float)-4', 'a', 'B=a.reshape((3,3))', 'B', 'LA.norm(a)', 'LA.norm(B)', ""LA.norm(B,'fro')"", ""LA.norm(a,float('inf'))"", ""LA.norm(B,float('inf'))"", ""LA.norm(a,-float('inf'))"", ""LA.norm(B,-float('inf'))"", 'LA.norm(a,1)', 'LA.norm(B,1)', 'LA.norm(a,-1)', 'LA.norm(B,-1)', 'LA.norm(a,2)', 'LA.norm(B,2)', 'LA.norm(a,-2)', 'LA.norm(B.double(),-2)', 'LA.norm(a,3)', 'LA.norm(a,-3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    fromtorchimportlinalgasLA
NameError: name 'fromtorchimportlinalgasLA' is not defined
"
"
 torch.linalg. norm ( A ,  ord ,  dim ,  keepdim ,  * ,  out ,  dtype )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'c=torch.tensor([[1.,2.,3.],[-1,1,4]])', 'LA.norm(c,dim=0)', 'LA.norm(c,dim=1)', 'LA.norm(c,ord=1,dim=1)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    LA.norm(c,dim=0)
NameError: name 'LA' is not defined
"
"
 torch.linalg. vector_norm ( x ,  ord ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'fromtorchimportlinalgasLA', 'a=torch.arange(9,dtype=torch.float)-4', 'a', 'B=a.reshape((3,3))', 'B', 'LA.vector_norm(a,ord=3.5)', 'LA.vector_norm(B,ord=3.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    fromtorchimportlinalgasLA
NameError: name 'fromtorchimportlinalgasLA' is not defined
"
"
 torch.linalg. matrix_norm ( A ,  ord ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'fromtorchimportlinalgasLA', 'A=torch.arange(9,dtype=torch.float).reshape(3,3)', 'A', 'LA.matrix_norm(A)', 'LA.matrix_norm(A,ord=-1)', 'B=A.expand(2,-1,-1)', 'B', 'LA.matrix_norm(B)', 'LA.matrix_norm(B,dim=(0,2))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    fromtorchimportlinalgasLA
NameError: name 'fromtorchimportlinalgasLA' is not defined
"
"
 torch.linalg. solve_triangular ( A ,  B ,  * ,  upper ,  left ,  unitriangular ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(3,3).triu_()', 'b=torch.randn(3,4)', 'X=torch.linalg.solve_triangular(A,B,upper=True)', 'torch.allclose(A@X,B)', 'A=torch.randn(2,3,3).tril_()', 'B=torch.randn(2,3,4)', 'X=torch.linalg.solve_triangular(A,B,upper=False)', 'torch.allclose(A@X,B)', 'A=torch.randn(2,4,4).tril_()', 'B=torch.randn(2,3,4)', 'X=torch.linalg.solve_triangular(A,B,upper=False,left=False)', 'torch.allclose(X@A,B)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    X=torch.linalg.solve_triangular(A,B,upper=True)
NameError: name 'B' is not defined
"
"
 torch.linalg. lstsq ( A ,  B ,  rcond ,  * ,  driver ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.tensor([[[10,2,3],[3,10,5],[5,6,12]]],dtype=torch.float)# shape (1, 3, 3)', 'B=torch.tensor([[[2,5,1],[3,2,1],[5,1,9]],', 'X=torch.linalg.lstsq(A,B).solution# A is broadcasted to shape (2, 3, 3)', 'torch.dist(X,torch.linalg.pinv(A)@B)', ""S=torch.linalg.lstsq(A,B,driver='gelsd').singular_values"", 'torch.dist(S,torch.linalg.svdvals(A))', 'A[:,0].zero_()# Decrease the rank of A', 'rank=torch.linalg.lstsq(A,B).rank', 'rank']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6
    X=torch.linalg.lstsq(A,B).solution# A is broadcasted to shape (2, 3, 3)
     ^
SyntaxError: invalid syntax
"
"
 torch.linalg. vecdot ( x ,  y ,  * ,  dim ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'v1=torch.randn(3,2)', 'v2=torch.randn(3,2)', 'linalg.vecdot(v1,v2)', 'torch.vdot(v1[0],v2[0])']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 6, in <module>
    linalg.vecdot(v1,v2)
NameError: name 'linalg' is not defined
"
"
 torch.linalg. multi_dot ( tensors ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'fromtorch.linalgimportmulti_dotmulti_dot([torch.tensor([1,2]),torch.tensor([2,3])])', 'multi_dot([torch.tensor([[1,2]]),torch.tensor([2,3])])', 'multi_dot([torch.tensor([[1,2]]),torch.tensor([[2],[3]])])', 'A=torch.arange(2*3).view(2,3)', 'B=torch.arange(3*2).view(3,2)', 'C=torch.arange(2*2).view(2,2)', 'multi_dot((A,B,C))']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    fromtorch.linalgimportmulti_dotmulti_dot([torch.tensor([1,2]),torch.tensor([2,3])])
NameError: name 'fromtorch' is not defined
"
"
 torch.linalg. tensorinv ( A ,  ind ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.eye(4*6).reshape((4,6,8,3))', 'Ainv=torch.linalg.tensorinv(A,ind=2)', 'Ainv.shape', 'B=torch.randn(4,6)', 'torch.allclose(torch.tensordot(Ainv,B),torch.linalg.tensorsolve(A,B))', 'A=torch.randn(4,4)', 'Atensorinv=torch.linalg.tensorinv(A,ind=1)', 'Ainv=torch.linalg.inverse(A)', 'torch.allclose(Atensorinv,Ainv)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 11, in <module>
    Ainv=torch.linalg.inverse(A)
AttributeError: module 'torch.linalg' has no attribute 'inverse'
"
"
 torch.linalg. vander ( x ,  N )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3,5])', 'linalg.vander(x)', 'linalg.vander(x,N=3)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    linalg.vander(x)
NameError: name 'linalg' is not defined
"
"
 torch.linalg. solve_ex ( A ,  B ,  * ,  left ,  check_errors ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(3,3)', 'Ainv,info=torch.linalg.solve_ex(A)', 'torch.dist(torch.linalg.inv(A),Ainv)', 'info']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 5, in <module>
    Ainv,info=torch.linalg.solve_ex(A)
TypeError: linalg_solve_ex() missing 1 required positional arguments: ""B""
"
"
 torch.linalg. ldl_solve ( LD ,  pivots ,  B ,  * ,  hermitian ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'A=A@A.mT# make symmetric', 'LD,pivots,info=torch.linalg.ldl_factor_ex(A)', 'B=torch.randn(2,3,4)', 'X=torch.linalg.ldl_solve(LD,pivots,B)', 'torch.linalg.norm(A@X-B)', 'tensor(0.0001)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 10, in <module>
    tensor(0.0001)
NameError: name 'tensor' is not defined
"
"
 class torch.ao.nn.quantized. FloatFunctional [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'f_add=FloatFunctional()', 'a=torch.tensor(3.0)', 'b=torch.tensor(4.0)', 'f_add.add(a,b)# Equivalent to ``torch.add(a, b)``']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    f_add=FloatFunctional()
NameError: name 'FloatFunctional' is not defined
"
"
 torch.sparse. sum ( input ,  dim ,  dtype ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'nnz=3', 'dims=[5,5,2,3]', 'I=torch.cat([torch.randint(0,dims[0],size=(nnz,)),', 'V=torch.randn(nnz,dims[2],dims[3])', 'size=torch.Size(dims)', 'S=torch.sparse_coo_tensor(I,V,size)', 'S', 'torch.sparse.sum(S,[1,3])', 'torch.sparse.sum(S,[0,1,3])']","  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 7
    V=torch.randn(nnz,dims[2],dims[3])
     ^
SyntaxError: invalid syntax
"
"
 torch.sparse. sampled_addmm ( input ,  mat1 ,  mat2 ,  * ,  beta ,  alpha ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', ""input=torch.eye(3,device='cuda').to_sparse_csr()"", ""mat1=torch.randn(3,5,device='cuda')"", ""mat2=torch.randn(5,3,device='cuda')"", 'torch.sparse.sampled_addmm(input,mat1,mat2)', 'torch.sparse.sampled_addmm(input,mat1,mat2).to_dense()', 'torch.sparse.sampled_addmm(input,mat1,mat2,beta=0.5,alpha=0.5)']","Traceback (most recent call last):
  File ""/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py"", line 4, in <module>
    input=torch.eye(3,device='cuda').to_sparse_csr()
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.9/site-packages/torch/cuda/__init__.py"", line 258, in _lazy_init
    raise AssertionError(""Torch not compiled with CUDA enabled"")
AssertionError: Torch not compiled with CUDA enabled
"
"
 torch.sparse. spdiags ( diagonals ,  offsets ,  shape ,  layout )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'diags=torch.arange(9).reshape(3,3)', 'diags', 's=torch.sparse.spdiags(diags,torch.tensor([0,-1,-2]),(3,3),layout=torch.sparse_csr)', 's', 's.to_dense()']","/media/nimashiri/SSD/FSE23_2/get_invocation_code/torch/from_docs/example.py:6: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at /media/nimashiri/SSD/pytorch/aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  s=torch.sparse.spdiags(diags,torch.tensor([0,-1,-2]),(3,3),layout=torch.sparse_csr)
"
