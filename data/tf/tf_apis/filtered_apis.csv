"tf.config.optimizer.get_jit() 
",No input params,No example
"tf.config.optimizer.set_jit(
    enabled: Union[bool, str]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.DynamicRaggedShape(
    row_partitions: Sequence[tf.experimental.RowPartition],
    inner_shape: tf.types.experimental.TensorLike,
    dtype: Optional[tf.dtypes.DType] = None,
    validate: bool = False,
    static_inner_shape: ... = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.DynamicRaggedShape.Spec(
    row_partitions: Tuple[RowPartitionSpec, ...],
    static_inner_shape: tf.TensorShape,
    dtype: tf.dtypes.DType
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.StructuredTensor(
    fields: Mapping[str, _FieldValue],
    ragged_shape: tf.experimental.DynamicRaggedShape
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.DTensorCheckpoint(
    mesh: tf.experimental.dtensor.Mesh,
    root=None,
    **kwargs
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.DTensorDataset(
    dataset: tf.data.Dataset,
    *,
    mesh: tf.experimental.dtensor.Mesh,
    layouts: Any,
    global_batch_size: int,
    dataset_already_batched: bool = False,
    batch_dim: Optional[str] = None,
    prefetch: Optional[int] = None,
    tf_data_service_config: Optional[TFDataServiceConfig] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.Layout(
    sharding_specs: List[str],
    mesh: tf.experimental.dtensor.Mesh
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.Mesh(
    dim_names: List[str],
    global_device_ids: np.ndarray,
    local_device_ids: List[int],
    local_devices: List[tf.compat.v1.DeviceSpec],
    mesh_name: str = '',
    global_devices: Optional[List[tf_device.DeviceSpec]] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.barrier(
    mesh: tf.experimental.dtensor.Mesh,
    barrier_name: Optional[str] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.call_with_layout(
    fn: Callable[..., Any],
    layout: Optional[tf.experimental.dtensor.Layout],
    *args,
    **kwargs
) -> Any
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.check_layout(
    tensor: tf.Tensor,
    layout: tf.experimental.dtensor.Layout
) -> None
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.client_id() -> int
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.copy_to_mesh(
    tensor: Any,
    layout: tf.experimental.dtensor.Layout,
    source_layout: Optional[tf.experimental.dtensor.Layout] = None
) -> tf.Tensor
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.create_distributed_mesh(
    mesh_dims: List[Tuple[str, int]],
    mesh_name: str = '',
    local_devices: Optional[List[str]] = None,
    device_type: Optional[str] = None
) -> tf.experimental.dtensor.Mesh
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.create_mesh(
    mesh_dims: Optional[List[Tuple[str, int]]] = None,
    mesh_name: str = '',
    devices: Optional[List[str]] = None,
    device_type: Optional[str] = None
) -> tf.experimental.dtensor.Mesh
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.create_tpu_mesh(
    mesh_dim_names: List[str],
    mesh_shape: List[int],
    mesh_name: str,
    ring_dims: Optional[int] = None,
    ring_axes: Optional[List[str]] = None,
    ring_bounds: Optional[List[int]] = None,
    can_split_host_across_rings: bool = True,
    build_ring_across_rings: bool = False,
    rotate_ring_across_rings: bool = False
) -> tf.experimental.dtensor.Mesh
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.device_name() 
",No input params,No example
"tf.experimental.dtensor.enable_save_as_bf16(
    variables: List[tf.Variable]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.fetch_layout(
    tensor: tf.Tensor
) -> tf.experimental.dtensor.Layout
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.full_job_name(
    task_id: Optional[int] = None
) 
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.heartbeat_enabled() -> bool
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.initialize_accelerator_system(
    device_type: Optional[str] = None,
    enable_coordination_service: Optional[bool] = False
) 
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.initialize_accelerator_system(
    device_type: Optional[str] = None,
    enable_coordination_service: Optional[bool] = False
) 
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.initialize_accelerator_system(
    device_type: Optional[str] = None,
    enable_coordination_service: Optional[bool] = False
) 
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.job_name() 
",No input params,No example
"tf.experimental.dtensor.jobs() -> List[str]
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.local_devices(
    device_type: str, for_client_id: Optional[int] = None
) -> List[tf.compat.v1.DeviceSpec]
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.name_based_restore(
    mesh: tf.experimental.dtensor.Mesh,
    checkpoint_prefix: str,
    name_tensor_dict: Dict[str, Union[ops.Tensor, tf_variables.Variable]]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.name_based_save(
    mesh: tf.experimental.dtensor.Mesh,
    checkpoint_prefix: Union[str, tf.Tensor],
    name_tensor_dict: Dict[str, Union[ops.Tensor, tf_variables.Variable]]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.num_clients() -> int
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.num_global_devices(
    device_type: str
) -> int
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.num_local_devices(
    device_type: str
) -> int
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.pack(
    tensors: Sequence[Any],
    layout: tf.experimental.dtensor.Layout
) -> Any
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.preferred_device_type() 
",No input params,No example
"tf.experimental.dtensor.relayout(
    tensor: tf.Tensor,
    layout: tf.experimental.dtensor.Layout
) -> tf.Tensor
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.sharded_save(
    mesh: tf.experimental.dtensor.Mesh,
    file_prefix: Union[str, tf.Tensor],
    tensor_names: Union[List[str], tf.Tensor],
    shape_and_slices: Union[List[str], tf.Tensor],
    tensors: List[Union[ops.Tensor, tf_variables.Variable]]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.dtensor.shutdown_accelerator_system() -> None
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.shutdown_accelerator_system() -> None
","invalid syntax (<unknown>, line 2)",No example
"tf.experimental.dtensor.unpack(
    tensor: Any
) -> Sequence[Any]
","invalid syntax (<unknown>, line 3)",No example
"tf.function(
    func=None,
    input_signature=None,
    autograph=True,
    jit_compile=None,
    reduce_retracing=False,
    experimental_implements=None,
    experimental_autograph_options=None,
    experimental_relax_shapes=None,
    experimental_compile=None,
    experimental_follow_type_hints=None
) -> tf.types.experimental.GenericFunction
","invalid syntax (<unknown>, line 13)",No example
"tf.keras.callbacks.ModelCheckpoint(
    filepath,
    monitor: str = 'val_loss',
    verbose: int = 0,
    save_best_only: bool = False,
    save_weights_only: bool = False,
    mode: str = 'auto',
    save_freq='epoch',
    options=None,
    initial_value_threshold=None,
    **kwargs
)
","invalid syntax (<unknown>, line 4)",No example
"tf.keras.callbacks.ProgbarLogger(
    count_mode: str = 'samples', stateful_metrics=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.BinaryIoU(
    target_class_ids: Union[List[int], Tuple[int, ...]] = (0, 1),
    threshold=0.5,
    name=None,
    dtype=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.IoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.MeanIoU(
    num_classes: int,
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotIoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name=None,
    dtype=None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotMeanIoU(
    num_classes: int,
    name: str = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.SparseCategoricalCrossentropy(
    name: str = 'sparse_categorical_crossentropy',
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    from_logits: bool = False,
    ignore_class: Optional[int] = None,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.lite.experimental.QuantizationDebugOptions(
    layer_debug_metrics: Optional[Mapping[str, Callable[[np.ndarray], float]]] = None,
    model_debug_metrics: Optional[Mapping[str, Callable[[Sequence[np.ndarray], Sequence[np.ndarray]],
        float]]] = None,
    layer_direct_compare_metrics: Optional[Mapping[str, Callable[[Sequence[np.ndarray], Sequence[np.ndarray],
        float, int], float]]] = None,
    denylisted_ops: Optional[List[str]] = None,
    denylisted_nodes: Optional[List[str]] = None,
    fully_quantize: bool = False
) -> None
","invalid syntax (<unknown>, line 3)",No example
"tf.lite.experimental.QuantizationDebugger(
    quant_debug_model_path: Optional[str] = None,
    quant_debug_model_content: Optional[bytes] = None,
    float_model_path: Optional[str] = None,
    float_model_content: Optional[bytes] = None,
    debug_dataset: Optional[Callable[[], Iterable[Sequence[np.ndarray]]]] = None,
    debug_options: Optional[tf.lite.experimental.QuantizationDebugOptions] = None,
    converter: Optional[TFLiteConverter] = None
) -> None
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.BinaryIoU(
    target_class_ids: Union[List[int], Tuple[int, ...]] = (0, 1),
    threshold=0.5,
    name=None,
    dtype=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.IoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.MeanIoU(
    num_classes: int,
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotIoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name=None,
    dtype=None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotMeanIoU(
    num_classes: int,
    name: str = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.SparseCategoricalCrossentropy(
    name: str = 'sparse_categorical_crossentropy',
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    from_logits: bool = False,
    ignore_class: Optional[int] = None,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.ragged.stack(
    values: typing.List[ragged_tensor.RaggedOrDense], axis=0, name=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.raw_ops.ImageSummary(
    tag,
    tensor,
    max_images=3,
    bad_color=_execute.make_tensor(\n    'dtype: DT_UINT8 tensor_shape { dim { size: 4 } } int_val: 255 int_val: 0 int_val: 0 int_val: 255 '\n    , 'bad_color'),
    name=None
)
","unexpected character after line continuation character (<unknown>, line 6)",No example
"tf.tpu.experimental.DeviceAssignment(
    topology: tf.tpu.experimental.Topology,
    core_assignment: np.ndarray
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.Adagrad(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    initial_accumulator_value: float = 0.1,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.AdagradMomentum(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    momentum: float = 0.0,
    use_nesterov: bool = False,
    exponent: float = 2,
    beta2: float = 1,
    epsilon: float = 1e-10,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.Adam(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    beta_1: float = 0.9,
    beta_2: float = 0.999,
    epsilon: float = 1e-07,
    lazy_adam: bool = True,
    sum_inside_sqrt: bool = True,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.FTRL(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    learning_rate_power: float = -0.5,
    l1_regularization_strength: float = 0.0,
    l2_regularization_strength: float = 0.0,
    beta: float = 0.0,
    initial_accumulator_value: float = 0.1,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None,
    multiply_linear_by_learning_rate: bool = False,
    allow_zero_accumulator: bool = False
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.FeatureConfig(
    table: tf.tpu.experimental.embedding.TableConfig,
    max_sequence_length: int = 0,
    validate_weights_and_indices: bool = True,
    output_shape: Optional[Union[List[int], tf.TensorShape]] = None,
    name: Optional[Text] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.QuantizationConfig(
    num_buckets: int, lower: float, upper: float
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.SGD(
    learning_rate: Union[float, Callable[[], float]] = 0.01,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbedding(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer],
    pipeline_execution_with_tensor_core: bool = False
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbeddingForServing(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbeddingV0(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TableConfig(
    vocabulary_size: int,
    dim: int,
    initializer: Optional[Callable[[Any], None]] = None,
    optimizer: Optional[_Optimizer] = None,
    combiner: Text = 'mean',
    name: Optional[Text] = None,
    quantization_config: tf.tpu.experimental.embedding.QuantizationConfig = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.serving_embedding_lookup(
    inputs: Any,
    weights: Optional[Any],
    tables: Dict[tf.tpu.experimental.embedding.TableConfig, tf.Variable],
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable]
) -> Any
","invalid syntax (<unknown>, line 3)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
"tf.type_spec_from_value(
    value
) -> tf.TypeSpec
","invalid syntax (<unknown>, line 4)",No example
"tf.config.optimizer.get_jit() 
",No input params,No example
"tf.config.optimizer.set_jit(
    enabled: Union[bool, str]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.DynamicRaggedShape(
    row_partitions: Sequence[tf.experimental.RowPartition],
    inner_shape: tf.types.experimental.TensorLike,
    dtype: Optional[tf.dtypes.DType] = None,
    validate: bool = False,
    static_inner_shape: ... = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.DynamicRaggedShape.Spec(
    row_partitions: Tuple[RowPartitionSpec, ...],
    static_inner_shape: tf.TensorShape,
    dtype: tf.dtypes.DType
)
","invalid syntax (<unknown>, line 3)",No example
"tf.experimental.StructuredTensor(
    fields: Mapping[str, _FieldValue],
    ragged_shape: tf.experimental.DynamicRaggedShape
)
","invalid syntax (<unknown>, line 3)",No example
"tf.function(
    func=None,
    input_signature=None,
    autograph=True,
    jit_compile=None,
    reduce_retracing=False,
    experimental_implements=None,
    experimental_autograph_options=None,
    experimental_relax_shapes=None,
    experimental_compile=None,
    experimental_follow_type_hints=None
) -> tf.types.experimental.GenericFunction
","invalid syntax (<unknown>, line 13)",No example
"tf.keras.callbacks.ModelCheckpoint(
    filepath,
    monitor: str = 'val_loss',
    verbose: int = 0,
    save_best_only: bool = False,
    save_weights_only: bool = False,
    mode: str = 'auto',
    save_freq='epoch',
    options=None,
    initial_value_threshold=None,
    **kwargs
)
","invalid syntax (<unknown>, line 4)",No example
"tf.keras.callbacks.ProgbarLogger(
    count_mode: str = 'samples', stateful_metrics=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.BinaryIoU(
    target_class_ids: Union[List[int], Tuple[int, ...]] = (0, 1),
    threshold=0.5,
    name=None,
    dtype=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.IoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.MeanIoU(
    num_classes: int,
    name: Optional[str] = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_true: bool = True,
    sparse_y_pred: bool = True,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotIoU(
    num_classes: int,
    target_class_ids: Union[List[int], Tuple[int, ...]],
    name=None,
    dtype=None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.OneHotMeanIoU(
    num_classes: int,
    name: str = None,
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    ignore_class: Optional[int] = None,
    sparse_y_pred: bool = False,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.keras.metrics.SparseCategoricalCrossentropy(
    name: str = 'sparse_categorical_crossentropy',
    dtype: Optional[Union[str, tf.dtypes.DType]] = None,
    from_logits: bool = False,
    ignore_class: Optional[int] = None,
    axis: int = -1
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.keras.utils.DeterministicRandomTestTool(
    seed: int = 42, mode='constant'
)
","invalid syntax (<unknown>, line 3)",No example
"tf.lite.experimental.QuantizationDebugOptions(
    layer_debug_metrics: Optional[Mapping[str, Callable[[np.ndarray], float]]] = None,
    model_debug_metrics: Optional[Mapping[str, Callable[[Sequence[np.ndarray], Sequence[np.ndarray]],
        float]]] = None,
    layer_direct_compare_metrics: Optional[Mapping[str, Callable[[Sequence[np.ndarray], Sequence[np.ndarray],
        float, int], float]]] = None,
    denylisted_ops: Optional[List[str]] = None,
    denylisted_nodes: Optional[List[str]] = None,
    fully_quantize: bool = False
) -> None
","invalid syntax (<unknown>, line 3)",No example
"tf.lite.experimental.QuantizationDebugger(
    quant_debug_model_path: Optional[str] = None,
    quant_debug_model_content: Optional[bytes] = None,
    float_model_path: Optional[str] = None,
    float_model_content: Optional[bytes] = None,
    debug_dataset: Optional[Callable[[], Iterable[Sequence[np.ndarray]]]] = None,
    debug_options: Optional[tf.lite.experimental.QuantizationDebugOptions] = None,
    converter: Optional[TFLiteConverter] = None
) -> None
","invalid syntax (<unknown>, line 3)",No example
"tf.ragged.stack(
    values: typing.List[ragged_tensor.RaggedOrDense], axis=0, name=None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.batch_parallel(
    computation: Callable[..., Any],
    inputs: Optional[List[List[Optional[core_types.Tensor]]]] = None,
    num_shards: int = 1,
    infeed_queue: Optional[tpu_feed.InfeedQueue] = None,
    device_assignment: Optional[tf.tpu.experimental.DeviceAssignment] = None,
    name: Optional[Text] = None,
    xla_options: Optional[tf.tpu.XLAOptions] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.core(
    num: int
) -> Text
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.experimental.AdagradParameters(
    learning_rate: float,
    initial_accumulator: float = 0.1,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: Optional[bool] = None,
    clip_gradient_min: Optional[float] = None,
    clip_gradient_max: Optional[float] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.experimental.AdamParameters(
    learning_rate: float,
    beta1: float = 0.9,
    beta2: float = 0.999,
    epsilon: float = 1e-08,
    lazy_adam: bool = True,
    sum_inside_sqrt: bool = True,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: Optional[bool] = None,
    clip_gradient_min: Optional[float] = None,
    clip_gradient_max: Optional[float] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.DeviceAssignment(
    topology: tf.tpu.experimental.Topology,
    core_assignment: np.ndarray
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.experimental.FtrlParameters(
    learning_rate: float,
    learning_rate_power: float = -0.5,
    initial_accumulator_value: float = 0.1,
    l1_regularization_strength: float = 0.0,
    l2_regularization_strength: float = 0.0,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: Optional[bool] = None,
    multiply_linear_by_learning_rate: bool = False,
    beta: float = 0,
    allow_zero_accumulator: bool = False,
    clip_gradient_min: Optional[float] = None,
    clip_gradient_max: Optional[float] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.experimental.StochasticGradientDescentParameters(
    learning_rate: float,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: Optional[bool] = None,
    clip_gradient_min: Optional[float] = None,
    clip_gradient_max: Optional[float] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.Adagrad(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    initial_accumulator_value: float = 0.1,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.AdagradMomentum(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    momentum: float = 0.0,
    use_nesterov: bool = False,
    exponent: float = 2,
    beta2: float = 1,
    epsilon: float = 1e-10,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.Adam(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    beta_1: float = 0.9,
    beta_2: float = 0.999,
    epsilon: float = 1e-07,
    lazy_adam: bool = True,
    sum_inside_sqrt: bool = True,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.FTRL(
    learning_rate: Union[float, Callable[[], float]] = 0.001,
    learning_rate_power: float = -0.5,
    l1_regularization_strength: float = 0.0,
    l2_regularization_strength: float = 0.0,
    beta: float = 0.0,
    initial_accumulator_value: float = 0.1,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    slot_variable_creation_fn: Optional[SlotVarCreationFnType] = None,
    clipvalue: Optional[ClipValueType] = None,
    multiply_linear_by_learning_rate: bool = False,
    allow_zero_accumulator: bool = False
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.FeatureConfig(
    table: tf.tpu.experimental.embedding.TableConfig,
    max_sequence_length: int = 0,
    validate_weights_and_indices: bool = True,
    output_shape: Optional[Union[List[int], tf.TensorShape]] = None,
    name: Optional[Text] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.QuantizationConfig(
    num_buckets: int, lower: float, upper: float
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.SGD(
    learning_rate: Union[float, Callable[[], float]] = 0.01,
    use_gradient_accumulation: bool = True,
    clip_weight_min: Optional[float] = None,
    clip_weight_max: Optional[float] = None,
    weight_decay_factor: Optional[float] = None,
    multiply_weight_decay_factor_by_learning_rate: bool = None,
    clipvalue: Optional[ClipValueType] = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbedding(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer],
    pipeline_execution_with_tensor_core: bool = False
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbeddingForServing(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TPUEmbeddingV0(
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable],
    optimizer: Optional[tpu_embedding_v2_utils._Optimizer]
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.TableConfig(
    vocabulary_size: int,
    dim: int,
    initializer: Optional[Callable[[Any], None]] = None,
    optimizer: Optional[_Optimizer] = None,
    combiner: Text = 'mean',
    name: Optional[Text] = None,
    quantization_config: tf.tpu.experimental.embedding.QuantizationConfig = None
)
","invalid syntax (<unknown>, line 3)",No example
"tf.tpu.experimental.embedding.serving_embedding_lookup(
    inputs: Any,
    weights: Optional[Any],
    tables: Dict[tf.tpu.experimental.embedding.TableConfig, tf.Variable],
    feature_config: Union[tf.tpu.experimental.embedding.FeatureConfig, Iterable]
) -> Any
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.initialize_system(
    embedding_config: Optional[embedding_pb2.TPUEmbeddingConfiguration] = None,
    job: Optional[Text] = None,
    compilation_failure_closes_chips: bool = True,
    tpu_cancellation_closes_chips: Optional[bool] = None
) -> core_types.Tensor
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.outside_compilation(
    computation: Callable[..., Any], *args, **kwargs
) -> Any
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.replicate(
    computation: Callable[..., Any],
    inputs: Optional[List[List[core_types.Tensor]]] = None,
    infeed_queue: Optional[tpu_feed.InfeedQueue] = None,
    device_assignment: Optional[tf.tpu.experimental.DeviceAssignment] = None,
    name: Optional[Text] = None,
    maximum_shapes: Optional[Any] = None,
    padding_spec: Optional[tf.compat.v1.tpu.PaddingSpec] = None,
    xla_options: Optional[tf.tpu.XLAOptions] = None
) -> List[Any]
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.rewrite(
    computation: Callable[..., Any],
    inputs: Optional[List[List[Optional[core_types.Tensor]]]] = None,
    infeed_queue: Optional[tpu_feed.InfeedQueue] = None,
    device_assignment: Optional[tf.tpu.experimental.DeviceAssignment] = None,
    name: Optional[Text] = None,
    xla_options: Optional[tf.tpu.XLAOptions] = None
) -> Any
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.shard(
    computation: Callable[..., Any],
    inputs: Optional[List[core_types.Tensor]] = None,
    num_shards: int = 1,
    input_shard_axes: Optional[List[int]] = None,
    outputs_from_all_shards: Union[bool, List[bool]] = True,
    output_shard_axes: Optional[List[int]] = None,
    infeed_queue: Optional[tpu_feed.InfeedQueue] = None,
    device_assignment: Optional[tf.tpu.experimental.DeviceAssignment] = None,
    name: Optional[Text] = None,
    xla_options: Optional[tf.tpu.XLAOptions] = None
) -> List[core_types.Tensor]
","invalid syntax (<unknown>, line 3)",No example
"tf.compat.v1.tpu.shutdown_system(
    job: Optional[Text] = None
) -> tf.Operation
","invalid syntax (<unknown>, line 3)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
tf.io.parse_example(,"unexpected EOF while parsing (<unknown>, line 2)",No example
"tf.type_spec_from_value(
    value
) -> tf.TypeSpec
","invalid syntax (<unknown>, line 4)",No example
