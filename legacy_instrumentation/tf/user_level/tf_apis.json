{
    "timeline": [
        "AllocationMaximum",
        "StepStatsAnalysis",
        "_ChromeTraceFormatter",
        "_TensorTracker",
        "Timeline",
        "_create_event",
        "emit_pid",
        "emit_tid",
        "emit_region",
        "emit_obj_create",
        "emit_obj_delete",
        "emit_obj_snapshot",
        "emit_flow_start",
        "emit_flow_end",
        "emit_counter",
        "emit_counters",
        "format_to_string",
        "name",
        "pid",
        "create_time",
        "object_id",
        "num_bytes",
        "allocator",
        "last_unref",
        "add_ref",
        "add_unref",
        "_alloc_pid",
        "_alloc_flow_id",
        "_parse_op_label",
        "_parse_kernel_label",
        "_assign_lanes",
        "_emit_op",
        "_emit_tensor_snapshot",
        "_produce_tensor",
        "_is_gputrace_device",
        "_allocate_pids",
        "_analyze_tensors",
        "_show_compute",
        "_show_memory_counters",
        "_preprocess_op_time",
        "analyze_step_stats",
        "generate_chrome_trace_format"
    ],
    "pywrap_tf_session": [
        "TF_NewSessionOptions",
        "TF_Reset"
    ],
    "session": [
        "SessionInterface",
        "_get_indexed_slices_value_from_fetches",
        "_get_feeds_for_indexed_slices",
        "_convert_to_numpy_obj",
        "register_session_run_conversion_functions",
        "_is_attrs_instance",
        "_get_attrs_values",
        "_FetchMapper",
        "_ElementFetchMapper",
        "_uniquify_fetches",
        "_ListFetchMapper",
        "_DictFetchMapper",
        "_AttrsFetchMapper",
        "_FetchHandler",
        "_name_list",
        "_DeviceAttributes",
        "BaseSession",
        "Session",
        "InteractiveSession",
        "graph",
        "sess_str",
        "run",
        "partial_run_setup",
        "partial_run",
        "unique_fetches",
        "build_results",
        "for_fetch",
        "unique_fetches",
        "build_results",
        "unique_fetches",
        "build_results",
        "unique_fetches",
        "build_results",
        "unique_fetches",
        "build_results",
        "_assert_fetchable",
        "fetches",
        "targets",
        "build_results",
        "name",
        "device_type",
        "memory_limit_bytes",
        "incarnation",
        "__repr__",
        "list_devices",
        "close",
        "__del__",
        "graph",
        "graph_def",
        "sess_str",
        "as_default",
        "run",
        "partial_run",
        "partial_run_setup",
        "_run",
        "make_callable",
        "_do_run",
        "_do_call",
        "_extend_graph",
        "_register_dead_handle",
        "_update_with_movers",
        "_call_tf_sessionrun",
        "_call_tf_sessionprun",
        "_Callable",
        "_make_callable_from_options",
        "__enter__",
        "__exit__",
        "reset",
        "close",
        "_generator",
        "_feed_fn",
        "_setup_fn",
        "_feed_fn",
        "_callable_template_with_options_and_metadata",
        "_run_fn",
        "_prun_fn",
        "__call__",
        "__del__",
        "_generic_run",
        "_single_operation_run",
        "_single_tensor_run",
        "_fetch_handler_run"
    ],
    "device_lib": [
        "list_local_devices",
        "_convert"
    ],
    "remote_utils": [
        "get_default_communication_protocol",
        "is_remote_path",
        "get_appendable_file_encoding"
    ],
    "benchmark": [
        "_rename_function",
        "_global_report_benchmark",
        "_BenchmarkRegistrar",
        "ParameterizedBenchmark",
        "Benchmark",
        "benchmark_config",
        "TensorFlowBenchmark",
        "_run_benchmarks",
        "benchmarks_main",
        "__new__",
        "__new__",
        "is_abstract",
        "_get_name",
        "report_benchmark",
        "is_abstract",
        "run_op_benchmark",
        "evaluate",
        "_median",
        "_mean_and_stdev",
        "create_benchmark_function"
    ],
    "app": [
        "_parse_flags_tolerate_undef",
        "run"
    ],
    "tf_logging": [
        "_get_caller",
        "get_logger",
        "log",
        "error",
        "fatal",
        "info",
        "warn",
        "warning",
        "TaskLevelStatusMessage",
        "flush",
        "vlog",
        "_GetNextLogCountPerToken",
        "log_every_n",
        "log_first_n",
        "log_if",
        "_GetFileAndLine",
        "google2_log_prefix",
        "get_verbosity",
        "set_verbosity",
        "_get_thread_id",
        "_logger_find_caller",
        "_logger_find_caller",
        "_logger_find_caller"
    ],
    "flags": [
        "_wrap_define_function",
        "_FlagValuesWrapper",
        "wrapper",
        "__getattribute__",
        "__getattr__",
        "__setattr__",
        "__delattr__",
        "__dir__",
        "__getitem__",
        "__setitem__",
        "__len__",
        "__iter__",
        "__str__",
        "__call__"
    ],
    "analytics": [
        "track_usage"
    ],
    "status_bar": [
        "SetupStatusBarInsideGoogle"
    ],
    "test": [
        "main"
    ],
    "googletest": [
        "g_main",
        "main",
        "GetTempDir",
        "test_src_dir_path",
        "StatefulSessionAvailable",
        "StubOutForTesting",
        "main_wrapper",
        "__del__",
        "__enter__",
        "__exit__",
        "CleanUp",
        "SmartSet",
        "SmartUnsetAll",
        "Set",
        "UnsetAll",
        "delete_temp_dir"
    ],
    "sysconfig": [
        "get_include",
        "get_lib",
        "get_compile_flags",
        "get_link_flags",
        "get_build_info"
    ],
    "gfile": [
        "GFile",
        "FastGFile"
    ],
    "device_context": [
        "enclosing_tpu_context"
    ],
    "resource_loader": [
        "load_resource",
        "get_data_files_path",
        "get_root_dir_with_all_resources",
        "get_path_to_datafile",
        "readahead_file_path"
    ],
    "self_check": [
        "preload_check"
    ],
    "distribute_coordinator_context": [
        "get_current_worker_context"
    ],
    "cross_device_utils": [
        "aggregate_gradients_using_nccl",
        "aggregate_gradients_using_hierarchical_copy",
        "aggregate_single_gradient_using_copy",
        "CollectiveKeys",
        "CollectiveReplicaLauncher",
        "aggregate_tensors_or_indexed_slices",
        "divide_by_n_tensors_or_indexed_slices",
        "copy_tensor_or_indexed_slices_to_device",
        "is_indexed_slices",
        "split_by_sparsity",
        "stitch_values",
        "group_by_size",
        "_pad_util",
        "get_group_key",
        "get_instance_key",
        "__deepcopy__",
        "_executor_scope",
        "_control_input",
        "_should_use_collective_v2",
        "_next_instance_key",
        "all_reduce",
        "_all_gather",
        "batch_all_reduce",
        "all_gather",
        "all_reduce_indexed_slices",
        "all_gather",
        "densify_and_all_reduce"
    ],
    "multi_process_lib": [
        "is_oss",
        "_is_enabled",
        "_AbslProcess",
        "_set_spawn_exe_path",
        "_if_spawn_run_and_exit",
        "test_main",
        "initialized",
        "_run_with_absl",
        "AbslForkServerProcess",
        "AbslForkServerContext",
        "Process"
    ],
    "values": [
        "_on_write_update_replica",
        "DistributedValues",
        "DistributedDelegate",
        "PerReplica",
        "PerReplicaSpec",
        "Mirrored",
        "DistributedVarOp",
        "DistributedVariable",
        "_DistributedVariableSaveable",
        "_MirroredSaveable",
        "MirroredVariable",
        "_SyncOnReadSaveable",
        "SyncOnReadVariable",
        "_tensor_conversion_distributed_var",
        "_tensor_conversion_mirrored",
        "_tensor_conversion_mirrored_val",
        "_tensor_conversion_sync_on_read",
        "VariablePolicy",
        "OnReadPolicy",
        "AutoPolicy",
        "OnWritePolicy",
        "merge_fn",
        "_get",
        "_get_cross_replica",
        "_get_on_device_or_primary",
        "_primary",
        "_devices",
        "__str__",
        "__repr__",
        "__getattr__",
        "values",
        "_get_as_operand",
        "__add__",
        "__radd__",
        "__sub__",
        "__rsub__",
        "__mul__",
        "__rmul__",
        "__truediv__",
        "__rtruediv__",
        "__floordiv__",
        "__rfloordiv__",
        "__mod__",
        "__rmod__",
        "__lt__",
        "__le__",
        "__gt__",
        "__ge__",
        "__and__",
        "__rand__",
        "__or__",
        "__ror__",
        "__xor__",
        "__rxor__",
        "__getitem__",
        "__pow__",
        "__rpow__",
        "__invert__",
        "__neg__",
        "__abs__",
        "__div__",
        "__rdiv__",
        "__matmul__",
        "__rmatmul__",
        "_type_spec",
        "values",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_get_cross_replica",
        "_as_graph_element",
        "__eq__",
        "__hash__",
        "__deepcopy__",
        "_use_packed_variable",
        "is_initialized",
        "initializer",
        "initialized_value",
        "initial_value",
        "constraint",
        "graph",
        "_shared_name",
        "_unique_id",
        "_graph_key",
        "name",
        "dtype",
        "shape",
        "synchronization",
        "aggregation",
        "_packed_variable",
        "handle",
        "eval",
        "_save_slice_info",
        "_get_save_slice_info",
        "_set_save_slice_info",
        "device",
        "trainable",
        "distribute_strategy",
        "get_shape",
        "to_proto",
        "op",
        "_in_graph_mode",
        "_get_replica",
        "_get",
        "_get_on_device_or_primary",
        "read_value",
        "value",
        "numpy",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "_gather_saveables_for_checkpoint",
        "_as_graph_element",
        "_get_cross_replica",
        "_update_cross_replica",
        "_update_replica",
        "_update",
        "_should_act_as_resource_variable",
        "_dense_var_to_tensor",
        "_map_resources",
        "_write_object_proto",
        "restore",
        "restore",
        "_update_replica",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "_get_cross_replica",
        "_as_graph_element",
        "_gather_saveables_for_checkpoint",
        "_write_object_proto",
        "_dense_var_to_tensor",
        "restore",
        "_update_replica",
        "assign_sub",
        "assign_add",
        "assign",
        "_scatter_not_implemented",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "value",
        "_get_cross_replica",
        "_as_graph_element",
        "_gather_saveables_for_checkpoint",
        "_write_object_proto",
        "value",
        "_is_mirrored",
        "_as_graph_element",
        "_get_cross_replica",
        "_update_replica",
        "_is_mirrored",
        "value",
        "_as_graph_element",
        "_get_cross_replica",
        "_update_replica",
        "_scatter_not_implemented",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "get_saveable",
        "get_restore_ops",
        "_is_mirrored",
        "value",
        "_as_graph_element",
        "_get_cross_replica",
        "_update_replica",
        "assign",
        "assign_add",
        "assign_sub",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "get_saveable",
        "get_restore_ops",
        "_write_object_proto",
        "_update_replica",
        "_saveable_factory",
        "_saveable_factory",
        "_saveable_factory"
    ],
    "reduce_util": [
        "ReduceOp",
        "from_variable_aggregation"
    ],
    "distribute_config": [
        "DistributeConfig",
        "__new__"
    ],
    "cross_device_ops": [
        "check_destinations",
        "validate_destinations",
        "reduce_non_distributed_value",
        "_make_tensor_into_per_replica",
        "_normalize_value_destination_pairs",
        "_validate_value_destination_pairs",
        "get_devices_from",
        "_devices_match",
        "_all_devices_match",
        "simple_broadcast",
        "_simple_reduce",
        "_simple_gather",
        "CrossDeviceOps",
        "ReductionToOneDevice",
        "_group_value_by_device",
        "_ungroup_and_make_mirrored",
        "_ConcatAndSplitPacker",
        "_pack_tensors",
        "_unpack_tensors",
        "AllReduceCrossDeviceOps",
        "NcclAllReduce",
        "HierarchicalCopyAllReduce",
        "CollectiveAllReduce",
        "select_cross_device_ops",
        "_num_between_graph_workers",
        "reduce",
        "_gather",
        "_gather_implementation",
        "batch_reduce",
        "broadcast",
        "reduce_implementation",
        "batch_reduce_implementation",
        "broadcast_implementation",
        "reduce_implementation",
        "_gather_implementation",
        "batch_reduce_implementation",
        "pack",
        "unpack",
        "reduce_implementation",
        "batch_reduce_implementation",
        "_batch_all_reduce",
        "_do_batch_all_reduce",
        "_do_batch_all_reduce_sparse",
        "_gather_implementation",
        "_num_between_graph_workers",
        "reduce_implementation",
        "batch_reduce_implementation",
        "_batch_all_reduce",
        "_do_batch_all_reduce_dense",
        "_do_batch_all_reduce_sparse",
        "_gather_implementation",
        "_batch_all_gather",
        "__deepcopy__",
        "compute_gathered_values"
    ],
    "mirrored_strategy": [
        "_is_device_list_single_worker",
        "_cluster_spec_to_device_list",
        "_group_device_list",
        "_is_gpu_device",
        "_infer_num_gpus_per_worker",
        "all_local_devices",
        "all_devices",
        "MirroredStrategy",
        "MirroredStrategyV1",
        "MirroredExtended",
        "_initialize_strategy",
        "_initialize_single_worker",
        "_initialize_multi_worker",
        "_input_workers_with_options",
        "_input_workers",
        "_get_variable_creator_initial_value",
        "_create_variable",
        "_validate_colocate_with_variable",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_distribute_dataset",
        "_experimental_make_numpy_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_experimental_run_steps_on_iterator",
        "_broadcast_to",
        "_call_for_each_replica",
        "_configure",
        "_update_config_proto",
        "_get_cross_device_ops",
        "_gather_to_implementation",
        "_reduce_to",
        "_batch_reduce_to",
        "_update",
        "_update_non_slot",
        "read_var",
        "_local_results",
        "value_container",
        "_num_replicas_in_sync",
        "worker_devices",
        "worker_devices_by_replica",
        "parameter_devices",
        "experimental_between_graph",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "non_slot_devices",
        "_global_batch_size",
        "_in_multi_worker_mode",
        "_get_local_replica_id",
        "_get_replica_id_in_sync_group",
        "_real_mirrored_creator",
        "body",
        "initial_value_fn"
    ],
    "parameter_server_strategy": [
        "ParameterServerStrategyV1",
        "ParameterServerStrategyExtended",
        "experimental_distribute_dataset",
        "distribute_datasets_from_function",
        "run",
        "scope",
        "_raise_pss_error_if_eager",
        "_initialize_strategy",
        "_initialize_multi_worker",
        "_initialize_local",
        "_input_workers_with_options",
        "_input_workers",
        "_validate_colocate_with_variable",
        "_experimental_distribute_dataset",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_make_numpy_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_broadcast_to",
        "_allow_variable_partition",
        "_create_variable",
        "_call_for_each_replica",
        "_verify_destinations_not_different_worker",
        "_gather_to_implementation",
        "_reduce_to",
        "_batch_reduce_to",
        "_select_single_value",
        "_update",
        "_update_non_slot",
        "_local_results",
        "value_container",
        "read_var",
        "_configure",
        "_update_config_proto",
        "_in_multi_worker_mode",
        "_num_replicas_in_sync",
        "worker_devices",
        "worker_devices_by_replica",
        "parameter_devices",
        "non_slot_devices",
        "experimental_between_graph",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "_global_batch_size",
        "_get_local_replica_id",
        "_get_replica_id_in_sync_group",
        "_select_fn",
        "var_creator"
    ],
    "strategy_test_lib": [
        "_TestException",
        "_maybe_run_in_function",
        "_raise_exception_fn",
        "_merge_raises_fn",
        "_call_raises_fn",
        "_merge_call_raises_fn",
        "_call_merge_raises_fn",
        "_merge_call_merge_raises_fn",
        "_events_from_logdir",
        "create_variable_like_keras_layer",
        "is_optimizer_v2_instance",
        "DistributionTestBase",
        "OneDeviceDistributionTestBase",
        "TwoDeviceDistributionTestBase",
        "RemoteSingleWorkerMirroredStrategyBase",
        "_all_sum",
        "_all_mean",
        "_test_minimize_loss_eager",
        "_test_minimize_loss_graph",
        "_test_summary_for_replica_zero_only",
        "_test_replica_id",
        "_test_call_and_merge_exceptions",
        "_input_fn_to_test_input_context",
        "_test_input_fn_iterable",
        "_test_input_fn_iterator",
        "_test_global_step_update",
        "_test_numpy_dataset",
        "_test_trainable_variable",
        "_test_run",
        "_test_all_reduce_sum",
        "_test_all_reduce_sum_gradients",
        "_test_all_reduce_sum_gradient_tape",
        "_test_all_reduce_mean",
        "_test_all_reduce_mean_gradients",
        "_test_all_reduce_mean_gradient_tape",
        "_test_collective_comms",
        "_test_collective_comms_gradients",
        "_test_collective_comms_gradient_tape",
        "_test_device_and_input_device_are_colocated",
        "_test_device_and_input_device_are_colocated_with_function",
        "_test_run",
        "_test_all_reduce_sum",
        "_test_all_reduce_sum_gradients",
        "_test_all_reduce_sum_gradient_tape",
        "_test_all_reduce_mean",
        "_test_all_reduce_mean_gradients",
        "_test_all_reduce_mean_gradient_tape",
        "_test_collective_comms",
        "_test_collective_comms_gradients",
        "_test_collective_comms_gradient_tape",
        "_get_num_gpus",
        "_testNumReplicasInSync",
        "_testMinimizeLoss",
        "_testDeviceScope",
        "_testMakeInputFnIteratorWithDataset",
        "_testMakeInputFnIteratorWithCallable",
        "run_fn",
        "_input_fn",
        "step",
        "step",
        "step",
        "step",
        "fn",
        "loss",
        "update",
        "step",
        "loss",
        "update",
        "step",
        "mark_devices_fn",
        "model_fn",
        "run_and_concatenate"
    ],
    "tpu_strategy": [
        "maybe_init_scope",
        "validate_run_function",
        "TPUStrategyV2",
        "TPUStrategy",
        "TPUStrategyV1",
        "TPUExtended",
        "_TPUReplicaContext",
        "_set_last_step_outputs",
        "run",
        "experimental_assign_to_logical_device",
        "experimental_split_to_logical_devices",
        "experimental_replicate_to_logical_devices",
        "run",
        "cluster_resolver",
        "steps_per_run",
        "run",
        "_validate_colocate_with_variable",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_make_numpy_dataset",
        "_get_input_workers",
        "_check_spec",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_experimental_run_steps_on_iterator",
        "_call_for_each_replica",
        "experimental_logical_device",
        "_experimental_initialize_system",
        "_create_variable",
        "_gather_to_implementation",
        "_broadcast_output",
        "_reduce_to",
        "_update",
        "read_var",
        "_local_results",
        "value_container",
        "_broadcast_to",
        "num_hosts",
        "num_replicas_per_host",
        "_num_replicas_in_sync",
        "experimental_between_graph",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "worker_devices",
        "parameter_devices",
        "non_slot_devices",
        "_update_non_slot",
        "_configure",
        "_update_config_proto",
        "_global_batch_size",
        "tpu_run",
        "_tpu_function_creator",
        "_in_multi_worker_mode",
        "_get_local_replica_id",
        "devices",
        "experimental_logical_device",
        "all_gather",
        "run_fn",
        "rewrite_fn",
        "_real_mirrored_creator",
        "tpu_function",
        "_all_to_all",
        "async_wait",
        "replicated_fn"
    ],
    "step_fn": [
        "Step",
        "StandardInputStep",
        "StandardSingleLossStep",
        "distribution",
        "initialize",
        "__call__",
        "initialize",
        "__call__",
        "step_fn"
    ],
    "central_storage_strategy": [
        "CentralStorageStrategy",
        "CentralStorageStrategyV1",
        "_from_num_gpus",
        "experimental_distribute_dataset",
        "experimental_local_results",
        "run",
        "reduce"
    ],
    "collective_all_reduce_strategy": [
        "CollectiveAllReduceStrategy",
        "_CollectiveAllReduceStrategyExperimentalMeta",
        "_CollectiveAllReduceStrategyExperimental",
        "CollectiveAllReduceStrategyV1",
        "CollectiveAllReduceExtended",
        "_from_local_devices",
        "cluster_resolver",
        "__instancecheck__",
        "_from_local_devices",
        "_initialize_strategy",
        "_initialize_local",
        "_initialize_multi_worker",
        "__del__",
        "_input_workers_with_options",
        "_input_workers",
        "_get_variable_creator_initial_value",
        "_make_input_context",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_configure",
        "_update_config_proto",
        "_get_cross_device_ops",
        "_gather_to_implementation",
        "_reduce_to",
        "_check_health",
        "_start_check_health_thread",
        "_stop_check_health_thread",
        "_warn_nccl_no_gpu",
        "_in_multi_worker_mode",
        "experimental_between_graph",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "_num_replicas_in_sync",
        "_global_batch_size",
        "_get_replica_id_in_sync_group",
        "_get_local_replica_id",
        "initial_value_fn"
    ],
    "distribute_coordinator": [
        "_TaskType",
        "CoordinatorMode",
        "_Barrier",
        "_get_num_workers",
        "_WorkerContext",
        "_run_single_worker",
        "_split_cluster_for_evaluator",
        "_run_std_server",
        "_run_between_graph_client",
        "_run_in_graph_client",
        "_configure_session_config_for_std_servers",
        "run_standard_tensorflow_server",
        "run_distribute_coordinator",
        "wait",
        "_debug_message",
        "__enter__",
        "__exit__",
        "_get_master_target",
        "_is_chief",
        "wait_for_other_workers",
        "session_creator",
        "session_config",
        "has_barrier",
        "distributed_mode",
        "cluster_spec",
        "task_type",
        "task_id",
        "master_target",
        "is_chief",
        "num_workers",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "_FakeServer",
        "start",
        "join"
    ],
    "distribute_lib": [
        "get_update_replica_id",
        "UpdateContext",
        "get_loss_reduction",
        "_require_cross_replica_or_default_context_extended",
        "_wrong_strategy_scope",
        "require_replica_context",
        "_require_strategy_scope_strategy",
        "_require_strategy_scope_extended",
        "_CurrentDistributionContext",
        "InputReplicationMode",
        "InputContext",
        "ValueContext",
        "RunOptions",
        "InputOptions",
        "StrategyBase",
        "Strategy",
        "StrategyV1",
        "StrategyExtendedV2",
        "StrategyExtendedV1",
        "ReplicaContextBase",
        "ReplicaContext",
        "ReplicaContextV1",
        "_batch_reduce_destination",
        "_DefaultDistributionStrategyV1",
        "_DefaultDistributionStrategy",
        "_DefaultDistributionContext",
        "_DefaultDistributionExtended",
        "_DefaultReplicaContext",
        "_from_proto_fn",
        "__enter__",
        "__exit__",
        "__enter__",
        "__exit__",
        "num_replicas_in_sync",
        "input_pipeline_id",
        "num_input_pipelines",
        "get_per_replica_batch_size",
        "__str__",
        "num_replicas_in_sync",
        "replica_id_in_sync_group",
        "__str__",
        "__new__",
        "__new__",
        "extended",
        "_scale_loss_for_estimator_enabled",
        "scope",
        "colocate_vars_with",
        "make_dataset_iterator",
        "make_input_fn_iterator",
        "experimental_run",
        "experimental_distribute_dataset",
        "distribute_datasets_from_function",
        "experimental_distribute_datasets_from_function",
        "run",
        "reduce",
        "unwrap",
        "experimental_local_results",
        "group",
        "num_replicas_in_sync",
        "configure",
        "update_config_proto",
        "__deepcopy__",
        "__copy__",
        "cluster_resolver",
        "experimental_distribute_values_from_function",
        "gather",
        "make_dataset_iterator",
        "make_input_fn_iterator",
        "experimental_make_numpy_dataset",
        "experimental_run",
        "reduce",
        "update_config_proto",
        "_container_strategy",
        "_scope",
        "_allow_variable_partition",
        "_create_variable",
        "variable_created_in_scope",
        "colocate_vars_with",
        "_validate_colocate_with_variable",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_reduce",
        "reduce_to",
        "_reduce_to",
        "batch_reduce_to",
        "_batch_reduce_to",
        "_gather_to",
        "_gather_to_implementation",
        "_batch_gather_to",
        "update",
        "_update",
        "_local_results",
        "value_container",
        "_group",
        "experimental_require_static_shapes",
        "_num_replicas_in_sync",
        "worker_devices",
        "parameter_devices",
        "_configure",
        "_update_config_proto",
        "_in_multi_worker_mode",
        "experimental_make_numpy_dataset",
        "_experimental_make_numpy_dataset",
        "broadcast_to",
        "_broadcast_to",
        "experimental_run_steps_on_iterator",
        "_experimental_run_steps_on_iterator",
        "call_for_each_replica",
        "_call_for_each_replica",
        "read_var",
        "update_non_slot",
        "_update_non_slot",
        "non_slot_devices",
        "experimental_between_graph",
        "experimental_should_init",
        "should_checkpoint",
        "should_save_summary",
        "__enter__",
        "__exit__",
        "merge_call",
        "_merge_call",
        "num_replicas_in_sync",
        "replica_id_in_sync_group",
        "_replica_id",
        "strategy",
        "devices",
        "all_reduce",
        "all_gather",
        "__deepcopy__",
        "__deepcopy__",
        "__enter__",
        "__exit__",
        "_scope",
        "colocate_vars_with",
        "variable_created_in_scope",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_make_numpy_dataset",
        "_broadcast_to",
        "_call_for_each_replica",
        "_reduce_to",
        "_gather_to_implementation",
        "_update",
        "_update_non_slot",
        "read_var",
        "_local_results",
        "value_container",
        "_num_replicas_in_sync",
        "worker_devices",
        "parameter_devices",
        "non_slot_devices",
        "_in_multi_worker_mode",
        "should_checkpoint",
        "should_save_summary",
        "_get_local_replica_id",
        "_get_replica_id_in_sync_group",
        "DefaultInputIterator",
        "_global_batch_size",
        "replica_id_in_sync_group",
        "mean_reduce_helper",
        "creator_with_resource_vars",
        "distributed_getter",
        "create_colocated_variable",
        "replica_id_is_zero",
        "batch_all_reduce",
        "batch_all_gather",
        "grad_wrapper",
        "creator",
        "get_next",
        "get_next_as_optional",
        "initialize",
        "initializer",
        "reduce_sum",
        "grad_wrapper",
        "grad",
        "mean_reduce_fn",
        "reduce_sum_fn"
    ],
    "distributed_file_utils": [
        "_get_base_dirpath",
        "_is_temp_dir",
        "_get_temp_dir",
        "write_dirpath",
        "remove_temp_dirpath",
        "write_filepath",
        "remove_temp_dir_with_filepath"
    ],
    "shared_variable_creator": [
        "_canonicalize_variable_name",
        "make_fn",
        "create_new_variable",
        "reuse_variable"
    ],
    "values_util": [
        "write_object_proto",
        "get_on_write_saveable",
        "get_on_write_restore_ops",
        "get_on_read_saveable",
        "get_on_read_restore_ops",
        "in_replica_update_context",
        "on_write_assign",
        "on_write_assign_add",
        "on_write_assign_sub",
        "assign_on_each_device",
        "on_read_assign_sub_cross_replica",
        "on_read_assign_add_cross_replica",
        "on_read_assign_cross_replica",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "get_current_replica_id_as_int",
        "assign_on_device",
        "assign_add_on_device",
        "assign_sub_on_device",
        "assert_replica_context",
        "apply_aggregation",
        "is_saving_non_distributed",
        "mark_as_unsaveable",
        "tensor",
        "tensor"
    ],
    "summary_op_util": [
        "collect",
        "clean_tag",
        "summary_scope"
    ],
    "estimator_training": [
        "_count_ps",
        "_count_worker",
        "_get_global_id",
        "_init_run_config_from_worker_context",
        "init_run_config",
        "should_run_distribute_coordinator",
        "train_and_evaluate",
        "estimator_train",
        "estimator_evaluate",
        "_worker_fn",
        "_eval_fn",
        "_worker_fn",
        "_worker_fn"
    ],
    "numpy_dataset": [
        "init_var_from_numpy",
        "one_host_numpy_dataset",
        "SingleDevice",
        "create_colocated_variable"
    ],
    "distribution_strategy_context": [
        "_ThreadMode",
        "_CrossReplicaThreadMode",
        "_InReplicaThreadMode",
        "_push_per_thread_mode",
        "_pop_per_thread_mode",
        "_DefaultReplicaThreadMode",
        "_get_per_thread_mode",
        "get_replica_context",
        "get_cross_replica_context",
        "in_cross_replica_context",
        "get_strategy",
        "has_strategy",
        "get_strategy_and_replica_context",
        "experimental_set_strategy",
        "enter_or_assert_strategy",
        "_assert_strategy",
        "_get_default_strategy",
        "_get_default_replica_context",
        "_get_default_replica_mode"
    ],
    "test_util": [
        "grappler_optimize",
        "tflite_convert",
        "evaluate_tflite_model"
    ],
    "parameter_server_strategy_v2": [
        "ParameterServerStrategyV2",
        "ParameterServerStrategyV2Extended",
        "_connect_to_cluster",
        "_verify_args_and_config",
        "_create_variable",
        "_create_variable_round_robin",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_call_for_each_replica",
        "_reduce",
        "init_shard_fn"
    ],
    "input_lib": [
        "get_distributed_dataset",
        "get_distributed_datasets_from_function",
        "DistributedIteratorInterface",
        "DistributedDatasetInterface",
        "InputWorkers",
        "_get_next_as_optional",
        "_is_statically_shaped",
        "DistributedIteratorBase",
        "DistributedIteratorV1",
        "DistributedIteratorSpec",
        "DistributedIterator",
        "_IterableInput",
        "DistributedDataset",
        "DistributedDatasetV1",
        "DistributedDatasetsFromFunction",
        "DistributedDatasetsFromFunctionV1",
        "InputFunctionIterator",
        "DatasetIterator",
        "_dummy_tensor_fn",
        "_recover_shape_fn",
        "_SingleWorkerDatasetIteratorBase",
        "_SingleWorkerDatasetIteratorSpec",
        "_SingleWorkerOwnedDatasetIterator",
        "_SingleWorkerDatasetIterator",
        "_SingleWorkerCallableIterator",
        "_create_iterators_per_worker",
        "_create_datasets_from_function_with_input_context",
        "_get_batched_dataset",
        "_get_batched_dataset_attributes",
        "_get_dataset_attributes",
        "_should_use_multi_device_iterator",
        "MultiStepContext",
        "_create_distributed_tensor_spec",
        "_replace_per_replica_spec",
        "_enable_get_next_as_optional",
        "_create_per_replica",
        "_always_wrap",
        "_rebatch_as_dynamic",
        "get_next",
        "element_spec",
        "get_next_as_optional",
        "__iter__",
        "element_spec",
        "reduce",
        "num_workers",
        "worker_devices",
        "compute_devices_for_worker",
        "__repr__",
        "serialize",
        "deserialize",
        "next",
        "__next__",
        "__iter__",
        "get_next_as_optional",
        "get_next",
        "_initializer",
        "initialize",
        "initializer",
        "output_classes",
        "output_shapes",
        "output_types",
        "get_iterator",
        "element_spec",
        "value_type",
        "_serialize",
        "_deserialize",
        "most_specific_compatible_type",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "_with_tensor_ranks_only",
        "element_spec",
        "_type_spec",
        "__iter__",
        "reduce",
        "_make_rebatch_fn",
        "__iter__",
        "element_spec",
        "make_one_shot_iterator",
        "_make_one_shot_iterator",
        "make_initializable_iterator",
        "_make_initializable_iterator",
        "_get_iterator",
        "__iter__",
        "__iter__",
        "element_spec",
        "_make_initializable_iterator",
        "_make_one_shot_iterator",
        "_get_iterator",
        "__iter__",
        "create_dummy_tensor",
        "_make_iterator",
        "_format_data_list_with_options",
        "get_next",
        "get_next_as_list_static_shapes",
        "get_next_as_list",
        "value_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "_make_iterator",
        "element_spec",
        "_type_spec",
        "output_classes",
        "output_shapes",
        "output_types",
        "_make_iterator",
        "initialize",
        "output_classes",
        "output_shapes",
        "output_types",
        "get_next",
        "get_next_as_list_static_shapes",
        "get_next_as_list",
        "initialize",
        "last_step_outputs",
        "_set_last_step_outputs",
        "set_last_step_output",
        "non_tensor_outputs",
        "set_non_tensor_output",
        "_get_value_per_replica",
        "_rebatch",
        "return_none",
        "out_of_range_fn",
        "cond",
        "loop_body",
        "rebatch_fn",
        "merge_fn",
        "merge_fn",
        "apply_rebatch",
        "apply_legacy_rebatch"
    ],
    "device_util": [
        "canonicalize",
        "resolve",
        "_FakeNodeDef",
        "_FakeOperation",
        "current",
        "get_host_for_device",
        "local_devices_from_num_gpus",
        "_set_device",
        "_set_device_from_string"
    ],
    "ps_values": [
        "AggregatingVariable",
        "_tensor_conversion_aggregate",
        "__deepcopy__",
        "get",
        "distribute_strategy",
        "__getattr__",
        "_assign_func",
        "assign_sub",
        "assign_add",
        "assign",
        "initializer",
        "initialized_value",
        "initial_value",
        "op",
        "read_value",
        "eval",
        "graph",
        "device",
        "shape",
        "aggregation",
        "synchronization",
        "name",
        "trainable",
        "dtype",
        "_gather_saveables_for_checkpoint",
        "_map_resources",
        "__add__",
        "__radd__",
        "__sub__",
        "__rsub__",
        "__mul__",
        "__rmul__",
        "__truediv__",
        "__rtruediv__",
        "__floordiv__",
        "__rfloordiv__",
        "__mod__",
        "__rmod__",
        "__lt__",
        "__le__",
        "__gt__",
        "__ge__",
        "__and__",
        "__rand__",
        "__or__",
        "__ror__",
        "__xor__",
        "__rxor__",
        "__getitem__",
        "__pow__",
        "__rpow__",
        "__invert__",
        "__neg__",
        "__abs__",
        "__div__",
        "__rdiv__",
        "__matmul__",
        "__rmatmul__",
        "__str__",
        "__repr__",
        "_should_act_as_resource_variable",
        "_dense_var_to_tensor",
        "merge_fn"
    ],
    "multi_worker_test_base": [
        "pick_unused_port",
        "_create_cluster",
        "create_in_process_cluster",
        "MultiProcessCluster",
        "create_multi_process_cluster",
        "create_cluster_spec",
        "skip_if_grpc_server_cant_be_started",
        "MultiWorkerTestBase",
        "SingleWorkerTestBaseGraph",
        "SingleWorkerTestBaseEager",
        "DummySession",
        "MockOsEnv",
        "IndependentWorkerTestBase",
        "MultiWorkerMultiProcessTest",
        "get_tf_config_task",
        "get_tf_config_cluster_spec",
        "get_task_type",
        "get_task_index",
        "is_chief",
        "start",
        "stop",
        "kill_task",
        "start_task",
        "cluster_resolver",
        "setUpClass",
        "setUp",
        "session",
        "cached_session",
        "_create_config",
        "_run_client",
        "_run_between_graph_clients",
        "setUpClass",
        "setUp",
        "cached_session",
        "__enter__",
        "__exit__",
        "get",
        "__getitem__",
        "__setitem__",
        "__iter__",
        "__len__",
        "_make_mock_run_std_server",
        "setUp",
        "tearDown",
        "_task_thread",
        "_run_task_in_thread",
        "run_multiple_tasks_in_threads",
        "join_independent_workers",
        "_run_task_in_process",
        "run_multiple_tasks_in_processes",
        "join_independent_workers",
        "stream_stderr",
        "task_function",
        "wrapped_client_fn",
        "_mock_run_std_server",
        "_stream_stderr_single_process"
    ],
    "input_ops": [
        "auto_shard_dataset",
        "_clone_dataset",
        "_get_op_def",
        "_clone_helper"
    ],
    "one_device_strategy": [
        "OneDeviceStrategy",
        "OneDeviceStrategyV1",
        "OneDeviceExtended",
        "_OneDeviceReplicaContext",
        "experimental_distribute_dataset",
        "distribute_datasets_from_function",
        "experimental_local_results",
        "run",
        "reduce",
        "scope",
        "_input_workers_with_options",
        "_input_workers",
        "_create_variable",
        "_validate_colocate_with_variable",
        "_make_dataset_iterator",
        "_make_input_fn_iterator",
        "_experimental_make_numpy_dataset",
        "_broadcast_to",
        "_experimental_distribute_dataset",
        "_distribute_datasets_from_function",
        "_experimental_distribute_values_from_function",
        "_experimental_run_steps_on_iterator",
        "_call_for_each_replica",
        "_reduce_to",
        "_gather_to_implementation",
        "_update",
        "_update_non_slot",
        "read_var",
        "_local_results",
        "value_container",
        "_in_multi_worker_mode",
        "_num_replicas_in_sync",
        "worker_devices",
        "parameter_devices",
        "non_slot_devices",
        "experimental_should_init",
        "experimental_between_graph",
        "should_checkpoint",
        "should_save_summary",
        "_global_batch_size",
        "_support_per_replica_values",
        "_get_local_replica_id",
        "devices",
        "body"
    ],
    "tpu_values": [
        "_maybe_enter_graph",
        "_maybe_on_device",
        "_make_raw_assign_fn",
        "TPUVariableMixin",
        "enclosing_tpu_context",
        "TPUDistributedVariable",
        "TPUMirroredVariable",
        "TPUSyncOnReadVariable",
        "assign_sub",
        "assign_add",
        "assign",
        "TPUAutoPolicy",
        "TPUOnWritePolicy",
        "TPUOnReadPolicy",
        "assign_fn",
        "__getattr__",
        "get",
        "_get_as_operand",
        "_is_mirrored",
        "handle",
        "device",
        "_read_variable_op",
        "read_value",
        "value",
        "_as_graph_element",
        "op",
        "_dense_var_to_tensor",
        "_is_mirrored",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "_is_mirrored",
        "assign_sub",
        "assign_add",
        "assign",
        "_is_mirrored",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "_is_mirrored",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "_is_mirrored",
        "assign_sub",
        "assign_add",
        "assign",
        "_is_mirrored",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update"
    ],
    "collective_util": [
        "CommunicationImplementation",
        "_OptionsExported",
        "Options",
        "Hints",
        "__new__",
        "merge",
        "__new__"
    ],
    "all_reduce": [
        "_flatten_tensors",
        "_reshape_tensors",
        "_padded_split",
        "_strip_padding",
        "_ragged_split",
        "_ring_permutations",
        "build_ring_all_reduce",
        "_build_ring_gather",
        "_apply_unary_to_chunks",
        "_build_ring_scatter",
        "build_recursive_hd_all_reduce",
        "_build_recursive_hd_gather",
        "_build_recursive_hd_scatter",
        "build_shuffle_all_reduce",
        "_build_shuffle_gather",
        "_build_shuffle_scatter",
        "_split_by_task",
        "build_nccl_all_reduce",
        "_build_nccl_hybrid",
        "_reduce_non_singleton",
        "build_nccl_then_ring",
        "build_nccl_then_recursive_hd",
        "build_nccl_then_shuffle",
        "_build_shuffle_hybrid",
        "build_shuffle_then_ring",
        "build_shuffle_then_shuffle",
        "upper_builder",
        "upper_level_f",
        "upper_level_f",
        "upper_builder",
        "upper_level_f",
        "upper_builder",
        "upper_level_f"
    ],
    "multi_worker_util": [
        "normalize_cluster_spec",
        "_validate_cluster_spec",
        "is_chief",
        "collective_leader",
        "worker_count",
        "id_in_cluster",
        "should_save_checkpoint",
        "should_load_checkpoint",
        "wait_for_other_workers",
        "has_worker_context"
    ],
    "multi_process_runner": [
        "MultiProcessRunner",
        "_Process",
        "_ProcFunc",
        "_shutdown_all_pool_runners",
        "is_oss",
        "MultiProcessPoolRunner",
        "_pool_runner_worker",
        "_run_contained",
        "SubprocessTimeoutError",
        "UnexpectedSubprocessExitError",
        "NotInitializedError",
        "_set_tf_config",
        "run",
        "get_barrier",
        "manager",
        "test_main",
        "set_args",
        "_continuously_readline_from_sub",
        "_start_subprocess_and_reading_thread",
        "start",
        "start_in_process_as",
        "start_single_process",
        "_queue_to_list",
        "_get_process_statuses",
        "get_process_id",
        "get_process_exit_code",
        "process_exists",
        "_process_watchdog",
        "_reraise_if_subprocess_error",
        "join",
        "_get_mpr_result",
        "terminate",
        "_terminate_all",
        "terminate_all",
        "_run_with_setenv",
        "_runtime_mode",
        "_message_checking_func",
        "_close_streaming",
        "__call__",
        "__del__",
        "shutdown",
        "_start",
        "run",
        "handler"
    ],
    "sharded_variable": [
        "Partitioner",
        "FixedShardsPartitioner",
        "MinSizePartitioner",
        "MaxSizePartitioner",
        "ShardedVariableSpec",
        "ShardedVariableMixin",
        "ShardedVariable",
        "_var_to_tensor",
        "embedding_lookup",
        "__call__",
        "__call__",
        "__call__",
        "__call__",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "__iter__",
        "_type_spec",
        "variables",
        "name",
        "dtype",
        "shape",
        "assign",
        "assign_add",
        "assign_sub",
        "_gather_saveables_for_checkpoint",
        "_map_resources",
        "_type_spec",
        "_saveable_factory"
    ],
    "combinations": [
        "keras_mode_combinations",
        "keras_model_type_combinations",
        "keras_tensor_combinations",
        "KerasModeCombination",
        "KerasModelTypeCombination",
        "KerasTensorCombination",
        "context_managers",
        "parameter_modifiers",
        "context_managers",
        "parameter_modifiers",
        "context_managers",
        "parameter_modifiers"
    ],
    "mirrored_run": [
        "call_for_each_replica",
        "_enter_graph",
        "_cpu_device",
        "_RequestedStop",
        "_call_for_each_replica",
        "_MirroredReplicaThread",
        "_MirroredReplicaContext",
        "run",
        "record_thread_local_summary_state",
        "restore_thread_local_summary_state",
        "record_thread_local_eager_context_state",
        "restore_thread_local_eager_context_state",
        "_merge_call",
        "devices"
    ],
    "single_loss_example": [
        "single_loss_example",
        "minimize_loss_example",
        "batchnorm_example",
        "dataset_fn",
        "loss_fn",
        "dataset_fn",
        "model_fn",
        "dataset_fn",
        "model_fn",
        "loss_fn",
        "loss_fn"
    ],
    "packed_distributed_variable": [
        "PackedDistributedVariable",
        "PackedVarAndDevice",
        "_tensor_conversion_packed_var_and_device",
        "devices",
        "on_device",
        "get_var_on_device",
        "get_var_on_current_device",
        "initial_value",
        "handle",
        "packed_handle",
        "_read_variable_op",
        "value",
        "is_initialized",
        "_update",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "_dense_var_to_tensor",
        "__getattr__",
        "var",
        "value",
        "read_value",
        "initial_value",
        "initialized_value",
        "device",
        "handle",
        "op",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_mul",
        "scatter_div",
        "scatter_min",
        "scatter_max",
        "scatter_update",
        "_dense_var_to_tensor",
        "_as_graph_element"
    ],
    "strategy_combinations": [
        "_version_chooser",
        "_get_tpu_strategy_creator",
        "_get_multi_worker_mirrored_creator",
        "set_virtual_cpus_to_at_least",
        "strategy_minus_tpu_combinations",
        "tpu_strategy_combinations",
        "all_strategy_combinations",
        "all_strategy_minus_default_and_tpu_combinations",
        "all_strategy_combinations_minus_default",
        "creator",
        "_create_tpu_strategy",
        "_create_multi_worker_mirrored"
    ],
    "distribute_utils": [
        "regroup",
        "select_replica",
        "select_replica_mirrored",
        "update_regroup",
        "value_container",
        "is_distributed_variable",
        "_validate_colocate_extended",
        "validate_colocate_distributed_variable",
        "validate_colocate",
        "_get_and_validate_synchronization",
        "_validate_aggregation",
        "_get_variable_policy_class",
        "create_mirrored_variable",
        "is_mirrored",
        "is_sync_on_read",
        "_get",
        "_get_mirrored",
        "_make_grouped_mirrored"
    ],
    "revived_types": [
        "VersionedTypeRegistration",
        "register_revived_type",
        "serialize",
        "deserialize",
        "registered_identifiers",
        "get_setter",
        "to_proto",
        "from_proto",
        "should_load"
    ],
    "main_op_impl": [
        "main_op",
        "main_op_with_restore"
    ],
    "load_options": [
        "LoadOptions"
    ],
    "load": [
        "load",
        "_read_legacy_metadata",
        "_generate_object_paths",
        "_is_graph_network",
        "KerasObjectLoader",
        "_finalize_saved_model_layers",
        "_unable_to_call_layer_due_to_serialization_issue",
        "_finalize_config_layers",
        "_finalize_metric",
        "_restore_layer_unconditional_losses",
        "_restore_layer_activation_loss",
        "revive_custom_object",
        "_restore_layer_metrics",
        "RevivedLayer",
        "_revive_setter",
        "RevivedInputLayer",
        "recursively_deserialize_keras_object",
        "infer_inputs_from_restored_call_function",
        "RevivedNetwork",
        "_set_network_attributes_from_metadata",
        "_maybe_add_serialized_attributes",
        "_get_keras_attr",
        "del_tracking",
        "_add_children_recreated_from_config",
        "load_layers",
        "_load_layer",
        "_revive_from_config",
        "_revive_graph_network",
        "_revive_layer_from_config",
        "_revive_metric_from_config",
        "_try_build_layer",
        "_load_edges",
        "get_path",
        "finalize_objects",
        "_unblock_model_reconstruction",
        "_reconstruct_all_models",
        "_reconstruct_model",
        "_get_child_layer_node_ids",
        "_search_for_child_node",
        "_infer_inputs",
        "_config_node_setter",
        "_init_from_metadata",
        "keras_api",
        "get_config",
        "_init_from_metadata",
        "get_config",
        "common_spec",
        "_init_from_metadata",
        "setattr_wrapper"
    ],
    "signature_def_utils_impl": [
        "build_signature_def",
        "regression_signature_def",
        "classification_signature_def",
        "predict_signature_def",
        "supervised_train_signature_def",
        "supervised_eval_signature_def",
        "_supervised_signature_def",
        "is_valid_signature",
        "_is_valid_predict_signature",
        "_is_valid_regression_signature",
        "_is_valid_classification_signature",
        "op_signature_def",
        "load_op_from_signature_def"
    ],
    "save_options": [
        "VariablePolicy",
        "SaveOptions",
        "_validate_namespace_whitelist",
        "_save_variable_devices",
        "_expand_distributed_variables",
        "from_obj"
    ],
    "save_context": [
        "SaveContext",
        "save_context",
        "in_save_context",
        "get_save_options",
        "options",
        "enter_save_context",
        "exit_save_context",
        "in_save_context"
    ],
    "function_deserialization": [
        "_is_tensor",
        "_call_concrete_function",
        "_try_convert_to_tensor_spec",
        "_concrete_function_callable_with",
        "_deserialize_function_spec_as_nonmethod",
        "setup_bare_concrete_function",
        "RestoredFunction",
        "recreate_function",
        "load_function_def_library",
        "_restore_gradient_functions",
        "_sort_function_defs",
        "fix_node_def",
        "_fix_fdef",
        "_list_function_deps",
        "_clean_function_name",
        "_list_all_concrete_functions_for_serialization",
        "_defun_with_scope",
        "restored_function_body",
        "_pretty_format_positional"
    ],
    "load_context": [
        "LoadContext",
        "load_context",
        "get_load_options",
        "set_load_options",
        "clear_load_options",
        "load_options"
    ],
    "loader_impl": [
        "parse_saved_model_with_debug_info",
        "parse_saved_model",
        "get_asset_tensors",
        "_get_main_op_tensor",
        "_get_op_from_collection",
        "_get_op_from_signature_def",
        "get_init_op",
        "get_train_op",
        "maybe_saved_model_directory",
        "contains_saved_model",
        "load",
        "SavedModelLoader",
        "export_dir",
        "variables_path",
        "saved_model",
        "get_meta_graph_def_from_tags",
        "load_graph",
        "restore_variables",
        "run_init_ops",
        "load"
    ],
    "utils_impl": [
        "build_tensor_info",
        "build_tensor_info_internal",
        "_build_composite_tensor_info_internal",
        "build_tensor_info_from_op",
        "get_tensor_from_tensor_info",
        "get_element_from_tensor_info",
        "get_or_create_variables_dir",
        "get_variables_dir",
        "get_variables_path",
        "get_or_create_assets_dir",
        "get_assets_dir",
        "get_or_create_debug_dir",
        "get_saved_model_pbtxt_path",
        "get_saved_model_pb_path",
        "get_debug_dir",
        "_get_tensor"
    ],
    "method_name_updater": [
        "MethodNameUpdater",
        "replace_method_name",
        "save"
    ],
    "nested_structure_coder": [
        "NotEncodableError",
        "StructureCoder",
        "_ListCodec",
        "_is_tuple",
        "_is_named_tuple",
        "_TupleCodec",
        "_DictCodec",
        "_NamedTupleCodec",
        "_Float64Codec",
        "_Int64Codec",
        "_StringCodec",
        "_NoneCodec",
        "_BoolCodec",
        "_TensorShapeCodec",
        "_TensorTypeCodec",
        "_TensorSpecCodec",
        "_BoundedTensorSpecCodec",
        "_TypeSpecCodec",
        "register_codec",
        "_get_encoders",
        "_get_decoders",
        "_map_structure",
        "encode_structure",
        "can_encode",
        "decode_proto",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode",
        "can_encode",
        "do_encode",
        "can_decode",
        "do_decode"
    ],
    "save": [
        "save"
    ],
    "load_v1_in_v2": [
        "_Initializer",
        "_EagerSavedModelLoader",
        "load",
        "_create_resource",
        "_initialize",
        "get_meta_graph_def_from_tags",
        "load_graph",
        "_extract_saver_restore",
        "restore_variables",
        "_extract_signatures",
        "load"
    ],
    "simple_save": [
        "simple_save"
    ],
    "builder_impl": [
        "_SavedModelBuilder",
        "SavedModelBuilder",
        "_maybe_save_assets",
        "get_asset_filename_to_add",
        "_get_unique_asset_filename",
        "_asset_path_from_tensor",
        "_add_asset_to_metagraph",
        "copy_assets_to_destination_dir",
        "_add_asset_to_collection",
        "_add_op_to_signature_def_map",
        "_save_and_write_assets",
        "_tag_and_add_meta_graph",
        "_validate_tensor_info",
        "_validate_signature_def_map",
        "_maybe_create_saver",
        "add_meta_graph",
        "add_meta_graph_and_variables",
        "save",
        "_add_collections",
        "_save_and_write_assets",
        "_maybe_add_main_op",
        "_add_train_op",
        "add_meta_graph",
        "add_meta_graph_and_variables"
    ],
    "signature_serialization": [
        "_get_signature",
        "_valid_signature",
        "_validate_inputs",
        "find_function_to_export",
        "canonicalize_signatures",
        "_normalize_outputs",
        "_SignatureMap",
        "create_signature_map",
        "validate_saveable_view",
        "_add_signature",
        "__getitem__",
        "__iter__",
        "__len__",
        "__repr__",
        "_list_functions_for_serialization",
        "signature_wrapper"
    ],
    "function_serialization": [
        "_serialize_function_spec",
        "serialize_concrete_function",
        "serialize_bare_concrete_function",
        "serialize_function",
        "wrap_cached_variables",
        "wrap_function"
    ],
    "tf_stack": [
        "StackTraceTransform",
        "StackTraceMapper",
        "StackTraceFilter",
        "CurrentModuleFilter",
        "extract_stack",
        "__enter__",
        "__exit__",
        "reset",
        "reset",
        "get_effective_source_map",
        "reset",
        "get_filtered_filenames",
        "get_filtered_filenames"
    ],
    "keras_deps": [
        "register_call_context_function",
        "get_call_context_function"
    ],
    "decorator_utils": [
        "get_qualified_name",
        "_normalize_docstring",
        "add_notice_to_docstring",
        "validate_callable",
        "classproperty",
        "__get__"
    ],
    "all_util": [
        "make_all",
        "reveal_undocumented",
        "remove_undocumented"
    ],
    "memory": [
        "dismantle_ordered_dict"
    ],
    "lock_util": [
        "GroupLock",
        "group",
        "acquire",
        "release",
        "_another_group_active",
        "_validate_group_id",
        "_Context",
        "__enter__",
        "__exit__"
    ],
    "module_wrapper": [
        "get_rename_v2",
        "_call_location",
        "contains_deprecation_decorator",
        "has_deprecation_decorator",
        "TFModuleWrapper",
        "_tfmw_add_deprecation_warning",
        "_tfmw_import_module",
        "__getattribute__",
        "__getattr__",
        "__setattr__",
        "__dir__",
        "__delattr__",
        "__repr__",
        "__reduce__"
    ],
    "tf_decorator": [
        "make_decorator",
        "_has_tf_decorator_attr",
        "rewrap",
        "unwrap",
        "TFDecorator",
        "__get__",
        "__call__",
        "decorated_target",
        "decorated_target",
        "decorator_name",
        "decorator_doc",
        "decorator_argspec"
    ],
    "tf_inspect": [
        "_convert_maybe_argspec_to_fullargspec",
        "currentframe",
        "getargspec",
        "_get_argspec_for_partial",
        "getfullargspec",
        "getcallargs",
        "getframeinfo",
        "getdoc",
        "getfile",
        "getmembers",
        "getmodule",
        "getmro",
        "getsource",
        "getsourcefile",
        "getsourcelines",
        "isbuiltin",
        "isclass",
        "isfunction",
        "isframe",
        "isgenerator",
        "isgeneratorfunction",
        "ismethod",
        "ismodule",
        "isroutine",
        "stack",
        "_getargspec",
        "_getfullargspec"
    ],
    "keyword_args": [
        "keyword_args_only",
        "new_func"
    ],
    "compat_internal": [
        "path_to_str"
    ],
    "serialization": [
        "populate_deserializable_objects",
        "serialize",
        "deserialize"
    ],
    "tf_contextlib": [
        "contextmanager"
    ],
    "function_utils": [
        "_is_bound_method",
        "_is_callable_object",
        "fn_args",
        "has_kwargs",
        "get_func_name",
        "get_func_code",
        "get_disabled_rewriter_config"
    ],
    "tf_export": [
        "SymbolAlreadyExposedError",
        "InvalidSymbolNameError",
        "get_symbol_from_name",
        "get_canonical_name_for_symbol",
        "get_canonical_name",
        "get_v1_names",
        "get_v2_names",
        "get_v1_constants",
        "get_v2_constants",
        "api_export",
        "kwarg_only",
        "_validate_symbol_names",
        "__call__",
        "set_attr",
        "export_constant",
        "wrapper"
    ],
    "compat": [
        "as_bytes",
        "as_text",
        "as_str",
        "as_str_any",
        "path_to_str",
        "path_to_bytes"
    ],
    "deprecation": [
        "DeprecatedNamesAlreadySet",
        "_add_deprecated_function_notice_to_docstring",
        "_add_deprecated_arg_notice_to_docstring",
        "_add_deprecated_arg_value_notice_to_docstring",
        "_validate_deprecation_args",
        "_call_location",
        "_wrap_decorator",
        "deprecated_alias",
        "deprecated_endpoints",
        "deprecated",
        "deprecated_args",
        "deprecated_arg_values",
        "deprecated_argument_lookup",
        "rewrite_argument_docstring",
        "silence",
        "HiddenTfApiAttribute",
        "wrapper",
        "deprecated_wrapper",
        "deprecated_wrapper",
        "_get_arg_names_to_ok_vals",
        "_get_deprecated_positional_arguments",
        "deprecated_wrapper",
        "deprecated_wrapper",
        "_NewClass",
        "new_func",
        "new_func",
        "_same_value",
        "new_func",
        "new_func",
        "raise_error"
    ],
    "tf_should_use": [
        "_TFShouldUseHelper",
        "_new__init__",
        "_new__setattr__",
        "_new__getattribute__",
        "_new_mark_used",
        "_get_wrapper",
        "_add_should_use_warning",
        "should_use_result",
        "sate",
        "_check_sated",
        "__del__",
        "decorated",
        "set_body",
        "wrapped"
    ],
    "object_identity": [
        "_ObjectIdentityWrapper",
        "_WeakObjectIdentityWrapper",
        "Reference",
        "ObjectIdentityDictionary",
        "ObjectIdentityWeakKeyDictionary",
        "ObjectIdentitySet",
        "ObjectIdentityWeakSet",
        "unwrapped",
        "_assert_type",
        "__lt__",
        "__gt__",
        "__eq__",
        "__ne__",
        "__hash__",
        "__repr__",
        "unwrapped",
        "deref",
        "_wrap_key",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__len__",
        "__iter__",
        "__repr__",
        "_wrap_key",
        "__len__",
        "__iter__",
        "_from_storage",
        "_wrap_key",
        "__contains__",
        "discard",
        "add",
        "update",
        "clear",
        "intersection",
        "difference",
        "__len__",
        "__iter__",
        "_wrap_key",
        "__len__",
        "__iter__"
    ],
    "example_parser_configuration": [
        "extract_example_parser_configuration",
        "_extract_from_parse_example",
        "_extract_from_parse_example_v2"
    ],
    "dispatch": [
        "OpDispatcher",
        "GlobalOpDispatcher",
        "dispatch",
        "_TypeBasedDispatcher",
        "dispatch_for_types",
        "add_dispatch_list",
        "add_dispatch_support",
        "handle",
        "register",
        "handle",
        "register",
        "_handles",
        "handle",
        "decorator",
        "wrapper"
    ],
    "nest": [
        "_sorted",
        "_sequence_like",
        "_yield_value",
        "assert_same_structure",
        "_packed_nest_with_indices",
        "pack_sequence_as",
        "map_structure",
        "_yield_flat_up_to",
        "assert_shallow_structure",
        "flatten_up_to",
        "map_structure_up_to"
    ],
    "lazy_loader": [
        "LazyLoader",
        "_load",
        "__getattr__",
        "__dir__"
    ],
    "user_ops": [
        "my_fact"
    ],
    "ops": [
        "tensor_id",
        "_UserDeviceSpec",
        "NullContextmanager",
        "_override_helper",
        "_as_graph_element",
        "is_dense_tensor_like",
        "uid",
        "numpy_text",
        "enable_tensor_equality",
        "disable_tensor_equality",
        "Tensor",
        "_EagerTensorBase",
        "convert_to_tensor_v1_with_dispatch",
        "convert_to_tensor_v1",
        "convert_to_tensor_v2_with_dispatch",
        "convert_to_tensor_v2",
        "_error_prefix",
        "pack_eager_tensors",
        "convert_to_tensor",
        "internal_convert_n_to_tensor",
        "convert_n_to_tensor",
        "convert_to_tensor_or_composite",
        "internal_convert_to_tensor_or_composite",
        "internal_convert_n_to_tensor_or_composite",
        "convert_n_to_tensor_or_composite",
        "_device_string",
        "_NodeDef",
        "_create_c_op",
        "Operation",
        "RegisterGradient",
        "no_gradient",
        "get_gradient_function",
        "set_shape_and_handle_data_for_outputs",
        "OpStats",
        "RegisterStatistics",
        "get_stats_for_node_def",
        "name_from_scope_name",
        "Graph",
        "device",
        "device_v2",
        "container",
        "_colocate_with_for_gradient",
        "colocate_with",
        "_colocate_with",
        "control_dependencies",
        "_DefaultStack",
        "default_session",
        "get_default_session",
        "_eval_using_default_session",
        "_run_using_default_session",
        "_DefaultGraphStack",
        "_get_outer_context_and_inner_device_stack",
        "init_scope",
        "executing_eagerly_outside_functions",
        "inside_function",
        "enable_eager_execution",
        "disable_eager_execution",
        "enable_eager_execution_internal",
        "eager_run",
        "reset_default_graph",
        "get_default_graph",
        "has_default_graph",
        "get_name_scope",
        "_assert_same_graph",
        "_get_graph_from_inputs",
        "GraphKeys",
        "dismantle_graph",
        "add_to_collection",
        "add_to_collections",
        "get_collection_ref",
        "get_collection",
        "get_all_collection_keys",
        "name_scope",
        "internal_name_scope_v1",
        "name_scope_v1",
        "name_scope_v2",
        "strip_name_scope",
        "prepend_name_scope",
        "op_scope",
        "register_proto_function",
        "get_collection_proto_type",
        "get_to_proto_function",
        "get_from_proto_function",
        "_op_to_colocate_with",
        "_is_keras_symbolic_tensor",
        "to_raw_op",
        "raise_from_not_ok_status",
        "add_exit_callback_to_default_func_graph",
        "_reconstruct_sequence_inputs",
        "_TensorIterator",
        "set_int_list_attr",
        "_get_enclosing_context",
        "string_merge",
        "__enter__",
        "__exit__",
        "_create_with_tf_output",
        "op",
        "dtype",
        "graph",
        "name",
        "device",
        "shape",
        "_c_api_shape",
        "_shape",
        "_shape",
        "_disallow_when_autograph_disabled",
        "_disallow_when_autograph_enabled",
        "_disallow_in_graph_mode",
        "_disallow_bool_casting",
        "_disallow_iteration",
        "__iter__",
        "_shape_as_list",
        "_shape_tuple",
        "_rank",
        "get_shape",
        "set_shape",
        "value_index",
        "consumers",
        "_as_node_def_input",
        "_as_tf_output",
        "__str__",
        "__repr__",
        "__hash__",
        "__copy__",
        "__array__",
        "__len__",
        "_override_operator",
        "__bool__",
        "__nonzero__",
        "eval",
        "experimental_ref",
        "ref",
        "__complex__",
        "__int__",
        "__long__",
        "__float__",
        "__index__",
        "__bool__",
        "__format__",
        "__reduce__",
        "__copy__",
        "__deepcopy__",
        "__str__",
        "__repr__",
        "__len__",
        "__array__",
        "_numpy_internal",
        "_numpy",
        "dtype",
        "numpy",
        "backing_device",
        "_datatype_enum",
        "_shape_tuple",
        "_rank",
        "_num_elements",
        "_copy_to_device",
        "_override_operator",
        "_copy_nograd",
        "_copy",
        "shape",
        "get_shape",
        "_shape_as_list",
        "ndim",
        "cpu",
        "gpu",
        "set_shape",
        "op",
        "graph",
        "name",
        "value_index",
        "consumers",
        "_add_consumer",
        "_as_node_def_input",
        "_as_tf_output",
        "eval",
        "grad_fun",
        "_control_flow_post_processing",
        "colocation_groups",
        "values",
        "_get_control_flow_context",
        "_set_control_flow_context",
        "name",
        "_id",
        "device",
        "_device_assignments",
        "_colocation_dict",
        "_output_types",
        "_tf_output",
        "_tf_input",
        "_set_device",
        "_set_device_from_string",
        "_update_input",
        "_add_while_inputs",
        "_add_control_inputs",
        "_add_control_input",
        "_remove_all_control_inputs",
        "_add_outputs",
        "__str__",
        "__repr__",
        "__tf_tensor__",
        "outputs",
        "inputs",
        "_input_types",
        "control_inputs",
        "_control_outputs",
        "type",
        "graph",
        "node_def",
        "op_def",
        "traceback",
        "_set_attr",
        "_set_attr_with_buf",
        "_set_func_attr",
        "_set_func_list_attr",
        "_set_type_list_attr",
        "_set_shape_list_attr",
        "_clear_attr",
        "get_attr",
        "_get_attr_type",
        "_get_attr_bool",
        "_get_attr_int",
        "run",
        "__call__",
        "statistic_type",
        "statistic_type",
        "value",
        "value",
        "__iadd__",
        "__call__",
        "_variable_creator_scope",
        "_variable_creator_stack",
        "_variable_creator_stack",
        "_check_not_finalized",
        "_add_op",
        "_c_graph",
        "version",
        "graph_def_versions",
        "seed",
        "seed",
        "finalized",
        "finalize",
        "_unsafe_unfinalize",
        "_get_control_flow_context",
        "_set_control_flow_context",
        "_copy_functions_to_graph_def",
        "_as_graph_def",
        "as_graph_def",
        "_is_function",
        "_get_function",
        "_add_function",
        "building_function",
        "create_op",
        "_create_op_internal",
        "_create_op_from_tf_operation",
        "_create_op_helper",
        "_add_new_tf_operations",
        "as_graph_element",
        "_as_graph_element_locked",
        "get_operations",
        "get_operation_by_name",
        "_get_operation_by_name_unsafe",
        "_get_operation_by_tf_operation",
        "get_tensor_by_name",
        "_get_tensor_by_tf_output",
        "_last_id",
        "_get_op_def",
        "as_default",
        "collections",
        "add_to_collection",
        "add_to_collections",
        "get_collection_ref",
        "get_collection",
        "get_all_collection_keys",
        "clear_collection",
        "_original_op",
        "_name_stack",
        "_name_stack",
        "name_scope",
        "unique_name",
        "get_name_scope",
        "_colocate_with_for_gradient",
        "colocate_with",
        "_add_device_to_stack",
        "device",
        "_apply_device_functions",
        "container",
        "_ControlDependenciesController",
        "_push_control_dependencies_controller",
        "_pop_control_dependencies_controller",
        "_current_control_dependencies",
        "_control_dependencies_for_inputs",
        "_record_op_seen_by_control_dependencies",
        "control_dependencies",
        "_attr_scope",
        "_kernel_label_map",
        "_override_gradient_function",
        "gradient_override_map",
        "prevent_feeding",
        "is_feedable",
        "prevent_fetching",
        "is_fetchable",
        "switch_to_thread_local",
        "_device_function_stack",
        "_device_functions_outer_to_inner",
        "_snapshot_device_function_stack_metadata",
        "_device_function_stack",
        "_colocation_stack",
        "_snapshot_colocation_stack_metadata",
        "_colocation_stack",
        "_control_dependencies_stack",
        "_control_dependencies_stack",
        "_distribution_strategy_stack",
        "_distribution_strategy_stack",
        "_global_distribute_strategy_scope",
        "_global_distribute_strategy_scope",
        "_mutation_lock",
        "_session_run_lock",
        "get_default",
        "reset",
        "is_cleared",
        "enforce_nesting",
        "enforce_nesting",
        "get_controller",
        "get_default",
        "_GetGlobalDefaultGraph",
        "reset",
        "get_controller",
        "VARIABLES",
        "name",
        "__enter__",
        "__exit__",
        "name",
        "__enter__",
        "__exit__",
        "name",
        "__enter__",
        "__exit__",
        "__getstate__",
        "__setstate__",
        "__iter__",
        "__next__",
        "__enter__",
        "__exit__",
        "control_inputs",
        "add_op",
        "op_in_group",
        "grad_fun",
        "combined",
        "_restore_name_scope"
    ],
    "auto_control_deps_utils": [
        "register_read_only_resource_op",
        "get_read_only_resource_input_indices_graph",
        "_get_read_only_resource_input_indices_op",
        "get_read_write_resource_inputs",
        "_op_writes_to_resource",
        "_input_index"
    ],
    "test_ops": [
        "a",
        "a_eager_fallback",
        "attr",
        "attr_eager_fallback",
        "attr_bool",
        "attr_bool_eager_fallback",
        "attr_bool_list",
        "attr_bool_list_eager_fallback",
        "attr_default",
        "attr_default_eager_fallback",
        "attr_empty_list_default",
        "attr_empty_list_default_eager_fallback",
        "attr_enum",
        "attr_enum_eager_fallback",
        "attr_enum_list",
        "attr_enum_list_eager_fallback",
        "attr_float",
        "attr_float_eager_fallback",
        "attr_list_default",
        "attr_list_default_eager_fallback",
        "attr_list_min",
        "attr_list_min_eager_fallback",
        "attr_list_type_default",
        "attr_list_type_default_eager_fallback",
        "attr_min",
        "attr_min_eager_fallback",
        "attr_partial_shape",
        "attr_partial_shape_eager_fallback",
        "attr_partial_shape_list",
        "attr_partial_shape_list_eager_fallback",
        "attr_shape",
        "attr_shape_eager_fallback",
        "attr_shape_list",
        "attr_shape_list_eager_fallback",
        "attr_type_default",
        "attr_type_default_eager_fallback",
        "b",
        "b_eager_fallback",
        "binary",
        "binary_eager_fallback",
        "complex_struct",
        "complex_struct_eager_fallback",
        "copy_op",
        "copy_op_eager_fallback",
        "default_attrs",
        "default_attrs_eager_fallback",
        "device_placement_op",
        "device_placement_op_eager_fallback",
        "dtype_with_default_op",
        "dtype_with_default_op_eager_fallback",
        "five_float_outputs",
        "five_float_outputs_eager_fallback",
        "float_input",
        "float_input_eager_fallback",
        "float_output",
        "float_output_eager_fallback",
        "float_output_string_output",
        "float_output_string_output_eager_fallback",
        "foo1",
        "foo1_eager_fallback",
        "foo2",
        "foo2_eager_fallback",
        "foo3",
        "foo3_eager_fallback",
        "func_attr",
        "func_attr_eager_fallback",
        "func_list_attr",
        "func_list_attr_eager_fallback",
        "graph_def_version",
        "graph_def_version_eager_fallback",
        "in_polymorphic_twice",
        "in_polymorphic_twice_eager_fallback",
        "int64_output",
        "int64_output_eager_fallback",
        "int_attr",
        "int_attr_eager_fallback",
        "int_input",
        "int_input_eager_fallback",
        "int_input_float_input",
        "int_input_float_input_eager_fallback",
        "int_input_int_output",
        "int_input_int_output_eager_fallback",
        "int_output",
        "int_output_eager_fallback",
        "int_output_float_output",
        "int_output_float_output_eager_fallback",
        "kernel_label",
        "kernel_label_eager_fallback",
        "kernel_label_required",
        "kernel_label_required_eager_fallback",
        "list_input",
        "list_input_eager_fallback",
        "list_output",
        "list_output_eager_fallback",
        "mixed_struct",
        "mixed_struct_eager_fallback",
        "n_in_polymorphic_twice",
        "n_in_polymorphic_twice_eager_fallback",
        "n_in_twice",
        "n_in_twice_eager_fallback",
        "n_in_two_type_variables",
        "n_in_two_type_variables_eager_fallback",
        "n_ints_in",
        "n_ints_in_eager_fallback",
        "n_ints_out",
        "n_ints_out_eager_fallback",
        "n_ints_out_default",
        "n_ints_out_default_eager_fallback",
        "n_polymorphic_in",
        "n_polymorphic_in_eager_fallback",
        "n_polymorphic_out",
        "n_polymorphic_out_eager_fallback",
        "n_polymorphic_out_default",
        "n_polymorphic_out_default_eager_fallback",
        "n_polymorphic_restrict_in",
        "n_polymorphic_restrict_in_eager_fallback",
        "n_polymorphic_restrict_out",
        "n_polymorphic_restrict_out_eager_fallback",
        "namespace_test_string_output",
        "namespace_test_string_output_eager_fallback",
        "none",
        "none_eager_fallback",
        "old",
        "old_eager_fallback",
        "op_with_default_attr",
        "op_with_default_attr_eager_fallback",
        "op_with_future_default_attr",
        "op_with_future_default_attr_eager_fallback",
        "out_t",
        "out_t_eager_fallback",
        "out_type_list",
        "out_type_list_eager_fallback",
        "out_type_list_restrict",
        "out_type_list_restrict_eager_fallback",
        "polymorphic",
        "polymorphic_eager_fallback",
        "polymorphic_default_out",
        "polymorphic_default_out_eager_fallback",
        "polymorphic_out",
        "polymorphic_out_eager_fallback",
        "ref_in",
        "ref_in_eager_fallback",
        "ref_input_float_input",
        "ref_input_float_input_eager_fallback",
        "ref_input_float_input_int_output",
        "ref_input_float_input_int_output_eager_fallback",
        "ref_input_int_input",
        "ref_input_int_input_eager_fallback",
        "ref_out",
        "ref_out_eager_fallback",
        "ref_output",
        "ref_output_eager_fallback",
        "ref_output_float_output",
        "ref_output_float_output_eager_fallback",
        "requires_older_graph_version",
        "requires_older_graph_version_eager_fallback",
        "reserved_attr",
        "reserved_attr_eager_fallback",
        "reserved_input",
        "reserved_input_eager_fallback",
        "resource_create_op",
        "resource_create_op_eager_fallback",
        "resource_initialized_op",
        "resource_initialized_op_eager_fallback",
        "resource_using_op",
        "resource_using_op_eager_fallback",
        "restrict",
        "restrict_eager_fallback",
        "simple",
        "simple_eager_fallback",
        "simple_struct",
        "simple_struct_eager_fallback",
        "string_list_attr",
        "string_list_attr_eager_fallback",
        "stub_resource_handle_op",
        "stub_resource_handle_op_eager_fallback",
        "test_attr",
        "test_attr_eager_fallback",
        "test_string_output",
        "test_string_output_eager_fallback",
        "two_float_inputs",
        "two_float_inputs_eager_fallback",
        "two_float_inputs_float_output",
        "two_float_inputs_float_output_eager_fallback",
        "two_float_inputs_int_output",
        "two_float_inputs_int_output_eager_fallback",
        "two_float_outputs",
        "two_float_outputs_eager_fallback",
        "two_int_inputs",
        "two_int_inputs_eager_fallback",
        "two_int_outputs",
        "two_int_outputs_eager_fallback",
        "two_refs_in",
        "two_refs_in_eager_fallback",
        "type_list",
        "type_list_eager_fallback",
        "type_list_restrict",
        "type_list_restrict_eager_fallback",
        "type_list_twice",
        "type_list_twice_eager_fallback",
        "unary",
        "unary_eager_fallback"
    ],
    "auto_control_deps": [
        "op_is_stateful",
        "ResourceType",
        "collective_manager_ids_from_op",
        "AutomaticControlDependencies",
        "register_acd_resource_resolver",
        "_get_resource_inputs",
        "automatic_control_dependencies",
        "mark_as_return",
        "__enter__",
        "_process_switch",
        "__exit__",
        "wrapper"
    ],
    "op_callbacks": [
        "add_op_callback",
        "should_invoke_op_callbacks",
        "remove_op_callback",
        "clear_op_callbacks",
        "invoke_op_callbacks"
    ],
    "graph_io": [
        "write_graph"
    ],
    "tfrt_utils": [
        "enabled"
    ],
    "op_def_library": [
        "_Attr",
        "_AttrValue",
        "_SatisfiesTypeConstraint",
        "_SatisfiesLengthConstraint",
        "_SatisfiesAllowedStringsConstraint",
        "_SatisfiesIntMinimumConstraint",
        "_IsListParameter",
        "_NumTypeFields",
        "_IsListValue",
        "_Flatten",
        "_Restructure",
        "_MakeFloat",
        "_MakeInt",
        "_MakeStr",
        "_MakeBool",
        "_MakeType",
        "_MakeShape",
        "_MakeTensor",
        "_MakeFunc",
        "_MaybeColocateWith",
        "apply_op",
        "_apply_op_helper",
        "value_to_attr_value"
    ],
    "random_seed": [
        "get_seed"
    ],
    "function_def_to_graph": [
        "function_def_to_graph",
        "is_function",
        "function_def_to_graph_def",
        "_get_num_args"
    ],
    "graph_to_function_def": [
        "_make_argname_from_tensor_name",
        "_tensor_to_argdef",
        "_is_in_placeholders",
        "_get_node_def",
        "_get_op_def",
        "_create_input_dict",
        "_add_op_node",
        "graph_to_function_def"
    ],
    "importer": [
        "_IsControlInput",
        "_ParseTensorName",
        "_MaybeDevice",
        "_ProcessGraphDefParam",
        "_ProcessInputMapParam",
        "_ProcessReturnElementsParam",
        "_FindAttrInOpDef",
        "_RemoveDefaultAttrs",
        "_ConvertInputMapValues",
        "_PopulateTFImportGraphDefOptions",
        "_ProcessNewOps",
        "_GetColocationNames",
        "_GatherReturnElements",
        "_SetDefaultAttrValues",
        "import_graph_def",
        "import_graph_def_for_function",
        "_import_graph_def_internal"
    ],
    "tensor_spec": [
        "DenseSpec",
        "TensorSpec",
        "BoundedTensorSpec",
        "from_spec",
        "shape",
        "dtype",
        "name",
        "is_compatible_with",
        "__repr__",
        "__hash__",
        "__eq__",
        "__ne__",
        "most_specific_compatible_type",
        "_serialize",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "is_compatible_with",
        "from_tensor",
        "_to_components",
        "_from_components",
        "_from_compatible_tensor_list",
        "_to_batchable_tensor_list",
        "_batch",
        "_unbatch",
        "from_spec",
        "minimum",
        "maximum",
        "__repr__",
        "__eq__",
        "__hash__",
        "__reduce__",
        "_serialize"
    ],
    "composite_tensor_utils": [
        "is_composite_or_composite_value",
        "get_shape",
        "_append_sparse_tensor_value",
        "_append_ragged_tensor_value",
        "append_composite_tensor"
    ],
    "dtypes": [
        "DType",
        "as_dtype",
        "_is_ref_dtype",
        "_as_ref",
        "base_dtype",
        "real_dtype",
        "as_numpy_dtype",
        "min",
        "max",
        "limits",
        "is_compatible_with",
        "__eq__",
        "__ne__",
        "__reduce__"
    ],
    "errors_impl": [
        "_compact_stack_trace",
        "InaccessibleTensorError",
        "OperatorNotAllowedInGraphError",
        "OpError",
        "CancelledError",
        "UnknownError",
        "InvalidArgumentError",
        "DeadlineExceededError",
        "NotFoundError",
        "AlreadyExistsError",
        "PermissionDeniedError",
        "UnauthenticatedError",
        "ResourceExhaustedError",
        "FailedPreconditionError",
        "AbortedError",
        "OutOfRangeError",
        "UnimplementedError",
        "InternalError",
        "UnavailableError",
        "DataLossError",
        "exception_type_from_error_code",
        "error_code_from_exception_type",
        "_make_specific_exception",
        "raise_exception_on_not_ok_status",
        "__reduce__",
        "message",
        "op",
        "error_code",
        "node_def",
        "__str__",
        "__enter__",
        "__exit__"
    ],
    "indexed_slices": [
        "IndexedSlices",
        "IndexedSlicesSpec",
        "convert_to_tensor_or_indexed_slices",
        "internal_convert_to_tensor_or_indexed_slices",
        "internal_convert_n_to_tensor_or_indexed_slices",
        "convert_n_to_tensor_or_indexed_slices",
        "_indexed_slices_to_tensor",
        "values",
        "indices",
        "dense_shape",
        "shape",
        "name",
        "device",
        "op",
        "dtype",
        "graph",
        "__str__",
        "__neg__",
        "_type_spec",
        "_shape_invariant_to_type_spec",
        "consumers",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components"
    ],
    "composite_tensor": [
        "CompositeTensor",
        "replace_composites_with_components",
        "_type_spec",
        "_shape_invariant_to_type_spec",
        "_consumers"
    ],
    "device": [
        "check_valid",
        "is_device_spec",
        "canonical_name",
        "merge_device",
        "MergeDevice",
        "__call__",
        "shortcut_string_merge",
        "__repr__",
        "is_null_merge"
    ],
    "common_shapes": [
        "_broadcast_shape_helper",
        "is_broadcast_compatible",
        "broadcast_shape"
    ],
    "load_library": [
        "load_op_library",
        "load_file_system_library",
        "_is_shared_object",
        "load_library",
        "register_filesystem_plugin"
    ],
    "registry": [
        "Registry",
        "register",
        "list",
        "lookup"
    ],
    "config": [
        "tensor_float_32_execution_enabled",
        "enable_tensor_float_32_execution",
        "get_intra_op_parallelism_threads",
        "set_intra_op_parallelism_threads",
        "get_inter_op_parallelism_threads",
        "set_inter_op_parallelism_threads",
        "get_optimizer_jit",
        "set_optimizer_jit",
        "get_optimizer_experimental_options",
        "set_optimizer_experimental_options",
        "get_soft_device_placement",
        "set_soft_device_placement",
        "get_device_policy",
        "set_device_policy",
        "get_synchronous_execution",
        "set_synchronous_execution",
        "list_physical_devices",
        "list_logical_devices",
        "get_visible_devices",
        "set_visible_devices",
        "get_memory_usage",
        "get_memory_growth",
        "set_memory_growth",
        "get_device_details",
        "get_logical_device_configuration",
        "set_logical_device_configuration",
        "enable_mlir_bridge",
        "enable_mlir_graph_optimization",
        "disable_mlir_bridge",
        "disable_mlir_graph_optimization"
    ],
    "tensor_shape": [
        "enable_v2_tensorshape",
        "disable_v2_tensorshape",
        "dimension_value",
        "dimension_at_index",
        "Dimension",
        "as_dimension",
        "TensorShape",
        "as_shape",
        "unknown_shape",
        "__repr__",
        "__str__",
        "__eq__",
        "__ne__",
        "__int__",
        "__long__",
        "__index__",
        "value",
        "is_compatible_with",
        "assert_is_compatible_with",
        "merge_with",
        "__add__",
        "__radd__",
        "__sub__",
        "__rsub__",
        "__mul__",
        "__rmul__",
        "__floordiv__",
        "__rfloordiv__",
        "__div__",
        "__rdiv__",
        "__truediv__",
        "__rtruediv__",
        "__mod__",
        "__rmod__",
        "__lt__",
        "__le__",
        "__gt__",
        "__ge__",
        "__reduce__",
        "_v2_behavior",
        "__repr__",
        "__str__",
        "rank",
        "dims",
        "ndims",
        "__len__",
        "__bool__",
        "__iter__",
        "__getitem__",
        "num_elements",
        "merge_with",
        "__add__",
        "__radd__",
        "concatenate",
        "assert_same_rank",
        "assert_has_rank",
        "with_rank",
        "with_rank_at_least",
        "with_rank_at_most",
        "is_compatible_with",
        "assert_is_compatible_with",
        "most_specific_compatible_shape",
        "is_fully_defined",
        "assert_is_fully_defined",
        "as_list",
        "as_proto",
        "__eq__",
        "__ne__",
        "__reduce__",
        "__concat__"
    ],
    "error_interpolation": [
        "parse_message",
        "_compute_device_summary_from_list",
        "_compute_device_assignment_summary_from_op",
        "_compute_colocation_summary_from_dict",
        "_compute_colocation_summary_from_op",
        "_is_framework_filename",
        "_find_index_of_defining_frame",
        "_get_defining_frame",
        "_compute_useful_frames",
        "create_graph_debug_info_def",
        "_compute_field_dict",
        "traceback_files_common_prefix",
        "_sources_for_node",
        "_build_error_message",
        "interpolate"
    ],
    "subscribe": [
        "_recursive_apply",
        "_ControlOutputCache",
        "_subscribe_new",
        "_subscribe_extend",
        "_is_subscribed_identity",
        "_subscribe",
        "_preserve_control_flow_context",
        "_scoped_subscribe",
        "subscribe",
        "calc_control_outputs",
        "get_control_outputs"
    ],
    "python_memory_checker": [
        "_get_typename",
        "_create_python_object_snapshot",
        "_snapshot_diff",
        "_PythonMemoryChecker",
        "record_snapshot",
        "report",
        "assert_no_leak_if_all_possibly_except_one",
        "assert_no_new_objects",
        "_snapshot_diff",
        "_get_internal_object_ids"
    ],
    "sparse_tensor": [
        "SparseTensor",
        "SparseTensorSpec",
        "convert_to_tensor_or_sparse_tensor",
        "is_sparse",
        "from_value",
        "get_shape",
        "indices",
        "values",
        "with_values",
        "op",
        "dtype",
        "dense_shape",
        "shape",
        "graph",
        "__str__",
        "eval",
        "_override_operator",
        "_type_spec",
        "_shape_invariant_to_type_spec",
        "consumers",
        "_serialize",
        "dtype",
        "shape",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_flat_tensor_specs",
        "_to_tensor_list",
        "_to_batched_tensor_list",
        "_from_compatible_tensor_list",
        "_batch",
        "_unbatch",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "from_value"
    ],
    "c_api_util": [
        "ScopedTFStatus",
        "ScopedTFGraph",
        "ScopedTFImportGraphDefOptions",
        "ScopedTFImportGraphDefResults",
        "ScopedTFFunction",
        "ScopedTFBuffer",
        "ApiDefMap",
        "tf_buffer",
        "tf_output",
        "tf_operations",
        "new_tf_operations",
        "__del__",
        "__del__",
        "__del__",
        "__del__",
        "__del__",
        "__del__",
        "__del__",
        "put_api_def",
        "get_api_def",
        "get_op_def",
        "op_names"
    ],
    "gpu_util": [
        "compute_capability_from_device_desc"
    ],
    "op_def_registry": [
        "get",
        "sync"
    ],
    "test_combinations": [
        "TestCombination",
        "ParameterModifier",
        "OptionalParameter",
        "generate",
        "_augment_with_special_arguments",
        "combine",
        "times",
        "NamedObject",
        "_get_name",
        "should_execute_combination",
        "parameter_modifiers",
        "context_managers",
        "modified_arguments",
        "__eq__",
        "__ne__",
        "__hash__",
        "modified_arguments",
        "decorator",
        "decorated",
        "__getattr__",
        "__call__",
        "__iter__",
        "__repr__",
        "execute_test_method"
    ],
    "smart_cond": [
        "smart_cond",
        "smart_constant_value",
        "smart_case"
    ],
    "tensor_util": [
        "ExtractBitsFromFloat16",
        "SlowAppendFloat16ArrayToTensorProto",
        "_MediumAppendFloat16ArrayToTensorProto",
        "ExtractBitsFromBFloat16",
        "SlowAppendBFloat16ArrayToTensorProto",
        "FastAppendBFloat16ArrayToTensorProto",
        "GetFromNumpyDTypeDict",
        "GetNumpyAppendFn",
        "TensorShapeProtoToList",
        "_GetDenseDimensions",
        "_FlattenToStrings",
        "_check_failed",
        "_check_quantized",
        "_generate_isinstance_check",
        "_check_not_tensor",
        "_AssertCompatible",
        "_is_array_like",
        "make_tensor_proto",
        "MakeNdarray",
        "ShapeEquals",
        "_ConstantValue",
        "constant_value",
        "constant_value_as_shape",
        "is_tensor",
        "shape_tensor",
        "maybe_set_static_shape",
        "SlowAppendFloat32ArrayToTensorProto",
        "SlowAppendFloat64ArrayToTensorProto",
        "SlowAppendIntArrayToTensorProto",
        "SlowAppendInt64ArrayToTensorProto",
        "SlowAppendQIntArrayToTensorProto",
        "SlowAppendUInt32ArrayToTensorProto",
        "SlowAppendUInt64ArrayToTensorProto",
        "SlowAppendComplex64ArrayToTensorProto",
        "SlowAppendComplex128ArrayToTensorProto",
        "SlowAppendObjectArrayToTensorProto",
        "SlowAppendBoolArrayToTensorProto",
        "inner"
    ],
    "func_graph": [
        "UnknownArgument",
        "convert_structure_to_signature",
        "FuncGraph",
        "func_graph_from_py_func",
        "maybe_captured",
        "device_stack_has_callable",
        "check_mutation",
        "flatten",
        "pack_sequence_as",
        "_create_substitute_placeholder",
        "_get_defun_inputs_from_args",
        "_get_composite_tensor_spec",
        "_get_defun_inputs",
        "_get_defun_inputs_from_kwargs",
        "dismantle_func_graph",
        "override_func_graph_name_scope",
        "encode_arg",
        "__str__",
        "watch_variable",
        "capture_call_time_value",
        "control_dependencies",
        "as_default",
        "outer_graph",
        "output_types",
        "output_shapes",
        "trainable_variables",
        "variables",
        "variables",
        "_capture_by_value",
        "_create_op_internal",
        "capture",
        "_capture_helper",
        "captures",
        "add_capture",
        "replace_capture",
        "reset_captures",
        "pop_capture",
        "clear_captures",
        "capture_distributed_variable",
        "capture_eager_tensor",
        "captured",
        "external_captures",
        "internal_captures",
        "deferred_external_captures",
        "deferred_internal_captures",
        "variable_captures",
        "mark_as_unsaveable",
        "saveable",
        "saving_errors",
        "_add_scope_exit_callback",
        "inner_cm",
        "deref",
        "convert",
        "convert_to_placeholder",
        "wrapped_closure",
        "wrapper"
    ],
    "type_spec": [
        "TypeSpec",
        "BatchableTypeSpec",
        "type_spec_from_value",
        "_type_spec_from_value",
        "register_type_spec_from_value_converter",
        "value_type",
        "is_compatible_with",
        "most_specific_compatible_type",
        "_with_tensor_ranks_only",
        "_to_components",
        "_from_components",
        "_component_specs",
        "_to_tensor_list",
        "_from_tensor_list",
        "_from_compatible_tensor_list",
        "_flat_tensor_specs",
        "_serialize",
        "_deserialize",
        "__eq__",
        "__ne__",
        "__hash__",
        "__reduce__",
        "__repr__",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "__check_tensor_list",
        "__get_cmp_key",
        "__make_cmp_key",
        "__nested_list_to_tuple",
        "__is_compatible",
        "__most_specific_compatible_type_serialization",
        "_batch",
        "_unbatch",
        "_to_batched_tensor_list",
        "relax"
    ],
    "function": [
        "_make_input_signature_hashable",
        "_type_spec_for",
        "_is_type_subset",
        "_shape_relaxed_type_for_composite_tensor",
        "common_shape",
        "is_same_structure",
        "_parse_func_attrs",
        "_InterpolateFunctionError",
        "add_function_callback",
        "remove_function_callback",
        "clear_function_callbacks",
        "_forward_name",
        "_backward_name",
        "_inference_name",
        "_enclosing_xla_context",
        "_EagerDefinedFunctionDeleter",
        "_EagerDefinedFunction",
        "_DelayedRewriteGradientFunctions",
        "_TapeGradientFunctions",
        "_FirstOrderTapeGradientFunctions",
        "_HigherOrderTapeGradientFunctions",
        "_ForwardBackwardCall",
        "ConcreteFunction",
        "_deterministic_dict_values",
        "FunctionSpec",
        "_as_ndarray",
        "_is_ndarray",
        "_convert_numpy_inputs",
        "_convert_inputs_to_signature",
        "FunctionCache",
        "Function",
        "register",
        "validate_signature",
        "defun",
        "defun_with_attributes",
        "TfMethodTarget",
        "class_method_to_instance_method",
        "_FunctionGarbageCollector",
        "ConcreteFunctionGarbageCollector",
        "_Marker",
        "_structure_summary",
        "_contains_type_spec",
        "__enter__",
        "__exit__",
        "__del__",
        "add_to_graph",
        "name",
        "stateful_ops",
        "call",
        "forward_backward",
        "_construct_forward_backward",
        "_rewrite_forward_and_call_backward",
        "get_gradient_function",
        "forward",
        "_backward",
        "record",
        "_build_functions_for_outputs",
        "_wrap_forward_function_with_jvps",
        "_wrap_backward_function_with_jvp_backprop",
        "_shuffle_forward_outputs",
        "forward",
        "_wrap_backward_function",
        "record",
        "_forward_and_backward_functions",
        "_forward_and_backward_functions",
        "forward",
        "record",
        "_set_function_spec",
        "_initialize_function_spec",
        "variables",
        "trainable_variables",
        "__call__",
        "_call_impl",
        "_call_with_flat_signature",
        "_call_with_structured_signature",
        "_structured_signature_check_missing_args",
        "_structured_signature_check_unexpected_args",
        "_structured_signature_check_arg_types",
        "_structured_signature_check_arg_type",
        "_call_flat",
        "_experimental_with_cancellation_manager",
        "name",
        "graph",
        "inputs",
        "structured_input_signature",
        "outputs",
        "structured_outputs",
        "captured_inputs",
        "function_def",
        "output_shapes",
        "output_dtypes",
        "add_to_graph",
        "add_gradient_functions_to_graph",
        "_get_gradient_function",
        "_select_forward_and_backward_functions",
        "_build_call_outputs",
        "_as_name_attr_list",
        "_structured_signature_summary",
        "_flat_signature_summary",
        "pretty_printed_signature",
        "__repr__",
        "__str__",
        "from_function_and_signature",
        "fullargspec",
        "is_method",
        "args_to_indices",
        "kwargs_to_include",
        "input_signature",
        "flat_input_signature",
        "is_pure",
        "experimental_compile",
        "arg_names",
        "vararg_name",
        "varkw_name",
        "signature_summary",
        "_convert_variables_to_tensors",
        "_convert_annotated_args_to_tensors",
        "canonicalize_function_inputs",
        "format_error_message",
        "all_values",
        "__call__",
        "python_function",
        "function_spec",
        "input_signature",
        "flat_input_signature",
        "_get_concrete_function_internal_garbage_collected",
        "_get_concrete_function_internal",
        "_get_concrete_function_garbage_collected",
        "get_concrete_function",
        "__get__",
        "_cache_key",
        "_cache_key_context",
        "_create_graph_function",
        "_define_function_with_shape_relaxation",
        "_maybe_define_function",
        "decorated",
        "target",
        "target_class",
        "call",
        "bound_method_wrapper",
        "__del__",
        "release",
        "__del__",
        "__repr__",
        "type_name",
        "_backprop_function",
        "_backward_function",
        "_index_map",
        "_backward_function_wrapper",
        "cancellable_call",
        "pretty_print_spec",
        "spec_from_value"
    ],
    "constant_op": [
        "_eager_reshape",
        "_eager_fill",
        "_eager_identity",
        "convert_to_eager_tensor",
        "constant_v1",
        "constant",
        "_constant_impl",
        "_constant_eager_impl",
        "is_constant",
        "_constant_tensor_conversion_function",
        "_tensor_shape_tensor_conversion_function",
        "_dimension_tensor_conversion_function"
    ],
    "graph_util_impl": [
        "_is_variable_op",
        "must_run_on_cpu",
        "_node_name",
        "_get_colocated_node_name",
        "_extract_graph_summary",
        "_assert_nodes_are_present",
        "_bfs_for_reachable_nodes",
        "extract_sub_graph",
        "tensor_shape_from_node_def_name",
        "convert_variables_to_constants",
        "remove_training_nodes"
    ],
    "convert_to_constants": [
        "_TensorData",
        "_EndPoint",
        "_Edge",
        "_Convertible",
        "_Function",
        "_Node",
        "_Intermediate",
        "_Merge",
        "_VarHandle",
        "_ResourceGather",
        "_ResourceGatherNd",
        "_ReadVariable",
        "_FunctionCaller",
        "_If",
        "_Case",
        "_PartitionedCall",
        "_While",
        "_GraphDef",
        "_ConverterData",
        "_FunctionConverterData",
        "_SessionConverterData",
        "disable_lower_using_switch_merge",
        "_run_inline_graph_optimization",
        "_construct_concrete_function",
        "_replace_variables_by_constants",
        "convert_variables_to_constants_v2",
        "convert_variables_to_constants_v2_as_graph",
        "convert_variables_to_constants_from_session_graph",
        "dtype_attr",
        "__str__",
        "__str__",
        "converted_self",
        "convert_variable_to_constant",
        "create_edges",
        "add_outgoing_edge",
        "converted_enclosing_graph",
        "outgoing_edges",
        "__str__",
        "function",
        "nodes",
        "converted_self",
        "convert_variable_to_constant",
        "create_edges",
        "__str__",
        "new",
        "node",
        "container",
        "converted_self",
        "convert_variable_to_constant",
        "create_edges",
        "resolve_input",
        "update_dtype",
        "convert_variable_to_constant",
        "convert_variable_to_constant",
        "convert_variable_to_constant",
        "convert_variable_to_constant",
        "convert_variable_to_constant",
        "convert_variable_to_constant",
        "converted_self",
        "convert_variable_to_constant",
        "create_edges",
        "convert_variable_to_constant",
        "graph_def",
        "nodes",
        "functions",
        "converted_function_names",
        "rename_function",
        "converted_self",
        "create_edges",
        "graph_def",
        "node_defs",
        "tensor_data",
        "_should_convert",
        "_build_node_defs_list",
        "_build_tensor_data",
        "disable_control_flow_lowering"
    ],
    "tensor_conversion_registry": [
        "_default_conversion_function",
        "register_tensor_conversion_function",
        "get"
    ],
    "device_spec": [
        "_as_str_or_none",
        "_as_int_or_none",
        "_as_device_str_or_none",
        "DeviceSpecV2",
        "DeviceSpecV1",
        "to_string",
        "from_string",
        "parse_from_string",
        "make_merged_spec",
        "replace",
        "job",
        "replica",
        "task",
        "device_type",
        "device_index",
        "_get_combined_properties",
        "_string_to_components",
        "_components_to_string",
        "__eq__",
        "__hash__",
        "job",
        "replica",
        "task",
        "device_type",
        "device_index",
        "__hash__",
        "to_string",
        "parse_from_string",
        "merge_from"
    ],
    "traceable_stack": [
        "TraceableObject",
        "TraceableStack",
        "set_filename_and_line_from_caller",
        "copy_metadata",
        "push_obj",
        "pop_obj",
        "peek_top_obj",
        "peek_objs",
        "peek_traceable_objs",
        "__len__",
        "copy"
    ],
    "memory_checker": [
        "_get_test_name_best_effort",
        "MemoryChecker",
        "__enter__",
        "__exit__",
        "record_snapshot",
        "report",
        "assert_no_leak_if_all_possibly_except_one",
        "assert_no_new_python_objects"
    ],
    "meta_graph": [
        "_node_def",
        "_read_file",
        "ops_used_by_graph_def",
        "stripped_op_list_for_graph",
        "_get_kind_name",
        "_op_name",
        "_get_scope",
        "_find_extraneous_saver_nodes",
        "_should_include_node",
        "add_collection_def",
        "_is_default_attr_value",
        "strip_graph_default_valued_attrs",
        "create_meta_graph_def",
        "read_meta_graph_file",
        "import_scoped_meta_graph",
        "import_scoped_meta_graph_with_return_elements",
        "export_scoped_meta_graph",
        "copy_scoped_meta_graph",
        "mark_op_as_used",
        "process_node",
        "_strip_node_default_valued_attrs"
    ],
    "kernels": [
        "get_all_registered_kernels",
        "get_registered_kernels_for_op"
    ],
    "utils": [
        "use_wrapped_call",
        "layer_uses_training_bool",
        "list_all_layers",
        "list_all_layers_and_sublayers",
        "maybe_add_training_arg",
        "get_training_arg_index",
        "set_training_arg",
        "get_training_arg",
        "remove_training_arg",
        "SaveOptionsContext",
        "keras_option_scope",
        "should_save_traces",
        "return_outputs_and_add_losses",
        "wrap_with_training_arg",
        "replace_training_and_call"
    ],
    "feature_column": [
        "_internal_input_layer",
        "input_layer",
        "InputLayer",
        "linear_model",
        "_add_to_collections",
        "_FCLinearWrapper",
        "_BiasLayer",
        "_get_expanded_variable_list",
        "_strip_leading_slashes",
        "_LinearModel",
        "_transform_features",
        "make_parse_example_spec",
        "_embedding_column",
        "_numeric_column",
        "_bucketized_column",
        "_categorical_column_with_hash_bucket",
        "_categorical_column_with_vocabulary_file",
        "_categorical_column_with_vocabulary_list",
        "_categorical_column_with_identity",
        "_indicator_column",
        "_weighted_categorical_column",
        "_crossed_column",
        "_EmbeddingColumnLayer",
        "_FeatureColumn",
        "_DenseColumn",
        "_create_weighted_sum",
        "_create_dense_column_weighted_sum",
        "_CategoricalColumn",
        "_create_categorical_column_weighted_sum",
        "_SequenceDenseColumn",
        "_LazyBuilder",
        "_shape_offsets",
        "_to_sparse_input_and_drop_ignore_values",
        "_normalize_feature_columns",
        "_NumericColumn",
        "_BucketizedColumn",
        "_EmbeddingColumn",
        "_get_graph_for_variable",
        "_SharedEmbeddingColumn",
        "_check_shape",
        "_HashedCategoricalColumn",
        "_VocabularyFileCategoricalColumn",
        "_VocabularyListCategoricalColumn",
        "_IdentityCategoricalColumn",
        "_WeightedCategoricalColumn",
        "_CrossedColumn",
        "_collect_leaf_level_keys",
        "_IndicatorColumn",
        "_verify_static_batch_size_equality",
        "_SequenceCategoricalColumn",
        "_get_logits",
        "__call__",
        "name",
        "non_trainable_variables",
        "non_trainable_weights",
        "trainable_variables",
        "trainable_weights",
        "variables",
        "weights",
        "build",
        "call",
        "build",
        "call",
        "cols_to_vars",
        "call",
        "_add_layers",
        "_creator",
        "set_weight_collections",
        "build",
        "call",
        "name",
        "__lt__",
        "__gt__",
        "_var_scope_name",
        "_transform_feature",
        "_parse_example_spec",
        "_reset_config",
        "_variable_shape",
        "_get_dense_tensor",
        "_num_buckets",
        "_get_sparse_tensors",
        "_get_sequence_dense_tensor",
        "get",
        "_get_raw_feature_as_tensor",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_variable_shape",
        "_get_dense_tensor",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_variable_shape",
        "_get_dense_tensor",
        "_num_buckets",
        "_get_sparse_tensors",
        "__new__",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_variable_shape",
        "_get_dense_tensor_internal",
        "_get_dense_tensor",
        "_get_sequence_dense_tensor",
        "name",
        "_var_scope_name",
        "_parse_example_spec",
        "_transform_feature",
        "_variable_shape",
        "_get_dense_tensor_internal",
        "_get_dense_tensor",
        "_get_sequence_dense_tensor",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "name",
        "_parse_example_spec",
        "_num_buckets",
        "_transform_feature",
        "_get_sparse_tensors",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "name",
        "_transform_feature",
        "_parse_example_spec",
        "_variable_shape",
        "_get_dense_tensor",
        "_get_sequence_dense_tensor",
        "name",
        "_parse_example_spec",
        "_transform_feature",
        "_num_buckets",
        "_get_sparse_tensors",
        "expand_dims"
    ],
    "sequence_feature_column": [
        "SequenceFeatures",
        "_assert_all_equal_and_return",
        "_is_feature_layer",
        "_target_shape",
        "call"
    ],
    "feature_column_v2": [
        "StateManager",
        "_StateManagerImpl",
        "_StateManagerImplV2",
        "_transform_features_v2",
        "make_parse_example_spec_v2",
        "embedding_column",
        "shared_embedding_columns",
        "shared_embedding_columns_v2",
        "numeric_column",
        "bucketized_column",
        "categorical_column_with_hash_bucket",
        "categorical_column_with_vocabulary_file",
        "categorical_column_with_vocabulary_file_v2",
        "categorical_column_with_vocabulary_list",
        "categorical_column_with_identity",
        "indicator_column",
        "weighted_categorical_column",
        "crossed_column",
        "FeatureColumn",
        "DenseColumn",
        "is_feature_column_v2",
        "_create_weighted_sum",
        "_create_dense_column_weighted_sum",
        "CategoricalColumn",
        "_create_categorical_column_weighted_sum",
        "SequenceDenseColumn",
        "FeatureTransformationCache",
        "_to_sparse_input_and_drop_ignore_values",
        "_normalize_feature_columns",
        "NumericColumn",
        "BucketizedColumn",
        "EmbeddingColumn",
        "_raise_shared_embedding_column_error",
        "SharedEmbeddingColumnCreator",
        "SharedEmbeddingColumn",
        "_check_shape",
        "HashedCategoricalColumn",
        "VocabularyFileCategoricalColumn",
        "VocabularyListCategoricalColumn",
        "IdentityCategoricalColumn",
        "WeightedCategoricalColumn",
        "CrossedColumn",
        "_collect_leaf_level_keys",
        "_prune_invalid_ids",
        "_prune_invalid_weights",
        "IndicatorColumn",
        "_verify_static_batch_size_equality",
        "SequenceCategoricalColumn",
        "_check_config_keys",
        "_standardize_and_copy_config",
        "_sanitize_column_name_for_variable_scope",
        "create_variable",
        "add_variable",
        "get_variable",
        "add_resource",
        "has_resource",
        "get_resource",
        "create_variable",
        "get_variable",
        "add_resource",
        "has_resource",
        "get_resource",
        "create_variable",
        "name",
        "__lt__",
        "__gt__",
        "transform_feature",
        "parse_example_spec",
        "create_state",
        "_is_v2_column",
        "parents",
        "get_config",
        "_get_config",
        "from_config",
        "_from_config",
        "variable_shape",
        "get_dense_tensor",
        "num_buckets",
        "get_sparse_tensors",
        "get_sequence_dense_tensor",
        "get",
        "_get_raw_feature_as_tensor",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_input_tensor",
        "_transform_feature",
        "transform_feature",
        "variable_shape",
        "_variable_shape",
        "get_dense_tensor",
        "_get_dense_tensor",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_feature",
        "transform_feature",
        "variable_shape",
        "_variable_shape",
        "_get_dense_tensor_for_input_tensor",
        "get_dense_tensor",
        "_get_dense_tensor",
        "num_buckets",
        "_num_buckets",
        "_get_sparse_tensors_for_input_tensor",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "__new__",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "transform_feature",
        "_transform_feature",
        "variable_shape",
        "_variable_shape",
        "create_state",
        "_get_dense_tensor_internal_helper",
        "_get_dense_tensor_internal",
        "_old_get_dense_tensor_internal",
        "get_dense_tensor",
        "_get_dense_tensor",
        "get_sequence_dense_tensor",
        "_get_sequence_dense_tensor",
        "parents",
        "get_config",
        "from_config",
        "__call__",
        "embedding_weights",
        "dimension",
        "__new__",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "transform_feature",
        "_transform_feature",
        "variable_shape",
        "_variable_shape",
        "_get_dense_tensor_internal",
        "get_dense_tensor",
        "_get_dense_tensor",
        "get_sequence_dense_tensor",
        "_get_sequence_dense_tensor",
        "parents",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_input_tensor",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_input_tensor",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_input_tensor",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "_transform_input_tensor",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "num_buckets",
        "_num_buckets",
        "_transform_weight_tensor",
        "transform_feature",
        "_transform_feature",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "_transform_id_weight_pair",
        "transform_feature",
        "_transform_feature",
        "parse_example_spec",
        "_parse_example_spec",
        "variable_shape",
        "_variable_shape",
        "get_dense_tensor",
        "_get_dense_tensor",
        "get_sequence_dense_tensor",
        "_get_sequence_dense_tensor",
        "parents",
        "get_config",
        "from_config",
        "_is_v2_column",
        "name",
        "parse_example_spec",
        "_parse_example_spec",
        "transform_feature",
        "_transform_feature",
        "num_buckets",
        "_num_buckets",
        "_get_sparse_tensors_helper",
        "get_sparse_tensors",
        "_get_sparse_tensors",
        "parents",
        "get_config",
        "from_config",
        "expand_dims"
    ],
    "testing_utils": [
        "string_test",
        "numeric_test",
        "get_test_data",
        "layer_test",
        "model_type_scope",
        "run_eagerly_scope",
        "use_keras_tensors_scope",
        "should_run_eagerly",
        "saved_model_format_scope",
        "get_save_format",
        "get_save_kwargs",
        "get_model_type",
        "get_small_sequential_mlp",
        "get_small_functional_mlp",
        "SmallSubclassMLP",
        "_SmallSubclassMLPCustomBuild",
        "get_small_subclass_mlp",
        "get_small_subclass_mlp_with_custom_build",
        "get_small_mlp",
        "_SubclassModel",
        "_SubclassModelCustomBuild",
        "get_model_from_layers",
        "Bias",
        "_MultiIOSubclassModel",
        "_MultiIOSubclassModelCustomBuild",
        "get_multi_io_model",
        "get_v2_optimizer",
        "get_expected_metric_variable_names",
        "enable_v2_dtype_behavior",
        "disable_v2_dtype_behavior",
        "_set_v2_dtype_behavior",
        "device",
        "use_gpu",
        "for_all_test_methods",
        "run_without_tensor_float_32",
        "run_all_without_tensor_float_32",
        "run_v2_only",
        "generate_combinations_with_testcase_name",
        "assert_shapes_equal",
        "call",
        "build",
        "call",
        "_layer_name_for_i",
        "call",
        "build",
        "call",
        "build",
        "call",
        "call",
        "build",
        "call",
        "wrapper",
        "all_test_methods_impl",
        "decorator",
        "decorator",
        "decorated",
        "decorated"
    ],
    "optimizers": [
        "serialize",
        "deserialize",
        "get"
    ],
    "optimizer_v1": [
        "Optimizer",
        "SGD",
        "RMSprop",
        "Adagrad",
        "Adadelta",
        "Adam",
        "Adamax",
        "Nadam",
        "TFOptimizer",
        "_create_all_weights",
        "get_updates",
        "get_gradients",
        "set_weights",
        "get_weights",
        "get_config",
        "from_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_create_all_weights",
        "get_updates",
        "get_config",
        "_clip_gradients",
        "minimize",
        "apply_gradients",
        "get_grads",
        "get_updates",
        "weights",
        "get_config",
        "from_config"
    ],
    "callbacks_v1": [
        "TensorBoard",
        "_init_writer",
        "_make_histogram_ops",
        "set_model",
        "_fetch_callback",
        "_write_custom_summaries",
        "on_train_batch_begin",
        "on_train_batch_end",
        "on_test_begin",
        "on_test_end",
        "on_batch_end",
        "on_train_begin",
        "on_epoch_begin",
        "on_epoch_end",
        "on_train_end",
        "is_indexed_slices"
    ],
    "models": [
        "share_weights",
        "_clone_layer",
        "_insert_ancillary_layers",
        "_make_new_nodes",
        "_clone_functional_model",
        "_clone_layers_and_model_config",
        "_remove_ancillary_layers",
        "_clone_sequential_model",
        "clone_model",
        "_in_place_subclassed_model_reset",
        "_reset_build_compile_trackers",
        "in_place_subclassed_model_state_restoration",
        "clone_and_build_model",
        "_copy_layer"
    ],
    "keras_parameterized": [
        "TestCase",
        "run_with_all_saved_model_formats",
        "_test_h5_saved_model_format",
        "_test_tf_saved_model_format",
        "_test_tf_saved_model_format_no_traces",
        "run_with_all_weight_formats",
        "run_with_all_model_types",
        "_test_functional_model_type",
        "_test_subclass_model_type",
        "_test_sequential_model_type",
        "run_all_keras_modes",
        "_v1_session_test",
        "_v2_eager_test",
        "_v2_function_test",
        "_v2_function_and_kerastensors_test",
        "_test_or_class_decorator",
        "tearDown",
        "single_method_decorator",
        "single_method_decorator",
        "single_method_decorator",
        "_decorate_test_or_class",
        "decorated",
        "decorated",
        "decorated"
    ],
    "activations": [
        "softmax",
        "elu",
        "selu",
        "softplus",
        "softsign",
        "swish",
        "relu",
        "gelu",
        "tanh",
        "sigmoid",
        "exponential",
        "hard_sigmoid",
        "linear",
        "serialize",
        "deserialize",
        "get"
    ],
    "losses": [
        "Loss",
        "LossFunctionWrapper",
        "MeanSquaredError",
        "MeanAbsoluteError",
        "MeanAbsolutePercentageError",
        "MeanSquaredLogarithmicError",
        "BinaryCrossentropy",
        "CategoricalCrossentropy",
        "SparseCategoricalCrossentropy",
        "Hinge",
        "SquaredHinge",
        "CategoricalHinge",
        "Poisson",
        "LogCosh",
        "KLDivergence",
        "Huber",
        "mean_squared_error",
        "mean_absolute_error",
        "mean_absolute_percentage_error",
        "mean_squared_logarithmic_error",
        "_maybe_convert_labels",
        "squared_hinge",
        "hinge",
        "categorical_hinge",
        "huber",
        "log_cosh",
        "categorical_crossentropy",
        "sparse_categorical_crossentropy",
        "binary_crossentropy",
        "kl_divergence",
        "poisson",
        "cosine_similarity",
        "CosineSimilarity",
        "is_categorical_crossentropy",
        "serialize",
        "deserialize",
        "get",
        "_set_name_scope",
        "__call__",
        "from_config",
        "get_config",
        "call",
        "_get_reduction",
        "call",
        "get_config",
        "_convert_binary_labels",
        "_logcosh",
        "_smooth_labels",
        "_smooth_labels"
    ],
    "regularizers": [
        "_check_penalty_number",
        "_none_to_default",
        "Regularizer",
        "L1L2",
        "L1",
        "L2",
        "l1_l2",
        "serialize",
        "deserialize",
        "get",
        "__call__",
        "from_config",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config"
    ],
    "constraints": [
        "Constraint",
        "MaxNorm",
        "NonNeg",
        "UnitNorm",
        "MinMaxNorm",
        "RadialConstraint",
        "serialize",
        "deserialize",
        "get",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "_kernel_constraint",
        "body_fn"
    ],
    "metrics": [
        "Metric",
        "Reduce",
        "Sum",
        "Mean",
        "MeanRelativeError",
        "MeanMetricWrapper",
        "Accuracy",
        "BinaryAccuracy",
        "CategoricalAccuracy",
        "SparseCategoricalAccuracy",
        "TopKCategoricalAccuracy",
        "SparseTopKCategoricalAccuracy",
        "_ConfusionMatrixConditionCount",
        "FalsePositives",
        "FalseNegatives",
        "TrueNegatives",
        "TruePositives",
        "Precision",
        "Recall",
        "SensitivitySpecificityBase",
        "SensitivityAtSpecificity",
        "SpecificityAtSensitivity",
        "PrecisionAtRecall",
        "RecallAtPrecision",
        "AUC",
        "CosineSimilarity",
        "MeanAbsoluteError",
        "MeanAbsolutePercentageError",
        "MeanSquaredError",
        "MeanSquaredLogarithmicError",
        "Hinge",
        "SquaredHinge",
        "CategoricalHinge",
        "RootMeanSquaredError",
        "LogCoshError",
        "Poisson",
        "KLDivergence",
        "MeanIoU",
        "MeanTensor",
        "BinaryCrossentropy",
        "CategoricalCrossentropy",
        "SparseCategoricalCrossentropy",
        "SumOverBatchSize",
        "SumOverBatchSizeMetricWrapper",
        "accuracy",
        "binary_accuracy",
        "categorical_accuracy",
        "sparse_categorical_accuracy",
        "top_k_categorical_accuracy",
        "sparse_top_k_categorical_accuracy",
        "cosine_proximity",
        "clone_metric",
        "clone_metrics",
        "serialize",
        "deserialize",
        "get",
        "is_built_in",
        "__new__",
        "__call__",
        "dtype",
        "get_config",
        "reset_states",
        "update_state",
        "result",
        "add_weight",
        "_trackable_saved_model_saver",
        "update_state",
        "result",
        "update_state",
        "get_config",
        "update_state",
        "get_config",
        "from_config",
        "update_state",
        "result",
        "reset_states",
        "get_config",
        "update_state",
        "result",
        "reset_states",
        "get_config",
        "update_state",
        "result",
        "reset_states",
        "get_config",
        "update_state",
        "reset_states",
        "_find_max_under_constraint",
        "result",
        "get_config",
        "result",
        "get_config",
        "result",
        "get_config",
        "result",
        "get_config",
        "thresholds",
        "_build",
        "update_state",
        "interpolate_pr_auc",
        "result",
        "reset_states",
        "get_config",
        "update_state",
        "result",
        "update_state",
        "result",
        "reset_states",
        "get_config",
        "_build",
        "total",
        "count",
        "update_state",
        "result",
        "reset_states",
        "update_state",
        "get_config",
        "result_fn",
        "replica_local_fn",
        "get_max",
        "update_state_fn"
    ],
    "backend_config": [
        "epsilon",
        "set_epsilon",
        "floatx",
        "set_floatx",
        "image_data_format",
        "set_image_data_format"
    ],
    "backend": [
        "_DummyEagerGraph",
        "backend",
        "cast_to_floatx",
        "get_uid",
        "reset_uids",
        "clear_session",
        "manual_variable_initialization",
        "learning_phase",
        "global_learning_phase_is_set",
        "_mark_func_graph_as_unsaveable",
        "symbolic_learning_phase",
        "_default_learning_phase",
        "set_learning_phase",
        "deprecated_internal_set_learning_phase",
        "learning_phase_scope",
        "deprecated_internal_learning_phase_scope",
        "eager_learning_phase_scope",
        "_current_graph",
        "_get_session",
        "get_session",
        "get_graph",
        "_scratch_graph",
        "set_session",
        "get_default_session_config",
        "get_default_graph_uid_map",
        "_TfDeviceCaptureOp",
        "_get_current_tf_device",
        "_is_current_explicit_device",
        "_get_available_gpus",
        "_has_nchw_support",
        "_constant_to_tensor",
        "_to_tensor",
        "is_sparse",
        "to_dense",
        "name_scope",
        "variable",
        "track_tf_optimizer",
        "track_variable",
        "observe_object_name",
        "unique_object_name",
        "_get_variables",
        "_initialize_variables",
        "constant",
        "is_keras_tensor",
        "placeholder",
        "is_placeholder",
        "shape",
        "int_shape",
        "ndim",
        "dtype",
        "eval",
        "zeros",
        "ones",
        "eye",
        "zeros_like",
        "ones_like",
        "identity",
        "random_uniform_variable",
        "random_normal_variable",
        "count_params",
        "cast",
        "update",
        "update_add",
        "update_sub",
        "moving_average_update",
        "dot",
        "batch_dot",
        "transpose",
        "gather",
        "max",
        "min",
        "sum",
        "prod",
        "cumsum",
        "cumprod",
        "var",
        "std",
        "mean",
        "any",
        "all",
        "argmax",
        "argmin",
        "square",
        "abs",
        "sqrt",
        "exp",
        "log",
        "logsumexp",
        "round",
        "sign",
        "pow",
        "clip",
        "equal",
        "not_equal",
        "greater",
        "greater_equal",
        "less",
        "less_equal",
        "maximum",
        "minimum",
        "sin",
        "cos",
        "_regular_normalize_batch_in_training",
        "_broadcast_normalize_batch_in_training",
        "_fused_normalize_batch_in_training",
        "normalize_batch_in_training",
        "batch_normalization",
        "concatenate",
        "reshape",
        "permute_dimensions",
        "resize_images",
        "resize_volumes",
        "repeat_elements",
        "repeat",
        "arange",
        "tile",
        "flatten",
        "batch_flatten",
        "expand_dims",
        "squeeze",
        "temporal_padding",
        "spatial_2d_padding",
        "spatial_3d_padding",
        "stack",
        "one_hot",
        "reverse",
        "get_value",
        "batch_get_value",
        "set_value",
        "batch_set_value",
        "print_tensor",
        "GraphExecutionFunction",
        "eval_in_eager_or_function",
        "function",
        "gradients",
        "stop_gradient",
        "rnn",
        "switch",
        "in_train_phase",
        "in_test_phase",
        "relu",
        "elu",
        "softmax",
        "softplus",
        "softsign",
        "categorical_crossentropy",
        "sparse_categorical_crossentropy",
        "binary_crossentropy",
        "sigmoid",
        "hard_sigmoid",
        "tanh",
        "dropout",
        "l2_normalize",
        "in_top_k",
        "_preprocess_conv1d_input",
        "_preprocess_conv2d_input",
        "_preprocess_conv3d_input",
        "_preprocess_padding",
        "conv1d",
        "conv2d",
        "conv2d_transpose",
        "separable_conv1d",
        "separable_conv2d",
        "depthwise_conv2d",
        "conv3d",
        "conv3d_transpose",
        "pool2d",
        "pool3d",
        "local_conv",
        "local_conv1d",
        "local_conv2d",
        "bias_add",
        "random_normal",
        "random_uniform",
        "random_binomial",
        "random_bernoulli",
        "truncated_normal",
        "ctc_label_dense_to_sparse",
        "ctc_batch_cost",
        "ctc_decode",
        "map_fn",
        "foldl",
        "foldr",
        "configure_and_create_distributed_session",
        "is_tpu_strategy",
        "cast_variables_to_tensor",
        "_is_symbolic_tensor",
        "convert_inputs_if_ragged",
        "maybe_convert_to_ragged",
        "ContextValueCache",
        "_WeakReferencableClass",
        "_set_device",
        "_set_device_from_string",
        "_make_callable",
        "_call_fetch_callbacks",
        "_eval_if_composite",
        "__call__",
        "swap_batch_timestep",
        "_expand_mask",
        "set_shape",
        "range_less_than",
        "_create_session",
        "_cast_variables_to_tensor",
        "_convert_ragged_input",
        "_key",
        "_get_parent_graph",
        "_get_recursive",
        "__getitem__",
        "setdefault",
        "func",
        "_process_single_input_t",
        "_get_input_tensor",
        "masking_fn",
        "compute_masked_output",
        "_step",
        "_step",
        "then_expression_fn",
        "else_expression_fn",
        "compute_masked_output",
        "tensor_spec_to_placeholder",
        "masking_fn",
        "masking_fn"
    ],
    "callbacks": [
        "configure_callbacks",
        "set_callback_parameters",
        "_is_generator_like",
        "make_logs",
        "CallbackList",
        "Callback",
        "BaseLogger",
        "TerminateOnNaN",
        "ProgbarLogger",
        "History",
        "ModelCheckpoint",
        "BackupAndRestore",
        "EarlyStopping",
        "RemoteMonitor",
        "LearningRateScheduler",
        "TensorBoard",
        "ReduceLROnPlateau",
        "CSVLogger",
        "LambdaCallback",
        "_add_default_callbacks",
        "append",
        "set_params",
        "set_model",
        "_call_batch_hook",
        "_call_batch_begin_hook",
        "_call_batch_end_hook",
        "_call_batch_hook_helper",
        "_call_begin_hook",
        "_call_end_hook",
        "on_batch_begin",
        "on_batch_end",
        "on_epoch_begin",
        "on_epoch_end",
        "on_train_batch_begin",
        "on_train_batch_end",
        "on_test_batch_begin",
        "on_test_batch_end",
        "on_predict_batch_begin",
        "on_predict_batch_end",
        "on_train_begin",
        "on_train_end",
        "on_test_begin",
        "on_test_end",
        "on_predict_begin",
        "on_predict_end",
        "__iter__",
        "set_params",
        "set_model",
        "on_batch_begin",
        "on_batch_end",
        "on_epoch_begin",
        "on_epoch_end",
        "on_train_batch_begin",
        "on_train_batch_end",
        "on_test_batch_begin",
        "on_test_batch_end",
        "on_predict_batch_begin",
        "on_predict_batch_end",
        "on_train_begin",
        "on_train_end",
        "on_test_begin",
        "on_test_end",
        "on_predict_begin",
        "on_predict_end",
        "_implements_train_batch_hooks",
        "_implements_test_batch_hooks",
        "_implements_predict_batch_hooks",
        "on_epoch_begin",
        "on_batch_end",
        "on_epoch_end",
        "on_batch_end",
        "set_params",
        "on_train_begin",
        "on_test_begin",
        "on_predict_begin",
        "on_epoch_begin",
        "on_train_batch_end",
        "on_test_batch_end",
        "on_predict_batch_end",
        "on_epoch_end",
        "on_test_end",
        "on_predict_end",
        "_reset_progbar",
        "_maybe_init_progbar",
        "_implements_train_batch_hooks",
        "_implements_test_batch_hooks",
        "_implements_predict_batch_hooks",
        "_batch_update_progbar",
        "_finalize_progbar",
        "on_train_begin",
        "on_epoch_end",
        "set_model",
        "on_train_begin",
        "_implements_train_batch_hooks",
        "on_train_batch_end",
        "on_epoch_begin",
        "on_epoch_end",
        "_should_save_on_batch",
        "_save_model",
        "_get_file_path",
        "_maybe_remove_file",
        "_checkpoint_exists",
        "_get_most_recently_modified_file_matching_pattern",
        "set_model",
        "on_train_begin",
        "on_train_end",
        "on_epoch_end",
        "on_train_begin",
        "on_epoch_end",
        "on_train_end",
        "get_monitor_value",
        "on_epoch_end",
        "on_epoch_begin",
        "on_epoch_end",
        "_validate_kwargs",
        "set_model",
        "_train_writer",
        "_val_writer",
        "_get_log_write_dir",
        "_delete_tmp_write_dir",
        "_write_keras_model_train_graph",
        "_write_keras_model_summary",
        "_configure_embeddings",
        "_push_writer",
        "_pop_writer",
        "_close_writers",
        "_init_profile_batch",
        "on_train_begin",
        "on_train_end",
        "on_test_begin",
        "on_test_end",
        "_implements_train_batch_hooks",
        "on_train_batch_begin",
        "on_train_batch_end",
        "on_epoch_begin",
        "on_epoch_end",
        "_start_trace",
        "_stop_trace",
        "_collect_learning_rate",
        "_log_epoch_metrics",
        "_log_weights",
        "_log_weight_as_image",
        "_log_embeddings",
        "_reset",
        "on_train_begin",
        "on_epoch_end",
        "in_cooldown",
        "on_train_begin",
        "on_epoch_end",
        "on_train_end",
        "handle_value",
        "CustomDialect"
    ],
    "manip_grad": [
        "_RollGrad"
    ],
    "variables": [
        "VariableAccessTransformer",
        "transform",
        "visit_Name",
        "visit_Delete",
        "visit_AugAssign"
    ],
    "functional_ops": [
        "foldl",
        "foldl_v2",
        "foldr",
        "foldr_v2",
        "scan",
        "scan_v2",
        "If",
        "Gradient",
        "_GetInputDtypes",
        "_LoopBodyCaptureWrapper",
        "While",
        "_ForUsingWhile",
        "For",
        "partitioned_call",
        "_set_read_only_resource_inputs_attr",
        "create_ta",
        "create_ta",
        "input_pack",
        "Wrapper",
        "WhileCond",
        "WhileBody",
        "compute",
        "compute",
        "output_pack",
        "compute",
        "CondWrapper"
    ],
    "gen_set_ops": [
        "dense_to_dense_set_operation",
        "dense_to_dense_set_operation_eager_fallback",
        "dense_to_sparse_set_operation",
        "dense_to_sparse_set_operation_eager_fallback",
        "set_size",
        "set_size_eager_fallback",
        "sparse_to_sparse_set_operation",
        "sparse_to_sparse_set_operation_eager_fallback"
    ],
    "array_ops": [
        "reshape",
        "fill",
        "identity",
        "expand_dims",
        "expand_dims_v2",
        "listdiff",
        "setdiff1d",
        "broadcast_dynamic_shape",
        "broadcast_static_shape",
        "shape_v2",
        "shape",
        "shape_internal",
        "shape_n",
        "size_v2",
        "size",
        "size_internal",
        "rank",
        "rank_internal",
        "_check_index",
        "_is_undefined_dimension",
        "_slice_helper",
        "slice",
        "strided_slice",
        "_SliceHelperVar",
        "parallel_stack",
        "stack",
        "_autopacking_helper",
        "_get_dtype_from_nested_lists",
        "_cast_nested_seqs_to_dtype",
        "_should_not_autopack",
        "_autopacking_conversion_function",
        "unstack",
        "concat",
        "boolean_mask",
        "boolean_mask_v2",
        "sparse_mask",
        "unique",
        "unique_with_counts",
        "split",
        "transpose_v2",
        "transpose",
        "matrix_transpose",
        "matrix_diag",
        "matrix_diag_part",
        "tensor_diag_part",
        "matrix_set_diag",
        "_constant_if_small",
        "_tag_zeros_tensor",
        "zeros",
        "zeros_like",
        "zeros_like_v2",
        "zeros_like_impl",
        "ones_like",
        "ones_like_v2",
        "ones_like_impl",
        "ones",
        "placeholder",
        "placeholder_with_default",
        "sparse_placeholder",
        "pad_v2",
        "pad",
        "_get_paddings_constant",
        "meshgrid",
        "_compute_size_of_strided_dim",
        "_TileGradShape",
        "edit_distance",
        "_FakeQuantWithMinMaxArgsGradient",
        "_FakeQuantWithMinMaxVarsGradient",
        "_FakeQuantWithMinMaxVarsPerChannelGradient",
        "_QuantizeAndDequantizeV4Grad",
        "_QuantizeAndDequantizeV4GradGrad",
        "required_space_to_batch_paddings",
        "space_to_batch",
        "space_to_batch_v2",
        "space_to_depth",
        "space_to_depth_v2",
        "depth_to_space",
        "depth_to_space_v2",
        "batch_to_space",
        "batch_to_space_v2",
        "one_hot",
        "_all_dimensions",
        "sequence_mask",
        "squeeze",
        "squeeze_v2",
        "where",
        "where_v2",
        "reverse_sequence",
        "reverse_sequence_v2",
        "gather",
        "gather_v2",
        "batch_gather",
        "_batch_gather",
        "gather_nd",
        "gather_nd_v2",
        "batch_gather_nd",
        "tensor_scatter_nd_update",
        "quantize_v2",
        "quantize",
        "dequantize",
        "quantize_and_dequantize",
        "quantize_and_dequantize_v2",
        "searchsorted",
        "extract_image_patches_v2",
        "extract_image_patches",
        "fingerprint",
        "convert_to_int_tensor",
        "get_positive_axis",
        "repeat_with_axis",
        "tile_one_dimension",
        "_with_nonzero_rank",
        "repeat",
        "_maybe_cast",
        "_apply_mask_1d",
        "wrapped",
        "assign",
        "canonical"
    ],
    "gen_script_ops": [
        "eager_py_func",
        "eager_py_func_eager_fallback",
        "py_func",
        "py_func_eager_fallback",
        "py_func_stateless",
        "py_func_stateless_eager_fallback"
    ],
    "gen_batch_ops": [
        "batch",
        "batch_eager_fallback",
        "batch_function",
        "batch_function_eager_fallback",
        "unbatch",
        "unbatch_eager_fallback",
        "unbatch_grad",
        "unbatch_grad_eager_fallback"
    ],
    "custom_gradient": [
        "custom_gradient",
        "Bind",
        "get_variable_by_name",
        "_get_dependent_variables",
        "_graph_mode_decorator",
        "_eager_mode_decorator",
        "recompute_grad",
        "grad_pass_through",
        "decorated",
        "decorator",
        "__get__",
        "__call__",
        "tape_grad_fn",
        "internal_grad_fn",
        "actual_grad_fn",
        "inner",
        "_grad_pass_through_op",
        "grad_wrapper",
        "grad",
        "inner_recompute_grad",
        "transpose"
    ],
    "linalg_grad": [
        "_MatrixInverseGrad",
        "_EinsumGrad",
        "_MatrixDeterminantGrad",
        "_MatrixSquareRootGrad",
        "_LogMatrixDeterminantGrad",
        "_CholeskyGrad",
        "_QrGrad",
        "_MatrixSolveGrad",
        "_MatrixSolveLsGrad",
        "_BandedTriangularSolveGrad",
        "_MatrixTriangularSolveGrad",
        "_SafeReciprocal",
        "_EigGrad",
        "_SelfAdjointEigV2Grad",
        "_SvdGrad",
        "_LeftShift",
        "_RightShift",
        "_TridiagonalMatMulGrad",
        "_TridiagonalSolveGrad",
        "_TransposeTridiagonalMatrix",
        "_MatmulExtractingThreeDiagonals",
        "_GetAxisFromLabel",
        "_GetBcastSubshape",
        "_GetReducedSubscripts",
        "_GetGradReduced",
        "_GetGradWrt",
        "_KroneckerProduct",
        "_TriangularSolve",
        "_QrGradSquareAndDeepMatrices",
        "_Overdetermined",
        "_Underdetermined"
    ],
    "clip_ops": [
        "clip_by_value",
        "_clip_by_value_grad",
        "clip_by_norm",
        "global_norm",
        "clip_by_global_norm",
        "clip_by_average_norm"
    ],
    "gen_ctc_ops": [
        "ctc_beam_search_decoder",
        "ctc_beam_search_decoder_eager_fallback",
        "ctc_greedy_decoder",
        "ctc_greedy_decoder_eager_fallback",
        "ctc_loss",
        "ctc_loss_eager_fallback",
        "ctc_loss_v2",
        "ctc_loss_v2_eager_fallback"
    ],
    "gen_image_ops": [
        "adjust_contrast",
        "adjust_contrast_eager_fallback",
        "adjust_contrastv2",
        "adjust_contrastv2_eager_fallback",
        "adjust_hue",
        "adjust_hue_eager_fallback",
        "adjust_saturation",
        "adjust_saturation_eager_fallback",
        "combined_non_max_suppression",
        "combined_non_max_suppression_eager_fallback",
        "crop_and_resize",
        "crop_and_resize_eager_fallback",
        "crop_and_resize_grad_boxes",
        "crop_and_resize_grad_boxes_eager_fallback",
        "crop_and_resize_grad_image",
        "crop_and_resize_grad_image_eager_fallback",
        "decode_and_crop_jpeg",
        "decode_and_crop_jpeg_eager_fallback",
        "decode_bmp",
        "decode_bmp_eager_fallback",
        "decode_gif",
        "decode_gif_eager_fallback",
        "decode_image",
        "decode_image_eager_fallback",
        "decode_jpeg",
        "decode_jpeg_eager_fallback",
        "decode_png",
        "decode_png_eager_fallback",
        "draw_bounding_boxes",
        "draw_bounding_boxes_eager_fallback",
        "draw_bounding_boxes_v2",
        "draw_bounding_boxes_v2_eager_fallback",
        "encode_jpeg",
        "encode_jpeg_eager_fallback",
        "encode_jpeg_variable_quality",
        "encode_jpeg_variable_quality_eager_fallback",
        "encode_png",
        "encode_png_eager_fallback",
        "extract_glimpse",
        "extract_glimpse_eager_fallback",
        "extract_glimpse_v2",
        "extract_glimpse_v2_eager_fallback",
        "extract_jpeg_shape",
        "extract_jpeg_shape_eager_fallback",
        "generate_bounding_box_proposals",
        "generate_bounding_box_proposals_eager_fallback",
        "hsv_to_rgb",
        "hsv_to_rgb_eager_fallback",
        "image_projective_transform_v2",
        "image_projective_transform_v2_eager_fallback",
        "image_projective_transform_v3",
        "image_projective_transform_v3_eager_fallback",
        "non_max_suppression",
        "non_max_suppression_eager_fallback",
        "non_max_suppression_v2",
        "non_max_suppression_v2_eager_fallback",
        "non_max_suppression_v3",
        "non_max_suppression_v3_eager_fallback",
        "non_max_suppression_v4",
        "non_max_suppression_v4_eager_fallback",
        "non_max_suppression_v5",
        "non_max_suppression_v5_eager_fallback",
        "non_max_suppression_with_overlaps",
        "non_max_suppression_with_overlaps_eager_fallback",
        "quantized_resize_bilinear",
        "quantized_resize_bilinear_eager_fallback",
        "rgb_to_hsv",
        "rgb_to_hsv_eager_fallback",
        "random_crop",
        "random_crop_eager_fallback",
        "resize_area",
        "resize_area_eager_fallback",
        "resize_bicubic",
        "resize_bicubic_eager_fallback",
        "resize_bicubic_grad",
        "resize_bicubic_grad_eager_fallback",
        "resize_bilinear",
        "resize_bilinear_eager_fallback",
        "resize_bilinear_grad",
        "resize_bilinear_grad_eager_fallback",
        "resize_nearest_neighbor",
        "resize_nearest_neighbor_eager_fallback",
        "resize_nearest_neighbor_grad",
        "resize_nearest_neighbor_grad_eager_fallback",
        "sample_distorted_bounding_box",
        "sample_distorted_bounding_box_eager_fallback",
        "sample_distorted_bounding_box_v2",
        "sample_distorted_bounding_box_v2_eager_fallback",
        "scale_and_translate",
        "scale_and_translate_eager_fallback",
        "scale_and_translate_grad",
        "scale_and_translate_grad_eager_fallback",
        "stateless_sample_distorted_bounding_box",
        "stateless_sample_distorted_bounding_box_eager_fallback"
    ],
    "cond_v2": [
        "cond_v2",
        "_IfGrad",
        "_run_as_function_for_tape_gradients",
        "_build_cond",
        "get_func_graphs",
        "_grad_fn",
        "_create_grad_func",
        "_resolve_grad_inputs",
        "_get_intermediates",
        "_make_intermediates_match",
        "_make_intermediates_match_xla",
        "_make_inputs_match",
        "_create_zeros_for_none_grads",
        "_make_output_composite_tensors_match",
        "_make_indexed_slices_indices_types_match",
        "_get_op_and_outputs",
        "_pack_sequence_as",
        "_wrap_intermediates",
        "_create_dummy_input",
        "_create_none_optionals",
        "_create_fakeparams",
        "_check_same_outputs",
        "_get_output_shapes",
        "_copy_handle_data",
        "verify_captures",
        "_CondGradFuncGraph",
        "indexed_case",
        "_CaseGrad",
        "_build_case",
        "_set_read_only_resource_inputs_attr",
        "_get_func_graph_for_branch",
        "error",
        "wrapped_intermediates",
        "xla_intermediates",
        "_capture_helper",
        "_run_make_and_extract_op",
        "make_op",
        "_make_op"
    ],
    "histogram_ops": [
        "histogram_fixed_width_bins",
        "histogram_fixed_width"
    ],
    "gen_spectral_ops": [
        "batch_fft",
        "batch_fft_eager_fallback",
        "batch_fft2d",
        "batch_fft2d_eager_fallback",
        "batch_fft3d",
        "batch_fft3d_eager_fallback",
        "batch_ifft",
        "batch_ifft_eager_fallback",
        "batch_ifft2d",
        "batch_ifft2d_eager_fallback",
        "batch_ifft3d",
        "batch_ifft3d_eager_fallback",
        "fft",
        "fft_eager_fallback",
        "fft2d",
        "fft2d_eager_fallback",
        "fft3d",
        "fft3d_eager_fallback",
        "ifft",
        "ifft_eager_fallback",
        "ifft2d",
        "ifft2d_eager_fallback",
        "ifft3d",
        "ifft3d_eager_fallback",
        "irfft",
        "irfft_eager_fallback",
        "irfft2d",
        "irfft2d_eager_fallback",
        "irfft3d",
        "irfft3d_eager_fallback",
        "rfft",
        "rfft_eager_fallback",
        "rfft2d",
        "rfft2d_eager_fallback",
        "rfft3d",
        "rfft3d_eager_fallback"
    ],
    "gen_sdca_ops": [
        "sdca_fprint",
        "sdca_fprint_eager_fallback",
        "sdca_optimizer",
        "sdca_optimizer_eager_fallback",
        "sdca_optimizer_v2",
        "sdca_optimizer_v2_eager_fallback",
        "sdca_shrink_l1",
        "sdca_shrink_l1_eager_fallback"
    ],
    "gen_tensor_forest_ops": [
        "tensor_forest_create_tree_variable",
        "tensor_forest_create_tree_variable_eager_fallback",
        "tensor_forest_tree_deserialize",
        "tensor_forest_tree_deserialize_eager_fallback",
        "tensor_forest_tree_is_initialized_op",
        "tensor_forest_tree_is_initialized_op_eager_fallback",
        "tensor_forest_tree_predict",
        "tensor_forest_tree_predict_eager_fallback",
        "tensor_forest_tree_resource_handle_op",
        "tensor_forest_tree_resource_handle_op_eager_fallback",
        "tensor_forest_tree_serialize",
        "tensor_forest_tree_serialize_eager_fallback",
        "tensor_forest_tree_size",
        "tensor_forest_tree_size_eager_fallback"
    ],
    "gen_ragged_math_ops": [
        "ragged_range",
        "ragged_range_eager_fallback"
    ],
    "gen_candidate_sampling_ops": [
        "all_candidate_sampler",
        "all_candidate_sampler_eager_fallback",
        "compute_accidental_hits",
        "compute_accidental_hits_eager_fallback",
        "fixed_unigram_candidate_sampler",
        "fixed_unigram_candidate_sampler_eager_fallback",
        "learned_unigram_candidate_sampler",
        "learned_unigram_candidate_sampler_eager_fallback",
        "log_uniform_candidate_sampler",
        "log_uniform_candidate_sampler_eager_fallback",
        "thread_unsafe_unigram_candidate_sampler",
        "thread_unsafe_unigram_candidate_sampler_eager_fallback",
        "uniform_candidate_sampler",
        "uniform_candidate_sampler_eager_fallback"
    ],
    "gen_boosted_trees_ops": [
        "boosted_trees_aggregate_stats",
        "boosted_trees_aggregate_stats_eager_fallback",
        "boosted_trees_bucketize",
        "boosted_trees_bucketize_eager_fallback",
        "boosted_trees_calculate_best_feature_split",
        "boosted_trees_calculate_best_feature_split_eager_fallback",
        "boosted_trees_calculate_best_feature_split_v2",
        "boosted_trees_calculate_best_feature_split_v2_eager_fallback",
        "boosted_trees_calculate_best_gains_per_feature",
        "boosted_trees_calculate_best_gains_per_feature_eager_fallback",
        "boosted_trees_center_bias",
        "boosted_trees_center_bias_eager_fallback",
        "boosted_trees_create_ensemble",
        "boosted_trees_create_ensemble_eager_fallback",
        "boosted_trees_create_quantile_stream_resource",
        "boosted_trees_create_quantile_stream_resource_eager_fallback",
        "boosted_trees_deserialize_ensemble",
        "boosted_trees_deserialize_ensemble_eager_fallback",
        "boosted_trees_ensemble_resource_handle_op",
        "boosted_trees_ensemble_resource_handle_op_eager_fallback",
        "boosted_trees_example_debug_outputs",
        "boosted_trees_example_debug_outputs_eager_fallback",
        "boosted_trees_flush_quantile_summaries",
        "boosted_trees_flush_quantile_summaries_eager_fallback",
        "boosted_trees_get_ensemble_states",
        "boosted_trees_get_ensemble_states_eager_fallback",
        "boosted_trees_make_quantile_summaries",
        "boosted_trees_make_quantile_summaries_eager_fallback",
        "boosted_trees_make_stats_summary",
        "boosted_trees_make_stats_summary_eager_fallback",
        "boosted_trees_predict",
        "boosted_trees_predict_eager_fallback",
        "boosted_trees_quantile_stream_resource_add_summaries",
        "boosted_trees_quantile_stream_resource_add_summaries_eager_fallback",
        "boosted_trees_quantile_stream_resource_deserialize",
        "boosted_trees_quantile_stream_resource_deserialize_eager_fallback",
        "boosted_trees_quantile_stream_resource_flush",
        "boosted_trees_quantile_stream_resource_flush_eager_fallback",
        "boosted_trees_quantile_stream_resource_get_bucket_boundaries",
        "boosted_trees_quantile_stream_resource_get_bucket_boundaries_eager_fallback",
        "boosted_trees_quantile_stream_resource_handle_op",
        "boosted_trees_quantile_stream_resource_handle_op_eager_fallback",
        "boosted_trees_serialize_ensemble",
        "boosted_trees_serialize_ensemble_eager_fallback",
        "boosted_trees_sparse_aggregate_stats",
        "boosted_trees_sparse_aggregate_stats_eager_fallback",
        "boosted_trees_sparse_calculate_best_feature_split",
        "boosted_trees_sparse_calculate_best_feature_split_eager_fallback",
        "boosted_trees_training_predict",
        "boosted_trees_training_predict_eager_fallback",
        "boosted_trees_update_ensemble",
        "boosted_trees_update_ensemble_eager_fallback",
        "boosted_trees_update_ensemble_v2",
        "boosted_trees_update_ensemble_v2_eager_fallback",
        "is_boosted_trees_ensemble_initialized",
        "is_boosted_trees_ensemble_initialized_eager_fallback",
        "is_boosted_trees_quantile_stream_resource_initialized",
        "is_boosted_trees_quantile_stream_resource_initialized_eager_fallback"
    ],
    "manip_ops": [
        "roll"
    ],
    "unconnected_gradients": [
        "UnconnectedGradients"
    ],
    "nn_impl": [
        "log_poisson_loss",
        "sigmoid_cross_entropy_with_logits",
        "sigmoid_cross_entropy_with_logits_v2",
        "weighted_cross_entropy_with_logits_v2",
        "weighted_cross_entropy_with_logits",
        "compute_average_loss",
        "scale_regularization_loss",
        "relu_layer",
        "swish",
        "normalize",
        "l2_normalize",
        "l2_normalize_v2",
        "_count_nonzero",
        "zero_fraction",
        "depthwise_conv2d",
        "depthwise_conv2d_v2",
        "separable_conv2d",
        "separable_conv2d_v2",
        "sufficient_statistics",
        "sufficient_statistics_v2",
        "normalize_moments",
        "moments",
        "moments_v2",
        "weighted_moments",
        "weighted_moments_v2",
        "batch_normalization",
        "fused_batch_norm",
        "batch_norm_with_global_normalization",
        "batch_norm_with_global_normalization_v2",
        "_sum_rows",
        "_compute_sampled_logits",
        "nce_loss_v2",
        "nce_loss",
        "sampled_softmax_loss_v2",
        "sampled_softmax_loss",
        "grad",
        "op",
        "op"
    ],
    "parsing_ops": [
        "_ParseExampleDataset",
        "parse_example_dataset",
        "element_spec",
        "_apply_fn"
    ],
    "gen_checkpoint_ops": [
        "generate_vocab_remapping",
        "generate_vocab_remapping_eager_fallback",
        "load_and_remap_matrix",
        "load_and_remap_matrix_eager_fallback"
    ],
    "variable_scope": [
        "_PartitionInfo",
        "_ReuseMode",
        "enable_resource_variables",
        "resource_variables_enabled",
        "disable_resource_variables",
        "_needs_no_arguments",
        "_VariableStore",
        "_LazyEvalTensor",
        "_make_master_property",
        "_make_master_method",
        "_make_op_method",
        "no_regularizer",
        "VariableScope",
        "_VariableScopeStore",
        "get_variable_scope_store",
        "get_variable_scope",
        "_get_default_variable_store",
        "with_variable_store",
        "EagerVariableStore",
        "get_variable",
        "get_local_variable",
        "_get_partitioned_variable",
        "_pure_variable_scope",
        "_maybe_wrap_custom_getter",
        "_get_unique_variable_scope",
        "variable_scope",
        "variable_op_scope",
        "_call_partitioner",
        "_get_slice_dim_and_num_slices",
        "_iter_slices",
        "default_variable_creator",
        "default_variable_creator_v2",
        "_make_getter",
        "variable_creator_scope_v1",
        "variable_creator_scope",
        "full_shape",
        "var_offset",
        "single_offset",
        "single_slice_dim",
        "get_variable",
        "_get_partitioned_variable",
        "_get_single_variable",
        "_get_default_initializer",
        "_as_tensor",
        "prop",
        "method",
        "method",
        "name",
        "original_name_scope",
        "reuse",
        "initializer",
        "dtype",
        "use_resource",
        "regularizer",
        "caching_device",
        "partitioner",
        "custom_getter",
        "constraint",
        "reuse_variables",
        "set_initializer",
        "set_dtype",
        "set_use_resource",
        "set_regularizer",
        "set_caching_device",
        "set_partitioner",
        "set_custom_getter",
        "get_collection",
        "trainable_variables",
        "global_variables",
        "local_variables",
        "get_variable",
        "_get_partitioned_variable",
        "open_variable_scope",
        "close_variable_subscopes",
        "variable_scope_count",
        "as_default",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "copy",
        "__enter__",
        "__exit__",
        "wrapped_custom_getter",
        "__enter__",
        "_enter_scope_uncached",
        "__exit__",
        "_true_getter",
        "make_regularizer_op"
    ],
    "io_ops": [
        "_save",
        "_restore_slice",
        "ReaderBase",
        "WholeFileReader",
        "TextLineReader",
        "FixedLengthRecordReader",
        "TFRecordReader",
        "LMDBReader",
        "IdentityReader",
        "reader_ref",
        "read",
        "read_up_to",
        "num_records_produced",
        "num_work_units_completed",
        "serialize_state",
        "restore_state",
        "supports_serialize",
        "reset"
    ],
    "embedding_ops": [
        "_clip",
        "_embedding_lookup_and_transform",
        "embedding_lookup",
        "embedding_lookup_v2",
        "embedding_lookup_sparse",
        "embedding_lookup_sparse_v2",
        "safe_embedding_lookup_sparse_v2",
        "safe_embedding_lookup_sparse",
        "embedding_lookup_ragged",
        "_prune_invalid_ids",
        "_prune_invalid_weights",
        "_rank"
    ],
    "weights_broadcast_ops": [
        "_has_valid_dims",
        "_has_valid_nonscalar_shape",
        "assert_broadcastable",
        "broadcast_weights"
    ],
    "while_v2_indexed_slices_rewriter": [
        "rewrite_grad_indexed_slices",
        "_get_tensor_index_in_iterable",
        "_rewrite_output_as_tensor",
        "_rewrite_input_as_indexed_slices",
        "_create_grad_indexed_slices_init",
        "_rewrite_grad_indexed_slices_output",
        "_update_indexed_slices_param",
        "_flatten",
        "rewrite"
    ],
    "map_fn": [
        "map_fn",
        "_dtype_to_spec",
        "_most_general_compatible_type",
        "_result_flat_signature_to_batchable_tensor_spec",
        "_elems_flat_to_batchable",
        "_elems_value_batchable_to_flat",
        "_result_value_flat_to_batchable",
        "_result_batchable_to_flat",
        "map_fn_v2",
        "compute"
    ],
    "gen_sparse_ops": [
        "add_many_sparse_to_tensors_map",
        "add_many_sparse_to_tensors_map_eager_fallback",
        "add_sparse_to_tensors_map",
        "add_sparse_to_tensors_map_eager_fallback",
        "deserialize_many_sparse",
        "deserialize_many_sparse_eager_fallback",
        "deserialize_sparse",
        "deserialize_sparse_eager_fallback",
        "serialize_many_sparse",
        "serialize_many_sparse_eager_fallback",
        "serialize_sparse",
        "serialize_sparse_eager_fallback",
        "sparse_add",
        "sparse_add_eager_fallback",
        "sparse_add_grad",
        "sparse_add_grad_eager_fallback",
        "sparse_concat",
        "sparse_concat_eager_fallback",
        "sparse_cross",
        "sparse_cross_eager_fallback",
        "sparse_cross_hashed",
        "sparse_cross_hashed_eager_fallback",
        "sparse_cross_v2",
        "sparse_cross_v2_eager_fallback",
        "sparse_dense_cwise_add",
        "sparse_dense_cwise_add_eager_fallback",
        "sparse_dense_cwise_div",
        "sparse_dense_cwise_div_eager_fallback",
        "sparse_dense_cwise_mul",
        "sparse_dense_cwise_mul_eager_fallback",
        "sparse_fill_empty_rows",
        "sparse_fill_empty_rows_eager_fallback",
        "sparse_fill_empty_rows_grad",
        "sparse_fill_empty_rows_grad_eager_fallback",
        "sparse_reduce_max",
        "sparse_reduce_max_eager_fallback",
        "sparse_reduce_max_sparse",
        "sparse_reduce_max_sparse_eager_fallback",
        "sparse_reduce_sum",
        "sparse_reduce_sum_eager_fallback",
        "sparse_reduce_sum_sparse",
        "sparse_reduce_sum_sparse_eager_fallback",
        "sparse_reorder",
        "sparse_reorder_eager_fallback",
        "sparse_reshape",
        "sparse_reshape_eager_fallback",
        "sparse_slice",
        "sparse_slice_eager_fallback",
        "sparse_slice_grad",
        "sparse_slice_grad_eager_fallback",
        "sparse_softmax",
        "sparse_softmax_eager_fallback",
        "sparse_sparse_maximum",
        "sparse_sparse_maximum_eager_fallback",
        "sparse_sparse_minimum",
        "sparse_sparse_minimum_eager_fallback",
        "sparse_split",
        "sparse_split_eager_fallback",
        "sparse_tensor_dense_add",
        "sparse_tensor_dense_add_eager_fallback",
        "sparse_tensor_dense_mat_mul",
        "sparse_tensor_dense_mat_mul_eager_fallback",
        "sparse_to_dense",
        "sparse_to_dense_eager_fallback",
        "take_many_sparse_from_tensors_map",
        "take_many_sparse_from_tensors_map_eager_fallback"
    ],
    "numerics": [
        "verify_tensor_all_finite",
        "verify_tensor_all_finite_v2",
        "add_check_numerics_ops"
    ],
    "gen_ragged_conversion_ops": [
        "ragged_tensor_from_variant",
        "ragged_tensor_from_variant_eager_fallback",
        "ragged_tensor_to_sparse",
        "ragged_tensor_to_sparse_eager_fallback",
        "ragged_tensor_to_tensor",
        "ragged_tensor_to_tensor_eager_fallback",
        "ragged_tensor_to_variant",
        "ragged_tensor_to_variant_eager_fallback",
        "ragged_tensor_to_variant_gradient",
        "ragged_tensor_to_variant_gradient_eager_fallback"
    ],
    "tensor_array_ops": [
        "_GraphTensorArray",
        "_GraphTensorArrayV2",
        "_EagerTensorArray",
        "TensorArray",
        "build_ta_with_new_flow",
        "_check_dtypes",
        "TensorArraySpec",
        "flow",
        "dtype",
        "handle",
        "element_shape",
        "_check_element_shape",
        "_maybe_colocate_with",
        "identity",
        "grad",
        "read",
        "write",
        "stack",
        "gather",
        "concat",
        "unstack",
        "scatter",
        "split",
        "size",
        "close",
        "flow",
        "dtype",
        "element_shape",
        "handle",
        "_check_element_shape",
        "identity",
        "grad",
        "read",
        "write",
        "stack",
        "gather",
        "concat",
        "unstack",
        "scatter",
        "split",
        "size",
        "close",
        "flow",
        "dtype",
        "handle",
        "element_shape",
        "identity",
        "grad",
        "read",
        "_write",
        "write",
        "_maybe_zero",
        "stack",
        "gather",
        "concat",
        "unstack",
        "scatter",
        "split",
        "size",
        "close",
        "flow",
        "dtype",
        "handle",
        "element_shape",
        "dynamic_size",
        "_infer_shape",
        "identity",
        "grad",
        "read",
        "write",
        "stack",
        "gather",
        "concat",
        "unstack",
        "scatter",
        "split",
        "size",
        "close",
        "is_compatible_with",
        "most_specific_compatible_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "create"
    ],
    "gen_encode_proto_ops": [
        "encode_proto",
        "encode_proto_eager_fallback"
    ],
    "array_grad": [
        "_PackGrad",
        "_UnpackGrad",
        "_ConcatGradHelper",
        "_ConcatGrad",
        "_ConcatGradV2",
        "_SliceGrad",
        "_StridedSliceGrad",
        "_StridedSliceGradGrad",
        "_TensorStridedSliceUpdateGrad",
        "_SplitGrad",
        "_SplitVGrad",
        "_DiagGrad",
        "_DiagPartGrad",
        "_MatrixDiagGrad",
        "_MatrixDiagV2Grad",
        "_MatrixDiagV3Grad",
        "_MatrixDiagPartGrad",
        "_MatrixDiagPartV2Grad",
        "_MatrixDiagPartV3Grad",
        "_MatrixSetDiagGrad",
        "_MatrixSetDiagGradV2",
        "_MatrixSetDiagGradV3",
        "_MatrixBandPartGrad",
        "_FillGrad",
        "_PreventGradientGrad",
        "_IndexedSlicesToTensorNoWarning",
        "_GatherGrad",
        "_GetBatchIndices",
        "_BatchGatherGrad",
        "_GatherV2Grad",
        "_GatherNdGrad",
        "_ResourceGatherNdGrad",
        "_CheckNumericsGrad",
        "_CheckNumericsV2Grad",
        "_IdGrad",
        "_RefIdGrad",
        "_IdNGrad",
        "_ReshapeGrad",
        "_ReshapeToInput",
        "_ExpandDimsGrad",
        "_SqueezeGrad",
        "_TransposeGrad",
        "_ConjugateTransposeGrad",
        "_TileGrad",
        "_PadGrad",
        "_ReverseSequenceGrad",
        "_ReverseGrad",
        "_ReverseV2Grad",
        "_SpaceToBatchGrad",
        "_SpaceToBatchNDGrad",
        "_BatchToSpaceGrad",
        "_BatchToSpaceNDGrad",
        "_SpaceToDepthGrad",
        "_DepthToSpaceGrad",
        "_MirrorPadGrad",
        "_MirrorPadGradGrad",
        "_QuantizeAndDequantizeGrad",
        "_QuantizeAndDequantizeV2Grad",
        "_QuantizeAndDequantizeV3Grad",
        "_ExtractImagePatchesGrad",
        "_ExtractVolumePatchesGrad",
        "_ScatterNdGrad",
        "_TensorScatterUpdateGrad",
        "_TensorScatterAddGrad",
        "_TensorScatterMinOrMaxGrad",
        "_TensorScatterMaxGrad",
        "_TensorScatterMinGrad",
        "_TensorScatterSubGrad",
        "_ScatterNdNonAliasingAddGrad",
        "_BroadcastToGrad",
        "_CreateDenseMaskAndBegin",
        "_ExtractInputShapes",
        "Apply"
    ],
    "gradients_util": [
        "_MarkReachedOps",
        "_PendingCount",
        "_AsList",
        "_DefaultGradYs",
        "_IsBackpropagatable",
        "_VerifyGeneratedGradients",
        "_StopOps",
        "_maybe_colocate_with",
        "_IsPartitionedCall",
        "_SymGrad",
        "_MaybeCompile",
        "_RaiseNoGradWrtInitialLoopValError",
        "_IsFunction",
        "_Captures",
        "_MaybeCaptured",
        "_NonEagerInputs",
        "_Inputs",
        "_Consumers",
        "_GradientsHelper",
        "_HasAnyNotNoneGrads",
        "_UpdatePendingAndEnqueueReady",
        "_SetGrad",
        "_ZerosLike",
        "_GetGrad",
        "_GetGrads",
        "_AccumulatorShape",
        "_LogOpGradients",
        "_MultiDeviceAddN",
        "AggregationMethod",
        "_AggregatedGrads",
        "PossibleTapeGradientTypes",
        "_FilterGrad",
        "DeviceKey"
    ],
    "math_grad": [
        "_safe_shape_div",
        "_ArgMaxGrad",
        "_ArgMinGrad",
        "_EuclideanNormGrad",
        "SmartBroadcastGradientArgs",
        "_IsScalar",
        "_SumGrad",
        "_MinOrMaxGrad",
        "_MaxGrad",
        "_MinGrad",
        "_MeanGrad",
        "_ProdGrad",
        "_SegmentSumGrad",
        "_SegmentMeanGrad",
        "_SparseSegmentSumGrad",
        "_SparseSegmentSumWithNumSegmentsGrad",
        "_SparseSegmentMeanGrad",
        "_SparseSegmentMeanWithNumSegmentsGrad",
        "_SparseSegmentSqrtNGrad",
        "_SparseSegmentSqrtNWithNumSegmentsGrad",
        "_SegmentMinOrMaxGrad",
        "_SegmentMinGrad",
        "_SegmentMaxGrad",
        "_GatherDropNegatives",
        "_UnsortedSegmentMinOrMaxGrad",
        "_UnsortedSegmentSumGrad",
        "_UnsortedSegmentMaxGrad",
        "_UnsortedSegmentMinGrad",
        "_UnsortedSegmentProdGrad",
        "_AbsGrad",
        "_NegGrad",
        "_InvGrad",
        "_ReciprocalGrad",
        "_InvGradGrad",
        "_ReciprocalGradGrad",
        "_SquareGrad",
        "_SqrtGrad",
        "_SqrtGradGrad",
        "_RsqrtGrad",
        "_RsqrtGradGrad",
        "_ExpGrad",
        "_Expm1Grad",
        "_LogGrad",
        "_Log1pGrad",
        "_XLogyGrad",
        "_XLog1pyGrad",
        "_XDivyGrad",
        "_SinhGrad",
        "_CoshGrad",
        "_TanhGrad",
        "_AsinhGrad",
        "_AcoshGrad",
        "_AtanhGrad",
        "_TanhGradGrad",
        "_ErfGrad",
        "_ErfcGrad",
        "_ErfinvGrad",
        "_NdtriGrad",
        "_LgammaGrad",
        "_DigammaGrad",
        "_DawsnGrad",
        "_ExpintGrad",
        "_FresnelCosGrad",
        "_FresnelSinGrad",
        "_SpenceGrad",
        "_BesselI0Grad",
        "_BesselI0eGrad",
        "_BesselI1Grad",
        "_BesselI1eGrad",
        "_BesselK0Grad",
        "_BesselK0eGrad",
        "_BesselK1Grad",
        "_BesselK1eGrad",
        "_BesselJ0Grad",
        "_BesselJ1Grad",
        "_BesselY0Grad",
        "_BesselY1Grad",
        "_IgammaGrad",
        "_IgammacGrad",
        "_BetaincGrad",
        "_ZetaGrad",
        "_PolygammaGrad",
        "_SigmoidGrad",
        "_SigmoidGradGrad",
        "_SignGrad",
        "_SinGrad",
        "_CosGrad",
        "_TanGrad",
        "_AsinGrad",
        "_AcosGrad",
        "_AtanGrad",
        "_Atan2Grad",
        "_AddNGrad",
        "_ShapesFullySpecifiedAndEqual",
        "_AddGrad",
        "_SubGrad",
        "_MulGrad",
        "_MulNoNanGrad",
        "_DivGrad",
        "_FloorDivGrad",
        "_FloorModGrad",
        "_TruncateDivGrad",
        "_RealDivGrad",
        "_DivNoNanGrad",
        "_PowGrad",
        "_MaximumMinimumGradInputOnly",
        "_MaximumMinimumGrad",
        "_MaximumGrad",
        "_MinimumGrad",
        "_SquaredDifferenceGrad",
        "_SelectGrad",
        "_SelectGradV2",
        "_MatMulGradAgainstFirstOnly",
        "_MatMulGradAgainstSecondOnly",
        "_MatMulGrad",
        "_SparseMatMulGrad",
        "_FloorGrad",
        "_CeilGrad",
        "_RoundGrad",
        "_RintGrad",
        "_BatchMatMul",
        "_BatchMatMulV2",
        "_ComplexGrad",
        "_RealGrad",
        "_ImagGrad",
        "_AngleGrad",
        "_ConjGrad",
        "_ComplexAbsGrad",
        "_CastGrad",
        "_CrossGrad",
        "_CumsumGrad",
        "_CumprodGrad",
        "_CumulativeLogsumexpGrad",
        "_NextAfterGrad",
        "_SparseMatMul",
        "EvaluateAsTuple"
    ],
    "init_ops": [
        "Initializer",
        "Zeros",
        "Ones",
        "Constant",
        "RandomUniform",
        "RandomNormal",
        "TruncatedNormal",
        "UniformUnitScaling",
        "VarianceScaling",
        "Orthogonal",
        "ConvolutionDeltaOrthogonal",
        "ConvolutionOrthogonal",
        "ConvolutionOrthogonal2D",
        "ConvolutionOrthogonal1D",
        "ConvolutionOrthogonal3D",
        "Identity",
        "GlorotUniform",
        "GlorotNormal",
        "lecun_normal",
        "lecun_uniform",
        "he_normal",
        "he_uniform",
        "_compute_fans",
        "_assert_float_dtype",
        "__call__",
        "get_config",
        "from_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "_orthogonal_matrix",
        "_symmetric_projection",
        "__call__",
        "_dict_to_tensor",
        "_block_orth",
        "_matrix_conv",
        "_orthogonal_kernel",
        "__call__",
        "_dict_to_tensor",
        "_block_orth",
        "_matrix_conv",
        "_orthogonal_kernel",
        "__call__",
        "_dict_to_tensor",
        "_block_orth",
        "_matrix_conv",
        "_orthogonal_kernel",
        "__call__",
        "get_config",
        "get_config",
        "get_config",
        "matmul",
        "cast"
    ],
    "session_ops": [
        "encode_resource_handle",
        "TensorHandle",
        "get_session_handle",
        "get_session_tensor",
        "delete_session_tensor",
        "_register_handle_feeder",
        "_get_handle_feeder",
        "_get_handle_reader",
        "_get_handle_mover",
        "_get_handle_deleter",
        "__del__",
        "__str__",
        "_get_resource_handle",
        "to_numpy_array",
        "handle",
        "eval",
        "delete",
        "get_raw_handle",
        "_get_device_name",
        "_get_reader_key",
        "_get_mover_key"
    ],
    "gen_stateless_random_ops_v2": [
        "stateless_random_get_key_counter_alg",
        "stateless_random_get_key_counter_alg_eager_fallback",
        "stateless_random_normal_v2",
        "stateless_random_normal_v2_eager_fallback",
        "stateless_random_uniform_full_int_v2",
        "stateless_random_uniform_full_int_v2_eager_fallback",
        "stateless_random_uniform_int_v2",
        "stateless_random_uniform_int_v2_eager_fallback",
        "stateless_random_uniform_v2",
        "stateless_random_uniform_v2_eager_fallback",
        "stateless_truncated_normal_v2",
        "stateless_truncated_normal_v2_eager_fallback"
    ],
    "gen_io_ops": [
        "fixed_length_record_reader",
        "fixed_length_record_reader_eager_fallback",
        "fixed_length_record_reader_v2",
        "fixed_length_record_reader_v2_eager_fallback",
        "identity_reader",
        "identity_reader_eager_fallback",
        "identity_reader_v2",
        "identity_reader_v2_eager_fallback",
        "lmdb_reader",
        "lmdb_reader_eager_fallback",
        "matching_files",
        "matching_files_eager_fallback",
        "merge_v2_checkpoints",
        "merge_v2_checkpoints_eager_fallback",
        "read_file",
        "read_file_eager_fallback",
        "reader_num_records_produced",
        "reader_num_records_produced_eager_fallback",
        "reader_num_records_produced_v2",
        "reader_num_records_produced_v2_eager_fallback",
        "reader_num_work_units_completed",
        "reader_num_work_units_completed_eager_fallback",
        "reader_num_work_units_completed_v2",
        "reader_num_work_units_completed_v2_eager_fallback",
        "reader_read",
        "reader_read_eager_fallback",
        "reader_read_up_to",
        "reader_read_up_to_eager_fallback",
        "reader_read_up_to_v2",
        "reader_read_up_to_v2_eager_fallback",
        "reader_read_v2",
        "reader_read_v2_eager_fallback",
        "reader_reset",
        "reader_reset_eager_fallback",
        "reader_reset_v2",
        "reader_reset_v2_eager_fallback",
        "reader_restore_state",
        "reader_restore_state_eager_fallback",
        "reader_restore_state_v2",
        "reader_restore_state_v2_eager_fallback",
        "reader_serialize_state",
        "reader_serialize_state_eager_fallback",
        "reader_serialize_state_v2",
        "reader_serialize_state_v2_eager_fallback",
        "restore",
        "restore_eager_fallback",
        "restore_slice",
        "restore_slice_eager_fallback",
        "restore_v2",
        "restore_v2_eager_fallback",
        "save",
        "save_eager_fallback",
        "save_slices",
        "save_slices_eager_fallback",
        "save_v2",
        "save_v2_eager_fallback",
        "sharded_filename",
        "sharded_filename_eager_fallback",
        "sharded_filespec",
        "sharded_filespec_eager_fallback",
        "tf_record_reader",
        "tf_record_reader_eager_fallback",
        "tf_record_reader_v2",
        "tf_record_reader_v2_eager_fallback",
        "text_line_reader",
        "text_line_reader_eager_fallback",
        "text_line_reader_v2",
        "text_line_reader_v2_eager_fallback",
        "whole_file_reader",
        "whole_file_reader_eager_fallback",
        "whole_file_reader_v2",
        "whole_file_reader_v2_eager_fallback",
        "write_file",
        "write_file_eager_fallback"
    ],
    "list_ops": [
        "empty_tensor_list",
        "_set_handle_data",
        "tensor_list_reserve",
        "tensor_list_from_tensor",
        "tensor_list_get_item",
        "tensor_list_pop_back",
        "tensor_list_gather",
        "tensor_list_scatter",
        "tensor_list_stack",
        "tensor_list_concat",
        "tensor_list_split",
        "tensor_list_set_item",
        "_PushBackGrad",
        "_PopBackGrad",
        "_TensorListStackGrad",
        "_TensorListConcatGrad",
        "_TensorListSplitGrad",
        "_TensorListFromTensorGrad",
        "_TensorListGetItemGrad",
        "_TensorListSetItemGrad",
        "_TensorListResizeGrad",
        "_TensorListGatherGrad",
        "_TensorListScatterGrad",
        "_TensorListScatterIntoExistingListGrad",
        "_build_element_shape",
        "convert"
    ],
    "batch_ops": [
        "batch_function",
        "decorator",
        "decorated",
        "computation"
    ],
    "optional_grad": [
        "_OptionalFromValueGrad",
        "_OptionalGetValueGrad"
    ],
    "linalg_ops_impl": [
        "eye"
    ],
    "gen_array_ops": [
        "batch_matrix_band_part",
        "batch_matrix_band_part_eager_fallback",
        "batch_matrix_diag",
        "batch_matrix_diag_eager_fallback",
        "batch_matrix_diag_part",
        "batch_matrix_diag_part_eager_fallback",
        "batch_matrix_set_diag",
        "batch_matrix_set_diag_eager_fallback",
        "batch_to_space",
        "batch_to_space_eager_fallback",
        "batch_to_space_nd",
        "batch_to_space_nd_eager_fallback",
        "bitcast",
        "bitcast_eager_fallback",
        "broadcast_args",
        "broadcast_args_eager_fallback",
        "broadcast_gradient_args",
        "broadcast_gradient_args_eager_fallback",
        "broadcast_to",
        "broadcast_to_eager_fallback",
        "check_numerics",
        "check_numerics_eager_fallback",
        "check_numerics_v2",
        "check_numerics_v2_eager_fallback",
        "concat",
        "concat_eager_fallback",
        "concat_offset",
        "concat_offset_eager_fallback",
        "concat_v2",
        "concat_v2_eager_fallback",
        "conjugate_transpose",
        "conjugate_transpose_eager_fallback",
        "const",
        "const_eager_fallback",
        "debug_gradient_identity",
        "debug_gradient_identity_eager_fallback",
        "debug_gradient_ref_identity",
        "debug_gradient_ref_identity_eager_fallback",
        "deep_copy",
        "deep_copy_eager_fallback",
        "depth_to_space",
        "depth_to_space_eager_fallback",
        "dequantize",
        "dequantize_eager_fallback",
        "diag",
        "diag_eager_fallback",
        "diag_part",
        "diag_part_eager_fallback",
        "edit_distance",
        "edit_distance_eager_fallback",
        "empty",
        "empty_eager_fallback",
        "ensure_shape",
        "ensure_shape_eager_fallback",
        "expand_dims",
        "expand_dims_eager_fallback",
        "extract_image_patches",
        "extract_image_patches_eager_fallback",
        "extract_volume_patches",
        "extract_volume_patches_eager_fallback",
        "fake_quant_with_min_max_args",
        "fake_quant_with_min_max_args_eager_fallback",
        "fake_quant_with_min_max_args_gradient",
        "fake_quant_with_min_max_args_gradient_eager_fallback",
        "fake_quant_with_min_max_vars",
        "fake_quant_with_min_max_vars_eager_fallback",
        "fake_quant_with_min_max_vars_gradient",
        "fake_quant_with_min_max_vars_gradient_eager_fallback",
        "fake_quant_with_min_max_vars_per_channel",
        "fake_quant_with_min_max_vars_per_channel_eager_fallback",
        "fake_quant_with_min_max_vars_per_channel_gradient",
        "fake_quant_with_min_max_vars_per_channel_gradient_eager_fallback",
        "fill",
        "fill_eager_fallback",
        "fingerprint",
        "fingerprint_eager_fallback",
        "gather",
        "gather_eager_fallback",
        "gather_nd",
        "gather_nd_eager_fallback",
        "gather_v2",
        "gather_v2_eager_fallback",
        "guarantee_const",
        "guarantee_const_eager_fallback",
        "identity",
        "identity_eager_fallback",
        "identity_n",
        "identity_n_eager_fallback",
        "immutable_const",
        "immutable_const_eager_fallback",
        "inplace_add",
        "inplace_add_eager_fallback",
        "inplace_sub",
        "inplace_sub_eager_fallback",
        "inplace_update",
        "inplace_update_eager_fallback",
        "invert_permutation",
        "invert_permutation_eager_fallback",
        "list_diff",
        "list_diff_eager_fallback",
        "lower_bound",
        "lower_bound_eager_fallback",
        "matrix_band_part",
        "matrix_band_part_eager_fallback",
        "matrix_diag",
        "matrix_diag_eager_fallback",
        "matrix_diag_part",
        "matrix_diag_part_eager_fallback",
        "matrix_diag_part_v2",
        "matrix_diag_part_v2_eager_fallback",
        "matrix_diag_part_v3",
        "matrix_diag_part_v3_eager_fallback",
        "matrix_diag_v2",
        "matrix_diag_v2_eager_fallback",
        "matrix_diag_v3",
        "matrix_diag_v3_eager_fallback",
        "matrix_set_diag",
        "matrix_set_diag_eager_fallback",
        "matrix_set_diag_v2",
        "matrix_set_diag_v2_eager_fallback",
        "matrix_set_diag_v3",
        "matrix_set_diag_v3_eager_fallback",
        "mirror_pad",
        "mirror_pad_eager_fallback",
        "mirror_pad_grad",
        "mirror_pad_grad_eager_fallback",
        "one_hot",
        "one_hot_eager_fallback",
        "ones_like",
        "ones_like_eager_fallback",
        "pack",
        "pack_eager_fallback",
        "pad",
        "pad_eager_fallback",
        "pad_v2",
        "pad_v2_eager_fallback",
        "parallel_concat",
        "parallel_concat_eager_fallback",
        "placeholder",
        "placeholder_eager_fallback",
        "placeholder_v2",
        "placeholder_v2_eager_fallback",
        "placeholder_with_default",
        "placeholder_with_default_eager_fallback",
        "prevent_gradient",
        "prevent_gradient_eager_fallback",
        "quantize_and_dequantize",
        "quantize_and_dequantize_eager_fallback",
        "quantize_and_dequantize_v2",
        "quantize_and_dequantize_v2_eager_fallback",
        "quantize_and_dequantize_v3",
        "quantize_and_dequantize_v3_eager_fallback",
        "quantize_and_dequantize_v4",
        "quantize_and_dequantize_v4_eager_fallback",
        "quantize_and_dequantize_v4_grad",
        "quantize_and_dequantize_v4_grad_eager_fallback",
        "quantize_v2",
        "quantize_v2_eager_fallback",
        "quantized_concat",
        "quantized_concat_eager_fallback",
        "quantized_instance_norm",
        "quantized_instance_norm_eager_fallback",
        "quantized_reshape",
        "quantized_reshape_eager_fallback",
        "rank",
        "rank_eager_fallback",
        "ref_identity",
        "ref_identity_eager_fallback",
        "reshape",
        "reshape_eager_fallback",
        "resource_strided_slice_assign",
        "resource_strided_slice_assign_eager_fallback",
        "reverse",
        "reverse_eager_fallback",
        "reverse_sequence",
        "reverse_sequence_eager_fallback",
        "reverse_v2",
        "reverse_v2_eager_fallback",
        "scatter_nd",
        "scatter_nd_eager_fallback",
        "scatter_nd_non_aliasing_add",
        "scatter_nd_non_aliasing_add_eager_fallback",
        "shape",
        "shape_eager_fallback",
        "shape_n",
        "shape_n_eager_fallback",
        "size",
        "size_eager_fallback",
        "_slice",
        "_slice_eager_fallback",
        "snapshot",
        "snapshot_eager_fallback",
        "space_to_batch",
        "space_to_batch_eager_fallback",
        "space_to_batch_nd",
        "space_to_batch_nd_eager_fallback",
        "space_to_depth",
        "space_to_depth_eager_fallback",
        "split",
        "split_eager_fallback",
        "split_v",
        "split_v_eager_fallback",
        "squeeze",
        "squeeze_eager_fallback",
        "stop_gradient",
        "stop_gradient_eager_fallback",
        "strided_slice",
        "strided_slice_eager_fallback",
        "strided_slice_assign",
        "strided_slice_assign_eager_fallback",
        "strided_slice_grad",
        "strided_slice_grad_eager_fallback",
        "tensor_scatter_add",
        "tensor_scatter_add_eager_fallback",
        "tensor_scatter_max",
        "tensor_scatter_max_eager_fallback",
        "tensor_scatter_min",
        "tensor_scatter_min_eager_fallback",
        "tensor_scatter_sub",
        "tensor_scatter_sub_eager_fallback",
        "tensor_scatter_update",
        "tensor_scatter_update_eager_fallback",
        "tensor_strided_slice_update",
        "tensor_strided_slice_update_eager_fallback",
        "tile",
        "tile_eager_fallback",
        "tile_grad",
        "tile_grad_eager_fallback",
        "transpose",
        "transpose_eager_fallback",
        "unique",
        "unique_eager_fallback",
        "unique_v2",
        "unique_v2_eager_fallback",
        "unique_with_counts",
        "unique_with_counts_eager_fallback",
        "unique_with_counts_v2",
        "unique_with_counts_v2_eager_fallback",
        "unpack",
        "unpack_eager_fallback",
        "unravel_index",
        "unravel_index_eager_fallback",
        "upper_bound",
        "upper_bound_eager_fallback",
        "where",
        "where_eager_fallback",
        "zeros_like",
        "zeros_like_eager_fallback"
    ],
    "gen_linalg_ops": [
        "banded_triangular_solve",
        "banded_triangular_solve_eager_fallback",
        "batch_cholesky",
        "batch_cholesky_eager_fallback",
        "batch_cholesky_grad",
        "batch_cholesky_grad_eager_fallback",
        "batch_matrix_determinant",
        "batch_matrix_determinant_eager_fallback",
        "batch_matrix_inverse",
        "batch_matrix_inverse_eager_fallback",
        "batch_matrix_solve",
        "batch_matrix_solve_eager_fallback",
        "batch_matrix_solve_ls",
        "batch_matrix_solve_ls_eager_fallback",
        "batch_matrix_triangular_solve",
        "batch_matrix_triangular_solve_eager_fallback",
        "batch_self_adjoint_eig",
        "batch_self_adjoint_eig_eager_fallback",
        "batch_self_adjoint_eig_v2",
        "batch_self_adjoint_eig_v2_eager_fallback",
        "batch_svd",
        "batch_svd_eager_fallback",
        "cholesky",
        "cholesky_eager_fallback",
        "cholesky_grad",
        "cholesky_grad_eager_fallback",
        "eig",
        "eig_eager_fallback",
        "einsum",
        "einsum_eager_fallback",
        "log_matrix_determinant",
        "log_matrix_determinant_eager_fallback",
        "lu",
        "lu_eager_fallback",
        "matrix_determinant",
        "matrix_determinant_eager_fallback",
        "matrix_exponential",
        "matrix_exponential_eager_fallback",
        "matrix_inverse",
        "matrix_inverse_eager_fallback",
        "matrix_logarithm",
        "matrix_logarithm_eager_fallback",
        "matrix_solve",
        "matrix_solve_eager_fallback",
        "matrix_solve_ls",
        "matrix_solve_ls_eager_fallback",
        "matrix_square_root",
        "matrix_square_root_eager_fallback",
        "matrix_triangular_solve",
        "matrix_triangular_solve_eager_fallback",
        "qr",
        "qr_eager_fallback",
        "self_adjoint_eig",
        "self_adjoint_eig_eager_fallback",
        "self_adjoint_eig_v2",
        "self_adjoint_eig_v2_eager_fallback",
        "svd",
        "svd_eager_fallback",
        "tridiagonal_mat_mul",
        "tridiagonal_mat_mul_eager_fallback",
        "tridiagonal_solve",
        "tridiagonal_solve_eager_fallback"
    ],
    "lookup_ops": [
        "initialize_all_tables",
        "tables_initializer",
        "_check_table_dtypes",
        "LookupInterface",
        "InitializableLookupTableBase",
        "InitializableLookupTableBaseV1",
        "StaticHashTable",
        "StaticHashTableV1",
        "HashTable",
        "TableInitializerBase",
        "DatasetInitializer",
        "KeyValueTensorInitializer",
        "TextFileIndex",
        "TextFileInitializer",
        "TextFileStringTableInitializer",
        "TextFileIdTableInitializer",
        "HasherSpec",
        "StrongHashSpec",
        "_as_string",
        "IdTableWithHashBuckets",
        "StaticVocabularyTable",
        "StaticVocabularyTableV1",
        "index_table_from_file",
        "index_table_from_tensor",
        "index_to_string_table_from_file",
        "index_to_string_table_from_tensor",
        "MutableHashTable",
        "DenseHashTable",
        "_create_resource",
        "key_dtype",
        "value_dtype",
        "name",
        "size",
        "lookup",
        "__getitem__",
        "_initialize",
        "default_value",
        "size",
        "lookup",
        "initializer",
        "_create_resource",
        "name",
        "export",
        "initializer",
        "init",
        "key_dtype",
        "value_dtype",
        "initialize",
        "_shared_name",
        "initialize",
        "initialize",
        "initialize",
        "_shared_name",
        "__new__",
        "_create_resource",
        "_initialize",
        "initializer",
        "init",
        "resource_handle",
        "name",
        "size",
        "_get_string_to_hash_bucket_fn",
        "lookup",
        "_create_resource",
        "_initialize",
        "resource_handle",
        "name",
        "size",
        "lookup",
        "initializer",
        "_create_resource",
        "name",
        "size",
        "remove",
        "lookup",
        "insert",
        "export",
        "_gather_saveables_for_checkpoint",
        "_Saveable",
        "_create_resource",
        "name",
        "size",
        "lookup",
        "insert_or_assign",
        "insert",
        "erase",
        "remove",
        "export",
        "_gather_saveables_for_checkpoint",
        "_Saveable",
        "restore",
        "restore"
    ],
    "map_ops": [
        "empty_tensor_map",
        "tensor_map_size",
        "tensor_map_insert",
        "tensor_map_lookup",
        "tensor_map_erase",
        "tensor_map_has_key",
        "tensor_map_stack_keys",
        "LookupGrad",
        "InsertGrad",
        "EraseGrad"
    ],
    "gen_debug_ops": [
        "copy",
        "copy_eager_fallback",
        "copy_host",
        "copy_host_eager_fallback",
        "debug_identity",
        "debug_identity_eager_fallback",
        "debug_identity_v2",
        "debug_identity_v2_eager_fallback",
        "debug_nan_count",
        "debug_nan_count_eager_fallback",
        "debug_numeric_summary",
        "debug_numeric_summary_eager_fallback",
        "debug_numeric_summary_v2",
        "debug_numeric_summary_v2_eager_fallback"
    ],
    "gen_nccl_ops": [
        "nccl_all_reduce",
        "nccl_all_reduce_eager_fallback",
        "nccl_broadcast",
        "nccl_broadcast_eager_fallback",
        "nccl_reduce",
        "nccl_reduce_eager_fallback"
    ],
    "gen_training_ops": [
        "apply_ada_max",
        "apply_ada_max_eager_fallback",
        "apply_adadelta",
        "apply_adadelta_eager_fallback",
        "apply_adagrad",
        "apply_adagrad_eager_fallback",
        "apply_adagrad_da",
        "apply_adagrad_da_eager_fallback",
        "apply_adagrad_v2",
        "apply_adagrad_v2_eager_fallback",
        "apply_adam",
        "apply_adam_eager_fallback",
        "apply_add_sign",
        "apply_add_sign_eager_fallback",
        "apply_centered_rms_prop",
        "apply_centered_rms_prop_eager_fallback",
        "apply_ftrl",
        "apply_ftrl_eager_fallback",
        "apply_ftrl_v2",
        "apply_ftrl_v2_eager_fallback",
        "apply_gradient_descent",
        "apply_gradient_descent_eager_fallback",
        "apply_momentum",
        "apply_momentum_eager_fallback",
        "apply_power_sign",
        "apply_power_sign_eager_fallback",
        "apply_proximal_adagrad",
        "apply_proximal_adagrad_eager_fallback",
        "apply_proximal_gradient_descent",
        "apply_proximal_gradient_descent_eager_fallback",
        "apply_rms_prop",
        "apply_rms_prop_eager_fallback",
        "resource_apply_ada_max",
        "resource_apply_ada_max_eager_fallback",
        "resource_apply_adadelta",
        "resource_apply_adadelta_eager_fallback",
        "resource_apply_adagrad",
        "resource_apply_adagrad_eager_fallback",
        "resource_apply_adagrad_da",
        "resource_apply_adagrad_da_eager_fallback",
        "resource_apply_adagrad_v2",
        "resource_apply_adagrad_v2_eager_fallback",
        "resource_apply_adam",
        "resource_apply_adam_eager_fallback",
        "resource_apply_adam_with_amsgrad",
        "resource_apply_adam_with_amsgrad_eager_fallback",
        "resource_apply_add_sign",
        "resource_apply_add_sign_eager_fallback",
        "resource_apply_centered_rms_prop",
        "resource_apply_centered_rms_prop_eager_fallback",
        "resource_apply_ftrl",
        "resource_apply_ftrl_eager_fallback",
        "resource_apply_ftrl_v2",
        "resource_apply_ftrl_v2_eager_fallback",
        "resource_apply_gradient_descent",
        "resource_apply_gradient_descent_eager_fallback",
        "resource_apply_keras_momentum",
        "resource_apply_keras_momentum_eager_fallback",
        "resource_apply_momentum",
        "resource_apply_momentum_eager_fallback",
        "resource_apply_power_sign",
        "resource_apply_power_sign_eager_fallback",
        "resource_apply_proximal_adagrad",
        "resource_apply_proximal_adagrad_eager_fallback",
        "resource_apply_proximal_gradient_descent",
        "resource_apply_proximal_gradient_descent_eager_fallback",
        "resource_apply_rms_prop",
        "resource_apply_rms_prop_eager_fallback",
        "resource_sparse_apply_adadelta",
        "resource_sparse_apply_adadelta_eager_fallback",
        "resource_sparse_apply_adagrad",
        "resource_sparse_apply_adagrad_eager_fallback",
        "resource_sparse_apply_adagrad_da",
        "resource_sparse_apply_adagrad_da_eager_fallback",
        "resource_sparse_apply_adagrad_v2",
        "resource_sparse_apply_adagrad_v2_eager_fallback",
        "resource_sparse_apply_centered_rms_prop",
        "resource_sparse_apply_centered_rms_prop_eager_fallback",
        "resource_sparse_apply_ftrl",
        "resource_sparse_apply_ftrl_eager_fallback",
        "resource_sparse_apply_ftrl_v2",
        "resource_sparse_apply_ftrl_v2_eager_fallback",
        "resource_sparse_apply_keras_momentum",
        "resource_sparse_apply_keras_momentum_eager_fallback",
        "resource_sparse_apply_momentum",
        "resource_sparse_apply_momentum_eager_fallback",
        "resource_sparse_apply_proximal_adagrad",
        "resource_sparse_apply_proximal_adagrad_eager_fallback",
        "resource_sparse_apply_proximal_gradient_descent",
        "resource_sparse_apply_proximal_gradient_descent_eager_fallback",
        "resource_sparse_apply_rms_prop",
        "resource_sparse_apply_rms_prop_eager_fallback",
        "sparse_apply_adadelta",
        "sparse_apply_adadelta_eager_fallback",
        "sparse_apply_adagrad",
        "sparse_apply_adagrad_eager_fallback",
        "sparse_apply_adagrad_da",
        "sparse_apply_adagrad_da_eager_fallback",
        "sparse_apply_adagrad_v2",
        "sparse_apply_adagrad_v2_eager_fallback",
        "sparse_apply_centered_rms_prop",
        "sparse_apply_centered_rms_prop_eager_fallback",
        "sparse_apply_ftrl",
        "sparse_apply_ftrl_eager_fallback",
        "sparse_apply_ftrl_v2",
        "sparse_apply_ftrl_v2_eager_fallback",
        "sparse_apply_momentum",
        "sparse_apply_momentum_eager_fallback",
        "sparse_apply_proximal_adagrad",
        "sparse_apply_proximal_adagrad_eager_fallback",
        "sparse_apply_proximal_gradient_descent",
        "sparse_apply_proximal_gradient_descent_eager_fallback",
        "sparse_apply_rms_prop",
        "sparse_apply_rms_prop_eager_fallback"
    ],
    "data_flow_grad": [
        "_DynamicPartitionGrads",
        "_DynamicStitchGrads",
        "AsInt32"
    ],
    "random_ops": [
        "RandomDatasetV2",
        "RandomDatasetV1",
        "element_spec"
    ],
    "gen_random_ops": [
        "multinomial",
        "multinomial_eager_fallback",
        "parameterized_truncated_normal",
        "parameterized_truncated_normal_eager_fallback",
        "random_gamma",
        "random_gamma_eager_fallback",
        "random_gamma_grad",
        "random_gamma_grad_eager_fallback",
        "random_poisson",
        "random_poisson_eager_fallback",
        "random_poisson_v2",
        "random_poisson_v2_eager_fallback",
        "random_shuffle",
        "random_shuffle_eager_fallback",
        "random_standard_normal",
        "random_standard_normal_eager_fallback",
        "random_uniform",
        "random_uniform_eager_fallback",
        "random_uniform_int",
        "random_uniform_int_eager_fallback",
        "truncated_normal",
        "truncated_normal_eager_fallback"
    ],
    "sparse_ops": [
        "_convert_to_sparse_tensor",
        "_convert_to_sparse_tensors",
        "_make_int64_tensor",
        "from_dense",
        "sparse_expand_dims",
        "sparse_eye",
        "sparse_concat",
        "sparse_concat_v2",
        "sparse_add",
        "sparse_add_v2",
        "sparse_cross",
        "sparse_cross_hashed",
        "_sparse_cross_internval_v2",
        "_sparse_cross_internal",
        "sparse_dense_cwise_add",
        "sparse_reorder",
        "sparse_reshape",
        "KeywordRequired",
        "sparse_split",
        "sparse_split_v2",
        "sparse_slice",
        "sparse_to_dense",
        "sparse_reduce_max_v2",
        "sparse_reduce_max",
        "sparse_reduce_max_sparse",
        "sparse_reduce_sum_v2",
        "sparse_reduce_sum",
        "sparse_reduce_sum_sparse",
        "sparse_tensor_to_dense",
        "sparse_to_indicator",
        "sparse_merge",
        "sparse_merge_impl",
        "sparse_retain",
        "sparse_reset_shape",
        "sparse_fill_empty_rows",
        "serialize_sparse",
        "serialize_sparse_v2",
        "serialize_many_sparse",
        "serialize_many_sparse_v2",
        "deserialize_sparse",
        "deserialize_many_sparse",
        "sparse_tensor_dense_matmul",
        "sparse_softmax",
        "sparse_maximum",
        "sparse_minimum",
        "sparse_transpose",
        "map_values",
        "_assert_sparse_compatible",
        "_replace_sparse_with_values",
        "_add_sparse_to_tensors_map",
        "_add_many_sparse_to_tensors_map",
        "_take_many_sparse_from_tensors_map",
        "_UnaryMapValueDispatcher",
        "__repr__",
        "handle"
    ],
    "gen_special_math_ops": [
        "bessel_i0",
        "bessel_i0_eager_fallback",
        "bessel_i0e",
        "bessel_i0e_eager_fallback",
        "bessel_i1",
        "bessel_i1_eager_fallback",
        "bessel_i1e",
        "bessel_i1e_eager_fallback",
        "bessel_j0",
        "bessel_j0_eager_fallback",
        "bessel_j1",
        "bessel_j1_eager_fallback",
        "bessel_k0",
        "bessel_k0_eager_fallback",
        "bessel_k0e",
        "bessel_k0e_eager_fallback",
        "bessel_k1",
        "bessel_k1_eager_fallback",
        "bessel_k1e",
        "bessel_k1e_eager_fallback",
        "bessel_y0",
        "bessel_y0_eager_fallback",
        "bessel_y1",
        "bessel_y1_eager_fallback",
        "dawsn",
        "dawsn_eager_fallback",
        "expint",
        "expint_eager_fallback",
        "fresnel_cos",
        "fresnel_cos_eager_fallback",
        "fresnel_sin",
        "fresnel_sin_eager_fallback",
        "spence",
        "spence_eager_fallback"
    ],
    "string_ops": [
        "regex_full_match",
        "regex_replace",
        "string_format",
        "string_split",
        "string_split_v2",
        "_reduce_join_reduction_dims",
        "reduce_join",
        "reduce_join_v2",
        "string_length",
        "string_length_v2",
        "substr_deprecated",
        "substr",
        "substr_v2",
        "string_to_number",
        "string_to_number_v1",
        "string_to_hash_bucket",
        "string_to_hash_bucket_v1",
        "string_join"
    ],
    "gen_string_ops": [
        "as_string",
        "as_string_eager_fallback",
        "decode_base64",
        "decode_base64_eager_fallback",
        "encode_base64",
        "encode_base64_eager_fallback",
        "reduce_join",
        "reduce_join_eager_fallback",
        "regex_full_match",
        "regex_full_match_eager_fallback",
        "regex_replace",
        "regex_replace_eager_fallback",
        "static_regex_full_match",
        "static_regex_full_match_eager_fallback",
        "static_regex_replace",
        "static_regex_replace_eager_fallback",
        "string_format",
        "string_format_eager_fallback",
        "string_join",
        "string_join_eager_fallback",
        "string_length",
        "string_length_eager_fallback",
        "string_lower",
        "string_lower_eager_fallback",
        "string_n_grams",
        "string_n_grams_eager_fallback",
        "string_split",
        "string_split_eager_fallback",
        "string_split_v2",
        "string_split_v2_eager_fallback",
        "string_strip",
        "string_strip_eager_fallback",
        "string_to_hash_bucket",
        "string_to_hash_bucket_eager_fallback",
        "string_to_hash_bucket_fast",
        "string_to_hash_bucket_fast_eager_fallback",
        "string_to_hash_bucket_strong",
        "string_to_hash_bucket_strong_eager_fallback",
        "string_upper",
        "string_upper_eager_fallback",
        "substr",
        "substr_eager_fallback",
        "unicode_decode",
        "unicode_decode_eager_fallback",
        "unicode_decode_with_offsets",
        "unicode_decode_with_offsets_eager_fallback",
        "unicode_encode",
        "unicode_encode_eager_fallback",
        "unicode_script",
        "unicode_script_eager_fallback",
        "unicode_transcode",
        "unicode_transcode_eager_fallback",
        "unsorted_segment_join",
        "unsorted_segment_join_eager_fallback"
    ],
    "op_selector": [
        "is_differentiable",
        "is_iterable",
        "concatenate_unique",
        "get_tensors",
        "get_unique_graph",
        "check_graphs",
        "make_list_of_t",
        "get_generating_ops",
        "get_consuming_ops",
        "make_list_of_op",
        "_get_inputs",
        "get_backward_walk_ops",
        "UnliftableError",
        "_as_operation",
        "graph_inputs",
        "_path_from",
        "map_subgraph",
        "is_within"
    ],
    "gen_user_ops": [
        "fact",
        "fact_eager_fallback"
    ],
    "gen_dataset_ops": [
        "anonymous_iterator",
        "anonymous_iterator_eager_fallback",
        "anonymous_iterator_v2",
        "anonymous_iterator_v2_eager_fallback",
        "anonymous_memory_cache",
        "anonymous_memory_cache_eager_fallback",
        "anonymous_multi_device_iterator",
        "anonymous_multi_device_iterator_eager_fallback",
        "anonymous_random_seed_generator",
        "anonymous_random_seed_generator_eager_fallback",
        "anonymous_seed_generator",
        "anonymous_seed_generator_eager_fallback",
        "batch_dataset",
        "batch_dataset_eager_fallback",
        "batch_dataset_v2",
        "batch_dataset_v2_eager_fallback",
        "cache_dataset",
        "cache_dataset_eager_fallback",
        "cache_dataset_v2",
        "cache_dataset_v2_eager_fallback",
        "concatenate_dataset",
        "concatenate_dataset_eager_fallback",
        "dataset_cardinality",
        "dataset_cardinality_eager_fallback",
        "dataset_to_graph",
        "dataset_to_graph_eager_fallback",
        "dataset_to_graph_v2",
        "dataset_to_graph_v2_eager_fallback",
        "dataset_to_single_element",
        "dataset_to_single_element_eager_fallback",
        "delete_iterator",
        "delete_iterator_eager_fallback",
        "delete_memory_cache",
        "delete_memory_cache_eager_fallback",
        "delete_multi_device_iterator",
        "delete_multi_device_iterator_eager_fallback",
        "delete_random_seed_generator",
        "delete_random_seed_generator_eager_fallback",
        "delete_seed_generator",
        "delete_seed_generator_eager_fallback",
        "deserialize_iterator",
        "deserialize_iterator_eager_fallback",
        "dummy_memory_cache",
        "dummy_memory_cache_eager_fallback",
        "dummy_seed_generator",
        "dummy_seed_generator_eager_fallback",
        "filter_by_last_component_dataset",
        "filter_by_last_component_dataset_eager_fallback",
        "filter_dataset",
        "filter_dataset_eager_fallback",
        "fixed_length_record_dataset",
        "fixed_length_record_dataset_eager_fallback",
        "fixed_length_record_dataset_v2",
        "fixed_length_record_dataset_v2_eager_fallback",
        "flat_map_dataset",
        "flat_map_dataset_eager_fallback",
        "generator_dataset",
        "generator_dataset_eager_fallback",
        "interleave_dataset",
        "interleave_dataset_eager_fallback",
        "iterator",
        "iterator_eager_fallback",
        "iterator_from_string_handle",
        "iterator_from_string_handle_eager_fallback",
        "iterator_from_string_handle_v2",
        "iterator_from_string_handle_v2_eager_fallback",
        "iterator_get_next",
        "iterator_get_next_eager_fallback",
        "iterator_get_next_as_optional",
        "iterator_get_next_as_optional_eager_fallback",
        "iterator_get_next_sync",
        "iterator_get_next_sync_eager_fallback",
        "iterator_to_string_handle",
        "iterator_to_string_handle_eager_fallback",
        "iterator_v2",
        "iterator_v2_eager_fallback",
        "make_iterator",
        "make_iterator_eager_fallback",
        "map_dataset",
        "map_dataset_eager_fallback",
        "map_defun",
        "map_defun_eager_fallback",
        "model_dataset",
        "model_dataset_eager_fallback",
        "multi_device_iterator",
        "multi_device_iterator_eager_fallback",
        "multi_device_iterator_from_string_handle",
        "multi_device_iterator_from_string_handle_eager_fallback",
        "multi_device_iterator_get_next_from_shard",
        "multi_device_iterator_get_next_from_shard_eager_fallback",
        "multi_device_iterator_init",
        "multi_device_iterator_init_eager_fallback",
        "multi_device_iterator_to_string_handle",
        "multi_device_iterator_to_string_handle_eager_fallback",
        "one_shot_iterator",
        "one_shot_iterator_eager_fallback",
        "optimize_dataset",
        "optimize_dataset_eager_fallback",
        "optimize_dataset_v2",
        "optimize_dataset_v2_eager_fallback",
        "optional_from_value",
        "optional_from_value_eager_fallback",
        "optional_get_value",
        "optional_get_value_eager_fallback",
        "optional_has_value",
        "optional_has_value_eager_fallback",
        "optional_none",
        "optional_none_eager_fallback",
        "padded_batch_dataset",
        "padded_batch_dataset_eager_fallback",
        "padded_batch_dataset_v2",
        "padded_batch_dataset_v2_eager_fallback",
        "parallel_interleave_dataset_v2",
        "parallel_interleave_dataset_v2_eager_fallback",
        "parallel_interleave_dataset_v3",
        "parallel_interleave_dataset_v3_eager_fallback",
        "parallel_interleave_dataset_v4",
        "parallel_interleave_dataset_v4_eager_fallback",
        "parallel_map_dataset",
        "parallel_map_dataset_eager_fallback",
        "parallel_map_dataset_v2",
        "parallel_map_dataset_v2_eager_fallback",
        "prefetch_dataset",
        "prefetch_dataset_eager_fallback",
        "range_dataset",
        "range_dataset_eager_fallback",
        "reduce_dataset",
        "reduce_dataset_eager_fallback",
        "repeat_dataset",
        "repeat_dataset_eager_fallback",
        "serialize_iterator",
        "serialize_iterator_eager_fallback",
        "shard_dataset",
        "shard_dataset_eager_fallback",
        "shuffle_and_repeat_dataset",
        "shuffle_and_repeat_dataset_eager_fallback",
        "shuffle_and_repeat_dataset_v2",
        "shuffle_and_repeat_dataset_v2_eager_fallback",
        "shuffle_dataset",
        "shuffle_dataset_eager_fallback",
        "shuffle_dataset_v2",
        "shuffle_dataset_v2_eager_fallback",
        "shuffle_dataset_v3",
        "shuffle_dataset_v3_eager_fallback",
        "skip_dataset",
        "skip_dataset_eager_fallback",
        "sparse_tensor_slice_dataset",
        "sparse_tensor_slice_dataset_eager_fallback",
        "tf_record_dataset",
        "tf_record_dataset_eager_fallback",
        "take_dataset",
        "take_dataset_eager_fallback",
        "tensor_dataset",
        "tensor_dataset_eager_fallback",
        "tensor_slice_dataset",
        "tensor_slice_dataset_eager_fallback",
        "text_line_dataset",
        "text_line_dataset_eager_fallback",
        "unwrap_dataset_variant",
        "unwrap_dataset_variant_eager_fallback",
        "window_dataset",
        "window_dataset_eager_fallback",
        "wrap_dataset_variant",
        "wrap_dataset_variant_eager_fallback",
        "zip_dataset",
        "zip_dataset_eager_fallback"
    ],
    "control_flow_util": [
        "InXlaContext",
        "GraphOrParentsInXlaContext",
        "IsInWhileLoop",
        "GetContainingWhileContext",
        "GetContainingXLAContext",
        "smart_cond",
        "constant_value"
    ],
    "init_ops_v2": [
        "Initializer",
        "Zeros",
        "Ones",
        "Constant",
        "RandomUniform",
        "RandomNormal",
        "TruncatedNormal",
        "VarianceScaling",
        "Orthogonal",
        "Identity",
        "GlorotUniform",
        "GlorotNormal",
        "lecun_normal",
        "lecun_uniform",
        "he_normal",
        "he_uniform",
        "_assert_float_dtype",
        "_RandomGenerator",
        "__call__",
        "get_config",
        "from_config",
        "_validate_kwargs",
        "__call__",
        "__call__",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "get_config",
        "get_config",
        "random_normal",
        "random_uniform",
        "truncated_normal"
    ],
    "boosted_trees_ops": [
        "PruningMode",
        "QuantileAccumulatorSaveable",
        "QuantileAccumulator",
        "_TreeEnsembleSavable",
        "TreeEnsemble",
        "from_str",
        "restore",
        "_create_resource",
        "_initialize",
        "initializer",
        "is_initialized",
        "saveable",
        "_gather_saveables_for_checkpoint",
        "add_summaries",
        "flush",
        "get_bucket_boundaries",
        "restore",
        "_create_resource",
        "_initialize",
        "initializer",
        "is_initialized",
        "_gather_saveables_for_checkpoint",
        "get_stamp_token",
        "get_states",
        "serialize",
        "deserialize",
        "make_save_spec"
    ],
    "image_ops": [
        "flat_transforms_to_matrices",
        "matrices_to_flat_transforms",
        "_image_projective_transform_grad",
        "_image_projective_transform_v3_grad"
    ],
    "nn_ops": [
        "_get_sequence",
        "_non_atrous_convolution",
        "_NonAtrousConvolution",
        "squeeze_batch_dims",
        "dilation2d_v2",
        "dilation2d_v1",
        "with_space_to_batch",
        "_WithSpaceToBatch",
        "_with_space_to_batch_base_paddings",
        "_with_space_to_batch_adjust",
        "_get_strides_and_dilation_rate",
        "convolution",
        "convolution_v2",
        "convolution_internal",
        "Convolution",
        "pool",
        "pool_v2",
        "atrous_conv2d",
        "convert_padding",
        "conv1d",
        "conv1d_v2",
        "conv1d_transpose",
        "conv2d_v2",
        "conv2d",
        "conv2d_backprop_filter",
        "conv2d_backprop_input",
        "conv2d_transpose",
        "conv2d_transpose_v2",
        "_conv2d_expanded_batch",
        "atrous_conv2d_transpose",
        "depthwise_conv2d_native",
        "depthwise_conv2d_native_backprop_input",
        "depthwise_conv2d_native_backprop_filter",
        "_conv3d_expanded_batch",
        "conv3d_v2",
        "conv3d_v1",
        "conv3d_transpose",
        "conv3d_transpose_v2",
        "conv_transpose",
        "_tf_deterministic_ops",
        "bias_add",
        "bias_add_v1",
        "crelu",
        "crelu_v2",
        "relu6",
        "leaky_relu",
        "gelu",
        "_flatten_outer_dims",
        "_wrap_2d_function",
        "softmax",
        "softmax_v2",
        "log_softmax",
        "log_softmax_v2",
        "_ensure_xent_args",
        "softmax_cross_entropy_with_logits_v2",
        "softmax_cross_entropy_with_logits_v2_helper",
        "softmax_cross_entropy_with_logits",
        "sparse_softmax_cross_entropy_with_logits",
        "sparse_softmax_cross_entropy_with_logits_v2",
        "avg_pool_v2",
        "avg_pool",
        "avg_pool2d",
        "avg_pool1d",
        "avg_pool3d",
        "max_pool_v2",
        "max_pool",
        "max_pool1d",
        "max_pool2d",
        "max_pool3d",
        "max_pool_with_argmax_v2",
        "max_pool_with_argmax_v1",
        "_calc_conv3d_flops",
        "_calc_conv_flops",
        "_calc_depthwise_conv_flops",
        "_calc_bias_add_flops",
        "xw_plus_b",
        "xw_plus_b_v1",
        "_get_noise_shape",
        "dropout",
        "dropout_v2",
        "top_k",
        "nth_element",
        "fractional_max_pool",
        "fractional_max_pool_v2",
        "fractional_avg_pool",
        "fractional_avg_pool_v2",
        "_calc_dilation2d_flops",
        "erosion2d",
        "erosion2d_v2",
        "in_top_k",
        "in_top_k_v2",
        "isotonic_regression",
        "_conv1d",
        "__call__",
        "build_op",
        "_with_space_to_batch_call",
        "__call__",
        "_build_op",
        "__call__",
        "_swap_axis",
        "fix_output",
        "compute_on_matrix",
        "op",
        "_move_dim_to_end"
    ],
    "gen_manip_ops": [
        "roll",
        "roll_eager_fallback"
    ],
    "bincount_ops": [
        "bincount",
        "bincount_v1",
        "sparse_bincount",
        "validate_dense_weights",
        "validate_sparse_weights",
        "validate_ragged_weights"
    ],
    "collective_ops": [
        "all_reduce",
        "all_reduce_v2",
        "all_gather",
        "all_gather_v2",
        "broadcast_send",
        "broadcast_recv"
    ],
    "gen_parsing_ops": [
        "decode_csv",
        "decode_csv_eager_fallback",
        "decode_compressed",
        "decode_compressed_eager_fallback",
        "decode_json_example",
        "decode_json_example_eager_fallback",
        "decode_padded_raw",
        "decode_padded_raw_eager_fallback",
        "decode_raw",
        "decode_raw_eager_fallback",
        "parse_example",
        "parse_example_eager_fallback",
        "parse_example_v2",
        "parse_example_v2_eager_fallback",
        "parse_sequence_example",
        "parse_sequence_example_eager_fallback",
        "parse_sequence_example_v2",
        "parse_sequence_example_v2_eager_fallback",
        "parse_single_example",
        "parse_single_example_eager_fallback",
        "parse_single_sequence_example",
        "parse_single_sequence_example_eager_fallback",
        "parse_tensor",
        "parse_tensor_eager_fallback",
        "serialize_tensor",
        "serialize_tensor_eager_fallback",
        "string_to_number",
        "string_to_number_eager_fallback"
    ],
    "rnn": [
        "_transpose_batch_time",
        "_best_effort_input_batch_size",
        "_infer_state_dtype",
        "_maybe_tensor_shape_from_tensor",
        "_should_cache",
        "_rnn_step",
        "_reverse_seq",
        "bidirectional_dynamic_rnn",
        "dynamic_rnn",
        "_dynamic_rnn_loop",
        "raw_rnn",
        "static_rnn",
        "static_state_saving_rnn",
        "static_bidirectional_rnn",
        "_copy_one_through",
        "_copy_some_through",
        "_maybe_copy_some_through",
        "_create_zero_arrays",
        "_create_ta",
        "_time_step",
        "_reverse",
        "_assert_has_shape",
        "condition",
        "body",
        "_map_reverse",
        "_copy_some_through",
        "_create_zero_output",
        "copy_fn"
    ],
    "sparse_grad": [
        "_SparseReorderGrad",
        "_SparseAddGrad",
        "_SparseTensorDenseAddGrad",
        "_SparseReduceSumGrad",
        "_SparseSliceGrad",
        "_SparseTensorDenseMatMulGrad",
        "_SparseDenseCwiseAddGrad",
        "_SparseDenseCwiseMulOrDivGrad",
        "_SparseDenseCwiseMulGrad",
        "_SparseDenseCwiseDivGrad",
        "_SparseSoftmaxGrad",
        "_SparseSparseMaximumGrad",
        "_SparseSparseMinimumGrad",
        "_SparseFillEmptyRowsGrad",
        "_SparseToDenseGrad"
    ],
    "gradients_impl": [
        "gradients",
        "gradients_v2",
        "_hessian_vector_product",
        "hessians",
        "HessiansV2"
    ],
    "gen_data_flow_ops": [
        "accumulator_apply_gradient",
        "accumulator_apply_gradient_eager_fallback",
        "accumulator_num_accumulated",
        "accumulator_num_accumulated_eager_fallback",
        "accumulator_set_global_step",
        "accumulator_set_global_step_eager_fallback",
        "accumulator_take_gradient",
        "accumulator_take_gradient_eager_fallback",
        "barrier",
        "barrier_eager_fallback",
        "barrier_close",
        "barrier_close_eager_fallback",
        "barrier_incomplete_size",
        "barrier_incomplete_size_eager_fallback",
        "barrier_insert_many",
        "barrier_insert_many_eager_fallback",
        "barrier_ready_size",
        "barrier_ready_size_eager_fallback",
        "barrier_take_many",
        "barrier_take_many_eager_fallback",
        "conditional_accumulator",
        "conditional_accumulator_eager_fallback",
        "delete_session_tensor",
        "delete_session_tensor_eager_fallback",
        "dynamic_partition",
        "dynamic_partition_eager_fallback",
        "dynamic_stitch",
        "dynamic_stitch_eager_fallback",
        "fifo_queue",
        "fifo_queue_eager_fallback",
        "fifo_queue_v2",
        "fifo_queue_v2_eager_fallback",
        "fake_queue",
        "fake_queue_eager_fallback",
        "get_session_handle",
        "get_session_handle_eager_fallback",
        "get_session_handle_v2",
        "get_session_handle_v2_eager_fallback",
        "get_session_tensor",
        "get_session_tensor_eager_fallback",
        "map_clear",
        "map_clear_eager_fallback",
        "map_incomplete_size",
        "map_incomplete_size_eager_fallback",
        "map_peek",
        "map_peek_eager_fallback",
        "map_size",
        "map_size_eager_fallback",
        "map_stage",
        "map_stage_eager_fallback",
        "map_unstage",
        "map_unstage_eager_fallback",
        "map_unstage_no_key",
        "map_unstage_no_key_eager_fallback",
        "ordered_map_clear",
        "ordered_map_clear_eager_fallback",
        "ordered_map_incomplete_size",
        "ordered_map_incomplete_size_eager_fallback",
        "ordered_map_peek",
        "ordered_map_peek_eager_fallback",
        "ordered_map_size",
        "ordered_map_size_eager_fallback",
        "ordered_map_stage",
        "ordered_map_stage_eager_fallback",
        "ordered_map_unstage",
        "ordered_map_unstage_eager_fallback",
        "ordered_map_unstage_no_key",
        "ordered_map_unstage_no_key_eager_fallback",
        "padding_fifo_queue",
        "padding_fifo_queue_eager_fallback",
        "padding_fifo_queue_v2",
        "padding_fifo_queue_v2_eager_fallback",
        "parallel_dynamic_stitch",
        "parallel_dynamic_stitch_eager_fallback",
        "priority_queue",
        "priority_queue_eager_fallback",
        "priority_queue_v2",
        "priority_queue_v2_eager_fallback",
        "queue_close",
        "queue_close_eager_fallback",
        "queue_close_v2",
        "queue_close_v2_eager_fallback",
        "queue_dequeue",
        "queue_dequeue_eager_fallback",
        "queue_dequeue_many",
        "queue_dequeue_many_eager_fallback",
        "queue_dequeue_many_v2",
        "queue_dequeue_many_v2_eager_fallback",
        "queue_dequeue_up_to",
        "queue_dequeue_up_to_eager_fallback",
        "queue_dequeue_up_to_v2",
        "queue_dequeue_up_to_v2_eager_fallback",
        "queue_dequeue_v2",
        "queue_dequeue_v2_eager_fallback",
        "queue_enqueue",
        "queue_enqueue_eager_fallback",
        "queue_enqueue_many",
        "queue_enqueue_many_eager_fallback",
        "queue_enqueue_many_v2",
        "queue_enqueue_many_v2_eager_fallback",
        "queue_enqueue_v2",
        "queue_enqueue_v2_eager_fallback",
        "queue_is_closed",
        "queue_is_closed_eager_fallback",
        "queue_is_closed_v2",
        "queue_is_closed_v2_eager_fallback",
        "queue_size",
        "queue_size_eager_fallback",
        "queue_size_v2",
        "queue_size_v2_eager_fallback",
        "random_shuffle_queue",
        "random_shuffle_queue_eager_fallback",
        "random_shuffle_queue_v2",
        "random_shuffle_queue_v2_eager_fallback",
        "record_input",
        "record_input_eager_fallback",
        "resource_accumulator_apply_gradient",
        "resource_accumulator_apply_gradient_eager_fallback",
        "resource_accumulator_num_accumulated",
        "resource_accumulator_num_accumulated_eager_fallback",
        "resource_accumulator_set_global_step",
        "resource_accumulator_set_global_step_eager_fallback",
        "resource_accumulator_take_gradient",
        "resource_accumulator_take_gradient_eager_fallback",
        "resource_conditional_accumulator",
        "resource_conditional_accumulator_eager_fallback",
        "sparse_accumulator_apply_gradient",
        "sparse_accumulator_apply_gradient_eager_fallback",
        "sparse_accumulator_take_gradient",
        "sparse_accumulator_take_gradient_eager_fallback",
        "sparse_conditional_accumulator",
        "sparse_conditional_accumulator_eager_fallback",
        "_stack",
        "_stack_eager_fallback",
        "stack_close",
        "stack_close_eager_fallback",
        "stack_close_v2",
        "stack_close_v2_eager_fallback",
        "stack_pop",
        "stack_pop_eager_fallback",
        "stack_pop_v2",
        "stack_pop_v2_eager_fallback",
        "stack_push",
        "stack_push_eager_fallback",
        "stack_push_v2",
        "stack_push_v2_eager_fallback",
        "stack_v2",
        "stack_v2_eager_fallback",
        "stage",
        "stage_eager_fallback",
        "stage_clear",
        "stage_clear_eager_fallback",
        "stage_peek",
        "stage_peek_eager_fallback",
        "stage_size",
        "stage_size_eager_fallback",
        "tensor_array",
        "tensor_array_eager_fallback",
        "tensor_array_close",
        "tensor_array_close_eager_fallback",
        "tensor_array_close_v2",
        "tensor_array_close_v2_eager_fallback",
        "tensor_array_close_v3",
        "tensor_array_close_v3_eager_fallback",
        "tensor_array_concat",
        "tensor_array_concat_eager_fallback",
        "tensor_array_concat_v2",
        "tensor_array_concat_v2_eager_fallback",
        "tensor_array_concat_v3",
        "tensor_array_concat_v3_eager_fallback",
        "tensor_array_gather",
        "tensor_array_gather_eager_fallback",
        "tensor_array_gather_v2",
        "tensor_array_gather_v2_eager_fallback",
        "tensor_array_gather_v3",
        "tensor_array_gather_v3_eager_fallback",
        "tensor_array_grad",
        "tensor_array_grad_eager_fallback",
        "tensor_array_grad_v2",
        "tensor_array_grad_v2_eager_fallback",
        "tensor_array_grad_v3",
        "tensor_array_grad_v3_eager_fallback",
        "tensor_array_grad_with_shape",
        "tensor_array_grad_with_shape_eager_fallback",
        "tensor_array_pack",
        "tensor_array_pack_eager_fallback",
        "tensor_array_read",
        "tensor_array_read_eager_fallback",
        "tensor_array_read_v2",
        "tensor_array_read_v2_eager_fallback",
        "tensor_array_read_v3",
        "tensor_array_read_v3_eager_fallback",
        "tensor_array_scatter",
        "tensor_array_scatter_eager_fallback",
        "tensor_array_scatter_v2",
        "tensor_array_scatter_v2_eager_fallback",
        "tensor_array_scatter_v3",
        "tensor_array_scatter_v3_eager_fallback",
        "tensor_array_size",
        "tensor_array_size_eager_fallback",
        "tensor_array_size_v2",
        "tensor_array_size_v2_eager_fallback",
        "tensor_array_size_v3",
        "tensor_array_size_v3_eager_fallback",
        "tensor_array_split",
        "tensor_array_split_eager_fallback",
        "tensor_array_split_v2",
        "tensor_array_split_v2_eager_fallback",
        "tensor_array_split_v3",
        "tensor_array_split_v3_eager_fallback",
        "tensor_array_unpack",
        "tensor_array_unpack_eager_fallback",
        "tensor_array_v2",
        "tensor_array_v2_eager_fallback",
        "tensor_array_v3",
        "tensor_array_v3_eager_fallback",
        "tensor_array_write",
        "tensor_array_write_eager_fallback",
        "tensor_array_write_v2",
        "tensor_array_write_v2_eager_fallback",
        "tensor_array_write_v3",
        "tensor_array_write_v3_eager_fallback",
        "unstage",
        "unstage_eager_fallback"
    ],
    "resources": [
        "register_resource",
        "shared_resources",
        "local_resources",
        "report_uninitialized_resources",
        "initialize_resources"
    ],
    "nn_grad": [
        "_Conv2DBackpropInputGrad",
        "_Conv2DBackpropFilterGrad",
        "_DepthwiseConv2dNativeBackpropInputGrad",
        "_DepthwiseConv2dNativeBackpropFilterGrad",
        "_Conv3DGrad",
        "_Conv3DBackpropInputGrad",
        "_Conv3DBackpropFilterGrad",
        "_AvgPool3DGrad",
        "_AvgPool3DGradGrad",
        "_MaxPool3DGrad",
        "_MaxPool3DGradGrad",
        "_MaxPool3DGradGradGrad",
        "_SoftmaxGrad",
        "_LogSoftmaxGrad",
        "_BiasAddGrad",
        "_BiasAddGradGrad",
        "_BiasAddGradV1",
        "_ReluGrad",
        "_EluGradGrad",
        "_SeluGradGrad",
        "_Relu6Grad",
        "_Relu6GradGrad",
        "_LeakyReluGrad",
        "_LeakyReluGradGrad",
        "_EluGrad",
        "_SeluGrad",
        "_SoftplusGrad",
        "_SoftplusGradGrad",
        "_SoftsignGrad",
        "_ReluGradGrad",
        "_BroadcastMul",
        "_SoftmaxCrossEntropyWithLogitsGrad",
        "_SparseSoftmaxCrossEntropyWithLogitsGrad",
        "_Conv2DGrad",
        "_DepthwiseConv2dNativeGrad",
        "_Dilation2DGrad",
        "_LRNGrad",
        "_AvgPoolGrad",
        "_AvgPoolGradGrad",
        "_MaxPoolGrad",
        "_MaxPoolGradV2",
        "_MaxPoolGradWithArgmax",
        "_MaxPoolGradGrad",
        "_MaxPoolGradGradV2",
        "_MaxPoolGradGradGrad",
        "_FractionalMaxPoolGrad",
        "_FractionalAvgPoolGrad",
        "_BatchNormWithGlobalNormalizationGrad",
        "_BaseFusedBatchNormGrad",
        "_FusedBatchNormGrad",
        "_FusedBatchNormV2Grad",
        "_FusedBatchNormV3Grad",
        "_BatchNormGrad",
        "_FusedBatchNormGradGrad",
        "_FusedBatchNormGradGradV2",
        "_FusedBatchNormGradGradV3",
        "_L2LossGrad",
        "_TopKGrad",
        "_NthElementGrad",
        "_MeanAggregator",
        "_IsotonicRegressionGrad"
    ],
    "gen_collective_ops": [
        "collective_bcast_recv",
        "collective_bcast_recv_eager_fallback",
        "collective_bcast_send",
        "collective_bcast_send_eager_fallback",
        "collective_gather",
        "collective_gather_eager_fallback",
        "collective_gather_v2",
        "collective_gather_v2_eager_fallback",
        "collective_reduce",
        "collective_reduce_eager_fallback",
        "collective_reduce_v2",
        "collective_reduce_v2_eager_fallback"
    ],
    "control_flow_v2_func_graphs": [
        "ControlFlowFuncGraph",
        "CondBranchFuncGraph",
        "WhileCondFuncGraph",
        "WhileBodyFuncGraph"
    ],
    "gen_nn_ops": [
        "avg_pool",
        "avg_pool_eager_fallback",
        "avg_pool3d",
        "avg_pool3d_eager_fallback",
        "avg_pool3d_grad",
        "avg_pool3d_grad_eager_fallback",
        "avg_pool_grad",
        "avg_pool_grad_eager_fallback",
        "_batch_norm_with_global_normalization",
        "_batch_norm_with_global_normalization_eager_fallback",
        "batch_norm_with_global_normalization_grad",
        "batch_norm_with_global_normalization_grad_eager_fallback",
        "bias_add",
        "bias_add_eager_fallback",
        "bias_add_grad",
        "bias_add_grad_eager_fallback",
        "bias_add_v1",
        "bias_add_v1_eager_fallback",
        "conv2d",
        "conv2d_eager_fallback",
        "conv2d_backprop_filter",
        "conv2d_backprop_filter_eager_fallback",
        "conv2d_backprop_input",
        "conv2d_backprop_input_eager_fallback",
        "conv3d",
        "conv3d_eager_fallback",
        "conv3d_backprop_filter",
        "conv3d_backprop_filter_eager_fallback",
        "conv3d_backprop_filter_v2",
        "conv3d_backprop_filter_v2_eager_fallback",
        "conv3d_backprop_input",
        "conv3d_backprop_input_eager_fallback",
        "conv3d_backprop_input_v2",
        "conv3d_backprop_input_v2_eager_fallback",
        "data_format_dim_map",
        "data_format_dim_map_eager_fallback",
        "data_format_vec_permute",
        "data_format_vec_permute_eager_fallback",
        "depthwise_conv2d_native",
        "depthwise_conv2d_native_eager_fallback",
        "depthwise_conv2d_native_backprop_filter",
        "depthwise_conv2d_native_backprop_filter_eager_fallback",
        "depthwise_conv2d_native_backprop_input",
        "depthwise_conv2d_native_backprop_input_eager_fallback",
        "dilation2d",
        "dilation2d_eager_fallback",
        "dilation2d_backprop_filter",
        "dilation2d_backprop_filter_eager_fallback",
        "dilation2d_backprop_input",
        "dilation2d_backprop_input_eager_fallback",
        "elu",
        "elu_eager_fallback",
        "elu_grad",
        "elu_grad_eager_fallback",
        "fractional_avg_pool",
        "fractional_avg_pool_eager_fallback",
        "fractional_avg_pool_grad",
        "fractional_avg_pool_grad_eager_fallback",
        "fractional_max_pool",
        "fractional_max_pool_eager_fallback",
        "fractional_max_pool_grad",
        "fractional_max_pool_grad_eager_fallback",
        "_fused_batch_norm",
        "_fused_batch_norm_eager_fallback",
        "fused_batch_norm_grad",
        "fused_batch_norm_grad_eager_fallback",
        "fused_batch_norm_grad_v2",
        "fused_batch_norm_grad_v2_eager_fallback",
        "fused_batch_norm_grad_v3",
        "fused_batch_norm_grad_v3_eager_fallback",
        "fused_batch_norm_v2",
        "fused_batch_norm_v2_eager_fallback",
        "fused_batch_norm_v3",
        "fused_batch_norm_v3_eager_fallback",
        "fused_pad_conv2d",
        "fused_pad_conv2d_eager_fallback",
        "fused_resize_and_pad_conv2d",
        "fused_resize_and_pad_conv2d_eager_fallback",
        "in_top_k",
        "in_top_k_eager_fallback",
        "in_top_kv2",
        "in_top_kv2_eager_fallback",
        "isotonic_regression",
        "isotonic_regression_eager_fallback",
        "l2_loss",
        "l2_loss_eager_fallback",
        "lrn",
        "lrn_eager_fallback",
        "lrn_grad",
        "lrn_grad_eager_fallback",
        "leaky_relu",
        "leaky_relu_eager_fallback",
        "leaky_relu_grad",
        "leaky_relu_grad_eager_fallback",
        "log_softmax",
        "log_softmax_eager_fallback",
        "max_pool",
        "max_pool_eager_fallback",
        "max_pool3d",
        "max_pool3d_eager_fallback",
        "max_pool3d_grad",
        "max_pool3d_grad_eager_fallback",
        "max_pool3d_grad_grad",
        "max_pool3d_grad_grad_eager_fallback",
        "max_pool_grad",
        "max_pool_grad_eager_fallback",
        "max_pool_grad_grad",
        "max_pool_grad_grad_eager_fallback",
        "max_pool_grad_grad_v2",
        "max_pool_grad_grad_v2_eager_fallback",
        "max_pool_grad_grad_with_argmax",
        "max_pool_grad_grad_with_argmax_eager_fallback",
        "max_pool_grad_v2",
        "max_pool_grad_v2_eager_fallback",
        "max_pool_grad_with_argmax",
        "max_pool_grad_with_argmax_eager_fallback",
        "max_pool_v2",
        "max_pool_v2_eager_fallback",
        "max_pool_with_argmax",
        "max_pool_with_argmax_eager_fallback",
        "nth_element",
        "nth_element_eager_fallback",
        "quantized_avg_pool",
        "quantized_avg_pool_eager_fallback",
        "quantized_batch_norm_with_global_normalization",
        "quantized_batch_norm_with_global_normalization_eager_fallback",
        "quantized_bias_add",
        "quantized_bias_add_eager_fallback",
        "quantized_conv2d",
        "quantized_conv2d_eager_fallback",
        "quantized_conv2d_and_relu",
        "quantized_conv2d_and_relu_eager_fallback",
        "quantized_conv2d_and_relu_and_requantize",
        "quantized_conv2d_and_relu_and_requantize_eager_fallback",
        "quantized_conv2d_and_requantize",
        "quantized_conv2d_and_requantize_eager_fallback",
        "quantized_conv2d_per_channel",
        "quantized_conv2d_per_channel_eager_fallback",
        "quantized_conv2d_with_bias",
        "quantized_conv2d_with_bias_eager_fallback",
        "quantized_conv2d_with_bias_and_relu",
        "quantized_conv2d_with_bias_and_relu_eager_fallback",
        "quantized_conv2d_with_bias_and_relu_and_requantize",
        "quantized_conv2d_with_bias_and_relu_and_requantize_eager_fallback",
        "quantized_conv2d_with_bias_and_requantize",
        "quantized_conv2d_with_bias_and_requantize_eager_fallback",
        "quantized_conv2d_with_bias_signed_sum_and_relu_and_requantize",
        "quantized_conv2d_with_bias_signed_sum_and_relu_and_requantize_eager_fallback",
        "quantized_conv2d_with_bias_sum_and_relu",
        "quantized_conv2d_with_bias_sum_and_relu_eager_fallback",
        "quantized_conv2d_with_bias_sum_and_relu_and_requantize",
        "quantized_conv2d_with_bias_sum_and_relu_and_requantize_eager_fallback",
        "quantized_depthwise_conv2d",
        "quantized_depthwise_conv2d_eager_fallback",
        "quantized_depthwise_conv2d_with_bias",
        "quantized_depthwise_conv2d_with_bias_eager_fallback",
        "quantized_depthwise_conv2d_with_bias_and_relu",
        "quantized_depthwise_conv2d_with_bias_and_relu_eager_fallback",
        "quantized_depthwise_conv2d_with_bias_and_relu_and_requantize",
        "quantized_depthwise_conv2d_with_bias_and_relu_and_requantize_eager_fallback",
        "quantized_mat_mul_with_bias",
        "quantized_mat_mul_with_bias_eager_fallback",
        "quantized_mat_mul_with_bias_and_dequantize",
        "quantized_mat_mul_with_bias_and_dequantize_eager_fallback",
        "quantized_mat_mul_with_bias_and_relu",
        "quantized_mat_mul_with_bias_and_relu_eager_fallback",
        "quantized_mat_mul_with_bias_and_relu_and_requantize",
        "quantized_mat_mul_with_bias_and_relu_and_requantize_eager_fallback",
        "quantized_mat_mul_with_bias_and_requantize",
        "quantized_mat_mul_with_bias_and_requantize_eager_fallback",
        "quantized_max_pool",
        "quantized_max_pool_eager_fallback",
        "quantized_relu",
        "quantized_relu_eager_fallback",
        "quantized_relu6",
        "quantized_relu6_eager_fallback",
        "quantized_relu_x",
        "quantized_relu_x_eager_fallback",
        "relu",
        "relu_eager_fallback",
        "relu6",
        "relu6_eager_fallback",
        "relu6_grad",
        "relu6_grad_eager_fallback",
        "relu_grad",
        "relu_grad_eager_fallback",
        "selu",
        "selu_eager_fallback",
        "selu_grad",
        "selu_grad_eager_fallback",
        "softmax",
        "softmax_eager_fallback",
        "softmax_cross_entropy_with_logits",
        "softmax_cross_entropy_with_logits_eager_fallback",
        "softplus",
        "softplus_eager_fallback",
        "softplus_grad",
        "softplus_grad_eager_fallback",
        "softsign",
        "softsign_eager_fallback",
        "softsign_grad",
        "softsign_grad_eager_fallback",
        "sparse_softmax_cross_entropy_with_logits",
        "sparse_softmax_cross_entropy_with_logits_eager_fallback",
        "top_k",
        "top_k_eager_fallback",
        "top_kv2",
        "top_kv2_eager_fallback"
    ],
    "metrics_impl": [
        "metric_variable",
        "_remove_squeezable_dimensions",
        "_maybe_expand_labels",
        "_safe_scalar_div",
        "_streaming_confusion_matrix",
        "_aggregate_across_replicas",
        "mean",
        "accuracy",
        "_confusion_matrix_at_thresholds",
        "_aggregate_variable",
        "auc",
        "mean_absolute_error",
        "mean_cosine_distance",
        "mean_per_class_accuracy",
        "mean_iou",
        "mean_relative_error",
        "mean_squared_error",
        "mean_tensor",
        "percentage_below",
        "_count_condition",
        "false_negatives",
        "false_negatives_at_thresholds",
        "false_positives",
        "false_positives_at_thresholds",
        "true_negatives",
        "true_negatives_at_thresholds",
        "true_positives",
        "true_positives_at_thresholds",
        "precision",
        "precision_at_thresholds",
        "recall",
        "_at_k_name",
        "_select_class_id",
        "_maybe_select_class_id",
        "_sparse_true_positive_at_k",
        "_streaming_sparse_true_positive_at_k",
        "_sparse_false_negative_at_k",
        "_streaming_sparse_false_negative_at_k",
        "recall_at_k",
        "recall_at_top_k",
        "recall_at_thresholds",
        "root_mean_squared_error",
        "sensitivity_at_specificity",
        "_expand_and_tile",
        "_num_relevant",
        "_sparse_average_precision_at_top_k",
        "_streaming_sparse_average_precision_at_top_k",
        "_clean_out_of_range_indices",
        "sparse_average_precision_at_k",
        "average_precision_at_k",
        "_sparse_false_positive_at_k",
        "_streaming_sparse_false_positive_at_k",
        "precision_at_top_k",
        "sparse_precision_at_k",
        "precision_at_k",
        "specificity_at_sensitivity",
        "fn",
        "_labels_is_sparse",
        "_clean_out_of_range",
        "_clean_labels_out_of_range",
        "_maybe_expand_weights",
        "_maybe_adjust_weights",
        "compute_mean",
        "interpolate_pr_auc",
        "compute_auc",
        "compute_auc_value",
        "compute_mean_accuracy",
        "compute_mean_iou",
        "compute_precision",
        "once_across_replicas",
        "compute_precision",
        "precision_across_replicas",
        "compute_recall",
        "once_across_replicas",
        "compute_recall",
        "compute_recall",
        "recall_across_replicas",
        "compute_sensitivity_at_specificity",
        "sensitivity_across_replicas",
        "precision_across_replicas",
        "precision_across_replicas",
        "compute_specificity_at_sensitivity",
        "specificity_across_replicas"
    ],
    "sets_impl": [
        "set_size",
        "_convert_to_tensors_or_sparse_tensors",
        "_set_operation",
        "set_intersection",
        "set_difference",
        "set_union"
    ],
    "cudnn_rnn_grad": [
        "_cudnn_rnn_backward",
        "_cudnn_rnn_backward_v2",
        "_cudnn_rnn_backwardv3"
    ],
    "gen_state_ops": [
        "assign",
        "assign_eager_fallback",
        "assign_add",
        "assign_add_eager_fallback",
        "assign_sub",
        "assign_sub_eager_fallback",
        "count_up_to",
        "count_up_to_eager_fallback",
        "destroy_temporary_variable",
        "destroy_temporary_variable_eager_fallback",
        "is_variable_initialized",
        "is_variable_initialized_eager_fallback",
        "resource_count_up_to",
        "resource_count_up_to_eager_fallback",
        "resource_scatter_nd_add",
        "resource_scatter_nd_add_eager_fallback",
        "resource_scatter_nd_max",
        "resource_scatter_nd_max_eager_fallback",
        "resource_scatter_nd_min",
        "resource_scatter_nd_min_eager_fallback",
        "resource_scatter_nd_sub",
        "resource_scatter_nd_sub_eager_fallback",
        "resource_scatter_nd_update",
        "resource_scatter_nd_update_eager_fallback",
        "scatter_add",
        "scatter_add_eager_fallback",
        "scatter_div",
        "scatter_div_eager_fallback",
        "scatter_max",
        "scatter_max_eager_fallback",
        "scatter_min",
        "scatter_min_eager_fallback",
        "scatter_mul",
        "scatter_mul_eager_fallback",
        "scatter_nd_add",
        "scatter_nd_add_eager_fallback",
        "scatter_nd_max",
        "scatter_nd_max_eager_fallback",
        "scatter_nd_min",
        "scatter_nd_min_eager_fallback",
        "scatter_nd_sub",
        "scatter_nd_sub_eager_fallback",
        "scatter_nd_update",
        "scatter_nd_update_eager_fallback",
        "scatter_sub",
        "scatter_sub_eager_fallback",
        "scatter_update",
        "scatter_update_eager_fallback",
        "temporary_variable",
        "temporary_variable_eager_fallback",
        "variable",
        "variable_eager_fallback",
        "variable_v2",
        "variable_v2_eager_fallback"
    ],
    "tensor_array_grad": [
        "_GetGradSource",
        "_TensorArrayReadGrad",
        "_TensorArrayWriteGrad",
        "_TensorArrayGatherGrad",
        "_TensorArrayScatterGrad",
        "_TensorArrayConcatGrad",
        "_TensorArraySplitGrad"
    ],
    "image_ops_impl": [
        "_assert",
        "_is_tensor",
        "_ImageDimensions",
        "_Check3DImage",
        "_Assert3DImage",
        "_AssertAtLeast3DImage",
        "_CheckAtLeast3DImage",
        "_AssertGrayscaleImage",
        "_CheckGrayscaleImage",
        "fix_image_flip_shape",
        "random_flip_up_down",
        "random_flip_left_right",
        "stateless_random_flip_left_right",
        "stateless_random_flip_up_down",
        "_random_flip",
        "flip_left_right",
        "flip_up_down",
        "_flip",
        "rot90",
        "_rot90_3D",
        "_rot90_4D",
        "transpose",
        "central_crop",
        "pad_to_bounding_box",
        "crop_to_bounding_box",
        "resize_image_with_crop_or_pad",
        "ResizeMethodV1",
        "ResizeMethod",
        "_resize_images_common",
        "resize_images",
        "resize_images_v2",
        "_resize_image_with_pad_common",
        "resize_image_with_pad_v1",
        "resize_image_with_pad_v2",
        "per_image_standardization",
        "random_brightness",
        "stateless_random_brightness",
        "random_contrast",
        "stateless_random_contrast",
        "adjust_brightness",
        "adjust_contrast",
        "adjust_gamma",
        "convert_image_dtype",
        "rgb_to_grayscale",
        "grayscale_to_rgb",
        "random_hue",
        "stateless_random_hue",
        "adjust_hue",
        "random_jpeg_quality",
        "stateless_random_jpeg_quality",
        "adjust_jpeg_quality",
        "random_saturation",
        "stateless_random_saturation",
        "adjust_saturation",
        "is_jpeg",
        "_is_png",
        "encode_png",
        "decode_image",
        "total_variation",
        "sample_distorted_bounding_box_v2",
        "stateless_sample_distorted_bounding_box",
        "sample_distorted_bounding_box",
        "non_max_suppression",
        "non_max_suppression_with_scores",
        "non_max_suppression_with_overlaps",
        "rgb_to_yiq",
        "yiq_to_rgb",
        "rgb_to_yuv",
        "yuv_to_rgb",
        "_verify_compatible_image_shapes",
        "psnr",
        "_ssim_helper",
        "_fspecial_gauss",
        "_ssim_per_channel",
        "ssim",
        "ssim_multiscale",
        "image_gradients",
        "sobel_edges",
        "resize_bicubic",
        "resize_bilinear",
        "resize_nearest_neighbor",
        "crop_and_resize_v2",
        "crop_and_resize_v1",
        "extract_glimpse",
        "extract_glimpse_v2",
        "combined_non_max_suppression",
        "_bbox_overlap",
        "_self_suppression",
        "_cross_suppression",
        "_suppression_loop_body",
        "non_max_suppression_padded",
        "non_max_suppression_padded_v2",
        "non_max_suppression_padded_v1",
        "draw_bounding_boxes_v2",
        "draw_bounding_boxes",
        "generate_bounding_box_proposals",
        "_rot90",
        "_rot180",
        "_rot270",
        "_rot90",
        "_rot180",
        "_rot270",
        "resize_fn",
        "resize_fn",
        "_resize_fn",
        "_resize_fn",
        "reducer",
        "_sort_scores_and_boxes",
        "_loop_cond",
        "suppression_loop_body",
        "f_rank3",
        "f_rank4",
        "f_rank3",
        "f_rank4",
        "_get_dim",
        "max_",
        "min_",
        "equal_",
        "resize_with_scale_and_translate",
        "max_",
        "_bmp",
        "_gif",
        "check_gif",
        "_png",
        "check_png",
        "_jpeg",
        "do_pad",
        "cross_suppression_func",
        "f_rank3",
        "f_rank4",
        "f_rank3",
        "f_rank4"
    ],
    "partitioned_variables": [
        "variable_axis_size_partitioner",
        "min_max_variable_partitioner",
        "fixed_size_partitioner",
        "create_partitioned_variables",
        "_partitioner",
        "_partitioner",
        "_partitioner"
    ],
    "gradient_checker_v2": [
        "_product",
        "_eval_indexed_slices",
        "_to_numpy",
        "_prepare",
        "_compute_theoretical_jacobian",
        "_compute_numeric_jacobian",
        "_compute_gradient",
        "_compute_gradient_list",
        "compute_gradient",
        "max_error",
        "decorated_graph",
        "decorated_eager"
    ],
    "nccl_ops": [
        "all_sum",
        "_all_sum_grad",
        "all_prod",
        "all_min",
        "all_max",
        "reduce_sum",
        "_reduce_sum_grad",
        "broadcast",
        "_broadcast_grad",
        "_apply_all_reduce",
        "_apply_reduce",
        "_get_shared_name",
        "_check_device",
        "_all_reduce"
    ],
    "check_ops": [
        "_maybe_constant_value_string",
        "_assert_static",
        "_shape_and_dtype_str",
        "_unary_assert_doc",
        "_binary_assert_doc",
        "_make_assert_msg_data",
        "_pretty_print",
        "_binary_assert",
        "assert_proper_iterable",
        "assert_negative_v2",
        "assert_negative",
        "assert_positive_v2",
        "assert_positive",
        "assert_non_negative_v2",
        "assert_non_negative",
        "assert_non_positive_v2",
        "assert_non_positive",
        "assert_equal_v2",
        "assert_equal",
        "assert_none_equal_v2",
        "assert_none_equal",
        "assert_near_v2",
        "assert_near",
        "assert_less_v2",
        "assert_less",
        "assert_less_equal_v2",
        "assert_less_equal",
        "assert_greater_v2",
        "assert_greater",
        "assert_greater_equal_v2",
        "assert_greater_equal",
        "_assert_rank_condition",
        "assert_rank_v2",
        "assert_rank",
        "assert_rank_at_least_v2",
        "assert_rank_at_least",
        "_static_rank_in",
        "_dynamic_rank_in",
        "_assert_ranks_condition",
        "assert_rank_in_v2",
        "assert_rank_in",
        "assert_integer_v2",
        "assert_integer",
        "assert_type_v2",
        "assert_type",
        "_dimension_sizes",
        "_symbolic_dimension_sizes",
        "_has_known_value",
        "_is_symbol_for_any_size",
        "assert_shapes_v2",
        "assert_shapes",
        "_get_diff_for_monotonic_comparison",
        "is_numeric_tensor",
        "is_non_decreasing",
        "is_strictly_increasing",
        "_assert_same_base_type",
        "assert_same_float_dtype",
        "assert_scalar_v2",
        "assert_scalar",
        "ensure_shape",
        "_ensure_shape_grad",
        "_decorator",
        "_decorator",
        "tensor_name"
    ],
    "gen_math_ops": [
        "_abs",
        "_abs_eager_fallback",
        "accumulate_nv2",
        "accumulate_nv2_eager_fallback",
        "acos",
        "acos_eager_fallback",
        "acosh",
        "acosh_eager_fallback",
        "add",
        "add_eager_fallback",
        "add_n",
        "add_n_eager_fallback",
        "add_v2",
        "add_v2_eager_fallback",
        "_all",
        "_all_eager_fallback",
        "angle",
        "angle_eager_fallback",
        "_any",
        "_any_eager_fallback",
        "approximate_equal",
        "approximate_equal_eager_fallback",
        "arg_max",
        "arg_max_eager_fallback",
        "arg_min",
        "arg_min_eager_fallback",
        "asin",
        "asin_eager_fallback",
        "asinh",
        "asinh_eager_fallback",
        "atan",
        "atan_eager_fallback",
        "atan2",
        "atan2_eager_fallback",
        "atanh",
        "atanh_eager_fallback",
        "batch_mat_mul",
        "batch_mat_mul_eager_fallback",
        "batch_mat_mul_v2",
        "batch_mat_mul_v2_eager_fallback",
        "betainc",
        "betainc_eager_fallback",
        "bincount",
        "bincount_eager_fallback",
        "bucketize",
        "bucketize_eager_fallback",
        "cast",
        "cast_eager_fallback",
        "ceil",
        "ceil_eager_fallback",
        "_clip_by_value",
        "_clip_by_value_eager_fallback",
        "compare_and_bitpack",
        "compare_and_bitpack_eager_fallback",
        "_complex",
        "_complex_eager_fallback",
        "complex_abs",
        "complex_abs_eager_fallback",
        "conj",
        "conj_eager_fallback",
        "cos",
        "cos_eager_fallback",
        "cosh",
        "cosh_eager_fallback",
        "cross",
        "cross_eager_fallback",
        "cumprod",
        "cumprod_eager_fallback",
        "cumsum",
        "cumsum_eager_fallback",
        "cumulative_logsumexp",
        "cumulative_logsumexp_eager_fallback",
        "dense_bincount",
        "dense_bincount_eager_fallback",
        "digamma",
        "digamma_eager_fallback",
        "div",
        "div_eager_fallback",
        "div_no_nan",
        "div_no_nan_eager_fallback",
        "equal",
        "equal_eager_fallback",
        "erf",
        "erf_eager_fallback",
        "erfc",
        "erfc_eager_fallback",
        "erfinv",
        "erfinv_eager_fallback",
        "euclidean_norm",
        "euclidean_norm_eager_fallback",
        "exp",
        "exp_eager_fallback",
        "expm1",
        "expm1_eager_fallback",
        "floor",
        "floor_eager_fallback",
        "floor_div",
        "floor_div_eager_fallback",
        "floor_mod",
        "floor_mod_eager_fallback",
        "greater",
        "greater_eager_fallback",
        "greater_equal",
        "greater_equal_eager_fallback",
        "_histogram_fixed_width",
        "_histogram_fixed_width_eager_fallback",
        "igamma",
        "igamma_eager_fallback",
        "igamma_grad_a",
        "igamma_grad_a_eager_fallback",
        "igammac",
        "igammac_eager_fallback",
        "imag",
        "imag_eager_fallback",
        "inv",
        "inv_eager_fallback",
        "inv_grad",
        "inv_grad_eager_fallback",
        "is_finite",
        "is_finite_eager_fallback",
        "is_inf",
        "is_inf_eager_fallback",
        "is_nan",
        "is_nan_eager_fallback",
        "less",
        "less_eager_fallback",
        "less_equal",
        "less_equal_eager_fallback",
        "lgamma",
        "lgamma_eager_fallback",
        "lin_space",
        "lin_space_eager_fallback",
        "log",
        "log_eager_fallback",
        "log1p",
        "log1p_eager_fallback",
        "logical_and",
        "logical_and_eager_fallback",
        "logical_not",
        "logical_not_eager_fallback",
        "logical_or",
        "logical_or_eager_fallback",
        "mat_mul",
        "mat_mul_eager_fallback",
        "_max",
        "_max_eager_fallback",
        "maximum",
        "maximum_eager_fallback",
        "mean",
        "mean_eager_fallback",
        "_min",
        "_min_eager_fallback",
        "minimum",
        "minimum_eager_fallback",
        "mod",
        "mod_eager_fallback",
        "mul",
        "mul_eager_fallback",
        "mul_no_nan",
        "mul_no_nan_eager_fallback",
        "ndtri",
        "ndtri_eager_fallback",
        "neg",
        "neg_eager_fallback",
        "next_after",
        "next_after_eager_fallback",
        "not_equal",
        "not_equal_eager_fallback",
        "polygamma",
        "polygamma_eager_fallback",
        "_pow",
        "_pow_eager_fallback",
        "prod",
        "prod_eager_fallback",
        "quantize_down_and_shrink_range",
        "quantize_down_and_shrink_range_eager_fallback",
        "quantized_add",
        "quantized_add_eager_fallback",
        "quantized_mat_mul",
        "quantized_mat_mul_eager_fallback",
        "quantized_mul",
        "quantized_mul_eager_fallback",
        "ragged_bincount",
        "ragged_bincount_eager_fallback",
        "_range",
        "_range_eager_fallback",
        "real",
        "real_eager_fallback",
        "real_div",
        "real_div_eager_fallback",
        "reciprocal",
        "reciprocal_eager_fallback",
        "reciprocal_grad",
        "reciprocal_grad_eager_fallback",
        "requantization_range",
        "requantization_range_eager_fallback",
        "requantization_range_per_channel",
        "requantization_range_per_channel_eager_fallback",
        "requantize",
        "requantize_eager_fallback",
        "requantize_per_channel",
        "requantize_per_channel_eager_fallback",
        "rint",
        "rint_eager_fallback",
        "round",
        "round_eager_fallback",
        "rsqrt",
        "rsqrt_eager_fallback",
        "rsqrt_grad",
        "rsqrt_grad_eager_fallback",
        "segment_max",
        "segment_max_eager_fallback",
        "segment_mean",
        "segment_mean_eager_fallback",
        "segment_min",
        "segment_min_eager_fallback",
        "segment_prod",
        "segment_prod_eager_fallback",
        "segment_sum",
        "segment_sum_eager_fallback",
        "select",
        "select_eager_fallback",
        "select_v2",
        "select_v2_eager_fallback",
        "sigmoid",
        "sigmoid_eager_fallback",
        "sigmoid_grad",
        "sigmoid_grad_eager_fallback",
        "sign",
        "sign_eager_fallback",
        "sin",
        "sin_eager_fallback",
        "sinh",
        "sinh_eager_fallback",
        "sobol_sample",
        "sobol_sample_eager_fallback",
        "sparse_bincount",
        "sparse_bincount_eager_fallback",
        "sparse_mat_mul",
        "sparse_mat_mul_eager_fallback",
        "sparse_segment_mean",
        "sparse_segment_mean_eager_fallback",
        "sparse_segment_mean_grad",
        "sparse_segment_mean_grad_eager_fallback",
        "sparse_segment_mean_with_num_segments",
        "sparse_segment_mean_with_num_segments_eager_fallback",
        "sparse_segment_sqrt_n",
        "sparse_segment_sqrt_n_eager_fallback",
        "sparse_segment_sqrt_n_grad",
        "sparse_segment_sqrt_n_grad_eager_fallback",
        "sparse_segment_sqrt_n_with_num_segments",
        "sparse_segment_sqrt_n_with_num_segments_eager_fallback",
        "sparse_segment_sum",
        "sparse_segment_sum_eager_fallback",
        "sparse_segment_sum_with_num_segments",
        "sparse_segment_sum_with_num_segments_eager_fallback",
        "sqrt",
        "sqrt_eager_fallback",
        "sqrt_grad",
        "sqrt_grad_eager_fallback",
        "square",
        "square_eager_fallback",
        "squared_difference",
        "squared_difference_eager_fallback",
        "sub",
        "sub_eager_fallback",
        "_sum",
        "_sum_eager_fallback",
        "tan",
        "tan_eager_fallback",
        "tanh",
        "tanh_eager_fallback",
        "tanh_grad",
        "tanh_grad_eager_fallback",
        "truncate_div",
        "truncate_div_eager_fallback",
        "truncate_mod",
        "truncate_mod_eager_fallback",
        "unsorted_segment_max",
        "unsorted_segment_max_eager_fallback",
        "unsorted_segment_min",
        "unsorted_segment_min_eager_fallback",
        "unsorted_segment_prod",
        "unsorted_segment_prod_eager_fallback",
        "unsorted_segment_sum",
        "unsorted_segment_sum_eager_fallback",
        "xdivy",
        "xdivy_eager_fallback",
        "xlog1py",
        "xlog1py_eager_fallback",
        "xlogy",
        "xlogy_eager_fallback",
        "zeta",
        "zeta_eager_fallback"
    ],
    "critical_section_ops": [
        "_ExecutionSignature",
        "_identity",
        "_get_device_or_colocation",
        "_get_colocation",
        "_get_critical_section_stack",
        "_push_critical_section_stack",
        "CriticalSection",
        "_init_from_args",
        "name",
        "execute",
        "_add_control_dependencies_to_lock",
        "_is_self_handle",
        "_check_multiple_access_to_resources"
    ],
    "gen_summary_ops": [
        "close_summary_writer",
        "close_summary_writer_eager_fallback",
        "create_summary_db_writer",
        "create_summary_db_writer_eager_fallback",
        "create_summary_file_writer",
        "create_summary_file_writer_eager_fallback",
        "flush_summary_writer",
        "flush_summary_writer_eager_fallback",
        "import_event",
        "import_event_eager_fallback",
        "summary_writer",
        "summary_writer_eager_fallback",
        "write_audio_summary",
        "write_audio_summary_eager_fallback",
        "write_graph_summary",
        "write_graph_summary_eager_fallback",
        "write_histogram_summary",
        "write_histogram_summary_eager_fallback",
        "write_image_summary",
        "write_image_summary_eager_fallback",
        "write_raw_proto_summary",
        "write_raw_proto_summary_eager_fallback",
        "write_scalar_summary",
        "write_scalar_summary_eager_fallback",
        "write_summary",
        "write_summary_eager_fallback"
    ],
    "control_flow_util_v2": [
        "in_defun",
        "in_while_loop_defun",
        "create_new_tf_function",
        "unique_fn_name",
        "unique_grad_fn_name",
        "maybe_set_lowering_attr",
        "maybe_propagate_compile_time_consts_in_xla",
        "resource_input_index",
        "clear_control_inputs",
        "_is_tpu_strategy",
        "_is_building_keras_layer",
        "output_all_intermediates",
        "get_func_graph"
    ],
    "stateful_random_ops": [
        "Algorithm",
        "non_deterministic_ints",
        "_uint_to_int",
        "_make_1d_state",
        "_get_counter_size",
        "_get_state_size",
        "_check_state_shape",
        "_make_state_from_seed",
        "_convert_alg_to_int",
        "create_rng_state",
        "_shape_tensor",
        "_convert_to_state_tensor",
        "GeneratorSpec",
        "Generator",
        "get_global_generator",
        "set_global_generator",
        "_component_specs",
        "_to_components",
        "_from_components",
        "value_type",
        "_serialize",
        "_create_variable",
        "from_state",
        "from_seed",
        "from_non_deterministic_state",
        "from_key_counter",
        "reset",
        "reset_from_seed",
        "reset_from_key_counter",
        "_type_spec",
        "state",
        "algorithm",
        "_standard_normal",
        "key",
        "skip",
        "_prepare_key_counter",
        "normal",
        "_truncated_normal",
        "truncated_normal",
        "_uniform",
        "_uniform_full_int",
        "uniform",
        "uniform_full_int",
        "binomial",
        "_make_int64_keys",
        "make_seeds",
        "split",
        "_key_to_state"
    ],
    "sort_ops": [
        "sort",
        "argsort",
        "_sort_or_argsort",
        "_descending_sort",
        "_ascending_sort"
    ],
    "parsing_config": [
        "VarLenFeature",
        "RaggedFeature",
        "SparseFeature",
        "FixedLenFeature",
        "FixedLenSequenceFeature",
        "_ParseOpParams",
        "_construct_tensors_for_composite_features",
        "_add_ragged_partition",
        "_add_batched_ragged_partition",
        "_build_ragged_tensors",
        "__new__",
        "__new__",
        "__new__",
        "__new__",
        "from_features",
        "dense_shapes_as_proto",
        "num_features",
        "dense_defaults_vec",
        "_make_dense_default",
        "_add_feature",
        "_add_varlen_feature",
        "_add_sparse_key",
        "_add_sparse_feature",
        "_add_fixed_len_feature",
        "_add_fixed_len_sequence_feature",
        "_add_ragged_key",
        "_add_ragged_feature",
        "_validate"
    ],
    "gen_decode_proto_ops": [
        "decode_proto_v2",
        "decode_proto_v2_eager_fallback"
    ],
    "control_flow_v2_toggles": [
        "enable_control_flow_v2",
        "disable_control_flow_v2",
        "control_flow_v2_enabled",
        "output_all_intermediates"
    ],
    "data_flow_ops": [
        "_as_type_list",
        "_as_shape_list",
        "_as_name_list",
        "_shape_common",
        "QueueBase",
        "_shared_name",
        "RandomShuffleQueue",
        "FIFOQueue",
        "GPUCompatibleFIFOQueue",
        "PaddingFIFOQueue",
        "PriorityQueue",
        "Barrier",
        "ConditionalAccumulatorBase",
        "ConditionalAccumulator",
        "SparseConditionalAccumulator",
        "BaseStagingArea",
        "StagingArea",
        "MapStagingArea",
        "RecordInput",
        "from_list",
        "queue_ref",
        "name",
        "dtypes",
        "shapes",
        "names",
        "_check_enqueue_dtypes",
        "_scope_vals",
        "enqueue",
        "enqueue_many",
        "_dequeue_return_value",
        "dequeue",
        "dequeue_many",
        "dequeue_up_to",
        "close",
        "is_closed",
        "size",
        "enqueue_many",
        "dequeue_many",
        "barrier_ref",
        "name",
        "insert_many",
        "take_many",
        "close",
        "ready_size",
        "incomplete_size",
        "accumulator_ref",
        "name",
        "dtype",
        "num_accumulated",
        "set_global_step",
        "apply_grad",
        "take_grad",
        "apply_indexed_slices_grad",
        "apply_grad",
        "take_grad",
        "take_indexed_slices_grad",
        "num_accumulated",
        "set_global_step",
        "name",
        "dtypes",
        "shapes",
        "names",
        "capacity",
        "memory_limit",
        "_check_put_dtypes",
        "_create_device_transfers",
        "_get_return_value",
        "_scope_vals",
        "put",
        "__internal_get",
        "get",
        "peek",
        "size",
        "clear",
        "put",
        "_get_indices_and_dtypes",
        "peek",
        "get",
        "_pop",
        "_popitem",
        "size",
        "incomplete_size",
        "clear",
        "get_yield_op"
    ],
    "gen_rnn_ops": [
        "block_lstm",
        "block_lstm_eager_fallback",
        "block_lstm_grad",
        "block_lstm_grad_eager_fallback",
        "block_lstm_grad_v2",
        "block_lstm_grad_v2_eager_fallback",
        "block_lstmv2",
        "block_lstmv2_eager_fallback",
        "gru_block_cell",
        "gru_block_cell_eager_fallback",
        "gru_block_cell_grad",
        "gru_block_cell_grad_eager_fallback",
        "lstm_block_cell",
        "lstm_block_cell_eager_fallback",
        "lstm_block_cell_grad",
        "lstm_block_cell_grad_eager_fallback"
    ],
    "gen_sendrecv_ops": [
        "recv",
        "recv_eager_fallback",
        "send",
        "send_eager_fallback"
    ],
    "gen_cudnn_rnn_ops": [
        "cudnn_rnn",
        "cudnn_rnn_eager_fallback",
        "cudnn_rnn_backprop",
        "cudnn_rnn_backprop_eager_fallback",
        "cudnn_rnn_backprop_v2",
        "cudnn_rnn_backprop_v2_eager_fallback",
        "cudnn_rnn_backprop_v3",
        "cudnn_rnn_backprop_v3_eager_fallback",
        "cudnn_rnn_canonical_to_params",
        "cudnn_rnn_canonical_to_params_eager_fallback",
        "cudnn_rnn_canonical_to_params_v2",
        "cudnn_rnn_canonical_to_params_v2_eager_fallback",
        "cudnn_rnn_params_size",
        "cudnn_rnn_params_size_eager_fallback",
        "cudnn_rnn_params_to_canonical",
        "cudnn_rnn_params_to_canonical_eager_fallback",
        "cudnn_rnn_params_to_canonical_v2",
        "cudnn_rnn_params_to_canonical_v2_eager_fallback",
        "cudnn_rnnv2",
        "cudnn_rnnv2_eager_fallback",
        "cudnn_rnnv3",
        "cudnn_rnnv3_eager_fallback"
    ],
    "gen_stateless_random_ops": [
        "stateless_multinomial",
        "stateless_multinomial_eager_fallback",
        "stateless_parameterized_truncated_normal",
        "stateless_parameterized_truncated_normal_eager_fallback",
        "stateless_random_binomial",
        "stateless_random_binomial_eager_fallback",
        "stateless_random_gamma_v2",
        "stateless_random_gamma_v2_eager_fallback",
        "stateless_random_normal",
        "stateless_random_normal_eager_fallback",
        "stateless_random_poisson",
        "stateless_random_poisson_eager_fallback",
        "stateless_random_uniform",
        "stateless_random_uniform_eager_fallback",
        "stateless_random_uniform_full_int",
        "stateless_random_uniform_full_int_eager_fallback",
        "stateless_random_uniform_int",
        "stateless_random_uniform_int_eager_fallback",
        "stateless_truncated_normal",
        "stateless_truncated_normal_eager_fallback"
    ],
    "control_flow_ops": [
        "for_loop",
        "_flatten_first_two_dims",
        "_is_under_xla_context",
        "pfor",
        "_loop_fn_has_config",
        "_pfor_impl",
        "_broadcasting_gather",
        "vectorized_map",
        "while_body",
        "f",
        "_convert_to_tensor_or_ndarray",
        "loop_fn",
        "_get_shape",
        "tiled_loop_body",
        "tiled_loop_fn"
    ],
    "inplace_ops": [
        "_inplace_helper",
        "alias_inplace_update",
        "alias_inplace_add",
        "alias_inplace_sub",
        "empty_like",
        "inplace_update",
        "inplace_add",
        "inplace_sub"
    ],
    "linalg_ops": [
        "_RegularizedGramianCholesky",
        "matrix_triangular_solve",
        "cholesky_solve",
        "eye",
        "matrix_solve_ls",
        "eig",
        "eigvals",
        "self_adjoint_eig",
        "self_adjoint_eigvals",
        "svd",
        "norm_v2",
        "norm",
        "_use_composite_impl",
        "_overdetermined",
        "_underdetermined",
        "_composite_impl"
    ],
    "gradient_checker": [
        "_product",
        "_extra_feeds",
        "_compute_theoretical_jacobian",
        "_compute_numeric_jacobian",
        "_compute_dx_and_dy",
        "_compute_gradient",
        "_compute_gradient_list",
        "compute_gradient",
        "_compute_error",
        "compute_gradient_error"
    ],
    "gen_bitwise_ops": [
        "bitwise_and",
        "bitwise_and_eager_fallback",
        "bitwise_or",
        "bitwise_or_eager_fallback",
        "bitwise_xor",
        "bitwise_xor_eager_fallback",
        "invert",
        "invert_eager_fallback",
        "left_shift",
        "left_shift_eager_fallback",
        "population_count",
        "population_count_eager_fallback",
        "right_shift",
        "right_shift_eager_fallback"
    ],
    "math_ops": [
        "linspace_nd",
        "_set_doc",
        "argmax",
        "argmax_v2",
        "argmin",
        "argmin_v2",
        "abs",
        "_bucketize",
        "DivideDelegateWithName",
        "divide",
        "multiply",
        "_mul",
        "subtract",
        "_sub",
        "_neg",
        "scalar_mul",
        "scalar_mul_v2",
        "pow",
        "complex",
        "sign",
        "real",
        "imag",
        "angle",
        "round",
        "cast",
        "saturate_cast",
        "to_float",
        "to_double",
        "to_int32",
        "to_int64",
        "to_bfloat16",
        "to_complex64",
        "to_complex128",
        "_OverrideBinaryOperatorHelper",
        "_sparse_dense_truediv",
        "_truediv_python3",
        "_div_python2",
        "truediv",
        "div",
        "div_no_nan",
        "multiply_no_nan",
        "floordiv",
        "_add_dispatch",
        "_mul_dispatch",
        "logical_xor",
        "logical_and",
        "and_",
        "or_",
        "xor_",
        "invert_",
        "equal",
        "not_equal",
        "tensor_equals",
        "tensor_not_equals",
        "range",
        "_range_tensor_conversion_function",
        "_ReductionDims",
        "_has_fully_defined_shape",
        "_may_reduce_to_scalar",
        "reduce_sum_v1",
        "reduce_sum",
        "reduce_sum_with_dims",
        "reduce_euclidean_norm",
        "count_nonzero",
        "count_nonzero_v2",
        "reduce_mean_v1",
        "reduce_mean",
        "reduce_variance",
        "reduce_std",
        "reduce_prod",
        "reduce_prod_v1",
        "reduce_min_v1",
        "reduce_min",
        "reduce_max_v1",
        "reduce_max",
        "reduce_max_with_dims",
        "reduce_all_v1",
        "reduce_all",
        "reduce_any_v1",
        "reduce_any",
        "reduce_logsumexp_v1",
        "reduce_logsumexp",
        "trace",
        "matmul",
        "matvec",
        "_calc_mat_mul_flops",
        "_calc_batch_mat_mul_flops",
        "_as_indexed_slices",
        "_as_indexed_slices_list",
        "add_n",
        "accumulate_n",
        "_accumulate_n_grad",
        "sigmoid",
        "log_sigmoid",
        "cumsum",
        "cumprod",
        "cumulative_logsumexp",
        "conj",
        "reduced_shape",
        "_unsorted_segment_N",
        "unsorted_segment_mean",
        "unsorted_segment_sqrt_n",
        "sparse_segment_sum",
        "sparse_segment_sum_v2",
        "sparse_segment_mean",
        "sparse_segment_mean_v2",
        "sparse_segment_sqrt_n",
        "sparse_segment_sqrt_n_v2",
        "tensordot",
        "polyval",
        "reciprocal_no_nan",
        "xlog1py",
        "erfinv",
        "ndtri",
        "erfcinv",
        "ceil",
        "sqrt",
        "exp",
        "sobol_sample",
        "rsqrt",
        "acos",
        "floor",
        "_decorator",
        "__truediv__",
        "__floordiv__",
        "__div__",
        "binary_op_wrapper",
        "binary_op_wrapper_sparse",
        "r_binary_op_wrapper",
        "_input_error",
        "_tensordot_reshape",
        "_tensordot_axes"
    ],
    "special_math_ops": [
        "lbeta",
        "dawsn",
        "expint",
        "fresnel_cos",
        "fresnel_sin",
        "spence",
        "bessel_i0",
        "bessel_i0e",
        "bessel_i1",
        "bessel_i1e",
        "bessel_k0",
        "bessel_k0e",
        "bessel_k1",
        "bessel_k1e",
        "bessel_j0",
        "bessel_j1",
        "bessel_y0",
        "bessel_y1",
        "_einsum_grad",
        "_enclosing_tpu_context",
        "einsum",
        "_einsum_v1",
        "_einsum_v1_parse_and_resolve_equation",
        "_einsum_v1_reduction",
        "_transpose_if_necessary",
        "_reshape_if_necessary",
        "_get_shape",
        "_total_size",
        "_exponential_space_einsum_v1",
        "_einsum_v2",
        "_get_opt_einsum_contract_path",
        "_einsum_v2_parse_and_resolve_equation",
        "sort_key"
    ],
    "logging_ops": [
        "Print",
        "_generate_placeholder_string",
        "_is_filepath",
        "print_v2",
        "_PrintGrad",
        "_Collect",
        "histogram_summary",
        "image_summary",
        "audio_summary",
        "merge_summary",
        "merge_all_summaries",
        "get_summary_op",
        "scalar_summary"
    ],
    "image_grad": [
        "_ResizeNearestNeighborGrad",
        "_ResizeBilinearGrad",
        "_ScaleAndTranslateGrad",
        "_ResizeBicubicGrad",
        "_CropAndResizeGrad",
        "_CustomReciprocal",
        "_RGBToHSVGrad"
    ],
    "ctc_ops": [
        "_get_context_device_type",
        "_generate_defun_backend",
        "ctc_loss",
        "_ctc_loss_impl",
        "_CTCLossGradImpl",
        "_CTCLossGrad",
        "_CTCLossV2Grad",
        "ctc_greedy_decoder",
        "ctc_beam_search_decoder",
        "ctc_beam_search_decoder_v2",
        "_ctc_state_trans",
        "ctc_state_log_probs",
        "_ilabel_to_state",
        "_state_to_olabel",
        "_state_to_olabel_unique",
        "ctc_loss_and_grad",
        "_ctc_loss_grad",
        "_ctc_loss_op_standard",
        "_ctc_loss_op_cudnn",
        "_ctc_loss_shape",
        "ctc_loss_v2",
        "ctc_loss_v3",
        "ctc_loss_dense",
        "collapse_repeated",
        "dense_labels_to_sparse",
        "ctc_unique_labels",
        "_sum_states",
        "_forward_backward_log",
        "_scan",
        "_get_dim",
        "_forward",
        "_backward",
        "cond",
        "body",
        "compute_ctc_loss",
        "_unique",
        "grad"
    ],
    "image_grad_test_base": [
        "ResizeNearestNeighborOpTestBase",
        "ResizeBilinearOpTestBase",
        "ResizeBicubicOpTestBase",
        "ScaleAndTranslateOpTestBase",
        "CropAndResizeOpTestBase",
        "RGBToHSVOpTestBase",
        "testShapeIsCorrectAfterOp",
        "testGradFromResizeToLargerInBothDims",
        "testGradFromResizeToSmallerInBothDims",
        "testCompareGpuVsCpu",
        "_itGen",
        "_getJacobians",
        "testShapes",
        "testGradients",
        "testTypes",
        "testGradOnUnsupportedType",
        "_gpuVsCpuCase",
        "testCompareGpuVsCpu",
        "testCompareGpuVsCpuFloat64",
        "testShapeIsCorrectAfterOp",
        "testGradFromResizeToLargerInBothDims",
        "testGradFromResizeToSmallerInBothDims",
        "testGradOnUnsupportedType",
        "testGrads",
        "testIdentityGrads",
        "testShapeIsCorrectAfterOp",
        "_randomUniformAvoidAnchors",
        "testGradRandomBoxes",
        "testShapeIsCorrectAfterOp",
        "testRGBToHSVGradSimpleCase",
        "testRGBToHSVGradRandomCase",
        "testRGBToHSVGradSpecialCaseRGreatest",
        "f",
        "f",
        "f",
        "f_dummy",
        "resize_nn",
        "resize_nn",
        "resize_nn"
    ],
    "gen_stateful_random_ops": [
        "non_deterministic_ints",
        "non_deterministic_ints_eager_fallback",
        "rng_read_and_skip",
        "rng_read_and_skip_eager_fallback",
        "rng_skip",
        "rng_skip_eager_fallback",
        "stateful_random_binomial",
        "stateful_random_binomial_eager_fallback",
        "stateful_standard_normal",
        "stateful_standard_normal_eager_fallback",
        "stateful_standard_normal_v2",
        "stateful_standard_normal_v2_eager_fallback",
        "stateful_truncated_normal",
        "stateful_truncated_normal_eager_fallback",
        "stateful_uniform",
        "stateful_uniform_eager_fallback",
        "stateful_uniform_full_int",
        "stateful_uniform_full_int_eager_fallback",
        "stateful_uniform_int",
        "stateful_uniform_int_eager_fallback"
    ],
    "random_grad": [
        "add_leading_unit_dimensions",
        "_RandomGammaGrad",
        "_StatelessRandomGammaV2Grad",
        "_Ndtr",
        "_StatelessParameterizedTruncatedNormalGrad"
    ],
    "gen_tpu_ops": [
        "all_to_all",
        "all_to_all_eager_fallback",
        "collective_permute",
        "collective_permute_eager_fallback",
        "configure_distributed_tpu",
        "configure_distributed_tpu_eager_fallback",
        "configure_tpu_embedding",
        "configure_tpu_embedding_eager_fallback",
        "cross_replica_sum",
        "cross_replica_sum_eager_fallback",
        "enqueue_tpu_embedding_integer_batch",
        "enqueue_tpu_embedding_integer_batch_eager_fallback",
        "enqueue_tpu_embedding_ragged_tensor_batch",
        "enqueue_tpu_embedding_ragged_tensor_batch_eager_fallback",
        "enqueue_tpu_embedding_sparse_batch",
        "enqueue_tpu_embedding_sparse_batch_eager_fallback",
        "enqueue_tpu_embedding_sparse_tensor_batch",
        "enqueue_tpu_embedding_sparse_tensor_batch_eager_fallback",
        "infeed_dequeue",
        "infeed_dequeue_eager_fallback",
        "infeed_dequeue_tuple",
        "infeed_dequeue_tuple_eager_fallback",
        "infeed_enqueue",
        "infeed_enqueue_eager_fallback",
        "infeed_enqueue_prelinearized_buffer",
        "infeed_enqueue_prelinearized_buffer_eager_fallback",
        "infeed_enqueue_tuple",
        "infeed_enqueue_tuple_eager_fallback",
        "load_tpu_embedding_adam_parameters",
        "load_tpu_embedding_adam_parameters_eager_fallback",
        "load_tpu_embedding_adam_parameters_grad_accum_debug",
        "load_tpu_embedding_adam_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_adadelta_parameters",
        "load_tpu_embedding_adadelta_parameters_eager_fallback",
        "load_tpu_embedding_adadelta_parameters_grad_accum_debug",
        "load_tpu_embedding_adadelta_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_adagrad_parameters",
        "load_tpu_embedding_adagrad_parameters_eager_fallback",
        "load_tpu_embedding_adagrad_parameters_grad_accum_debug",
        "load_tpu_embedding_adagrad_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_centered_rms_prop_parameters",
        "load_tpu_embedding_centered_rms_prop_parameters_eager_fallback",
        "load_tpu_embedding_ftrl_parameters",
        "load_tpu_embedding_ftrl_parameters_eager_fallback",
        "load_tpu_embedding_ftrl_parameters_grad_accum_debug",
        "load_tpu_embedding_ftrl_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_mdl_adagrad_light_parameters",
        "load_tpu_embedding_mdl_adagrad_light_parameters_eager_fallback",
        "load_tpu_embedding_momentum_parameters",
        "load_tpu_embedding_momentum_parameters_eager_fallback",
        "load_tpu_embedding_momentum_parameters_grad_accum_debug",
        "load_tpu_embedding_momentum_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_proximal_adagrad_parameters",
        "load_tpu_embedding_proximal_adagrad_parameters_eager_fallback",
        "load_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug",
        "load_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_proximal_yogi_parameters",
        "load_tpu_embedding_proximal_yogi_parameters_eager_fallback",
        "load_tpu_embedding_proximal_yogi_parameters_grad_accum_debug",
        "load_tpu_embedding_proximal_yogi_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_rms_prop_parameters",
        "load_tpu_embedding_rms_prop_parameters_eager_fallback",
        "load_tpu_embedding_rms_prop_parameters_grad_accum_debug",
        "load_tpu_embedding_rms_prop_parameters_grad_accum_debug_eager_fallback",
        "load_tpu_embedding_stochastic_gradient_descent_parameters",
        "load_tpu_embedding_stochastic_gradient_descent_parameters_eager_fallback",
        "load_tpu_embedding_stochastic_gradient_descent_parameters_grad_accum_debug",
        "load_tpu_embedding_stochastic_gradient_descent_parameters_grad_accum_debug_eager_fallback",
        "outfeed_dequeue",
        "outfeed_dequeue_eager_fallback",
        "outfeed_dequeue_tuple",
        "outfeed_dequeue_tuple_eager_fallback",
        "outfeed_dequeue_tuple_v2",
        "outfeed_dequeue_tuple_v2_eager_fallback",
        "outfeed_dequeue_v2",
        "outfeed_dequeue_v2_eager_fallback",
        "outfeed_enqueue",
        "outfeed_enqueue_eager_fallback",
        "outfeed_enqueue_tuple",
        "outfeed_enqueue_tuple_eager_fallback",
        "prelinearize",
        "prelinearize_eager_fallback",
        "prelinearize_tuple",
        "prelinearize_tuple_eager_fallback",
        "recv_tpu_embedding_activations",
        "recv_tpu_embedding_activations_eager_fallback",
        "retrieve_tpu_embedding_adam_parameters",
        "retrieve_tpu_embedding_adam_parameters_eager_fallback",
        "retrieve_tpu_embedding_adam_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_adam_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_adadelta_parameters",
        "retrieve_tpu_embedding_adadelta_parameters_eager_fallback",
        "retrieve_tpu_embedding_adadelta_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_adadelta_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_adagrad_parameters",
        "retrieve_tpu_embedding_adagrad_parameters_eager_fallback",
        "retrieve_tpu_embedding_adagrad_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_adagrad_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_centered_rms_prop_parameters",
        "retrieve_tpu_embedding_centered_rms_prop_parameters_eager_fallback",
        "retrieve_tpu_embedding_ftrl_parameters",
        "retrieve_tpu_embedding_ftrl_parameters_eager_fallback",
        "retrieve_tpu_embedding_ftrl_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_ftrl_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_mdl_adagrad_light_parameters",
        "retrieve_tpu_embedding_mdl_adagrad_light_parameters_eager_fallback",
        "retrieve_tpu_embedding_momentum_parameters",
        "retrieve_tpu_embedding_momentum_parameters_eager_fallback",
        "retrieve_tpu_embedding_momentum_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_momentum_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_proximal_adagrad_parameters",
        "retrieve_tpu_embedding_proximal_adagrad_parameters_eager_fallback",
        "retrieve_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_proximal_yogi_parameters",
        "retrieve_tpu_embedding_proximal_yogi_parameters_eager_fallback",
        "retrieve_tpu_embedding_proximal_yogi_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_proximal_yogi_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_rms_prop_parameters",
        "retrieve_tpu_embedding_rms_prop_parameters_eager_fallback",
        "retrieve_tpu_embedding_rms_prop_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_rms_prop_parameters_grad_accum_debug_eager_fallback",
        "retrieve_tpu_embedding_stochastic_gradient_descent_parameters",
        "retrieve_tpu_embedding_stochastic_gradient_descent_parameters_eager_fallback",
        "retrieve_tpu_embedding_stochastic_gradient_descent_parameters_grad_accum_debug",
        "retrieve_tpu_embedding_stochastic_gradient_descent_parameters_grad_accum_debug_eager_fallback",
        "send_tpu_embedding_gradients",
        "send_tpu_embedding_gradients_eager_fallback",
        "shutdown_distributed_tpu",
        "shutdown_distributed_tpu_eager_fallback",
        "tpu_compilation_result",
        "tpu_compilation_result_eager_fallback",
        "tpu_embedding_activations",
        "tpu_embedding_activations_eager_fallback",
        "tpu_ordinal_selector",
        "tpu_ordinal_selector_eager_fallback",
        "tpu_partitioned_call",
        "tpu_partitioned_call_eager_fallback",
        "tpu_replicate_metadata",
        "tpu_replicate_metadata_eager_fallback",
        "tpu_replicated_input",
        "tpu_replicated_input_eager_fallback",
        "tpu_replicated_output",
        "tpu_replicated_output_eager_fallback",
        "worker_heartbeat",
        "worker_heartbeat_eager_fallback"
    ],
    "gen_resource_variable_ops": [
        "assign_add_variable_op",
        "assign_add_variable_op_eager_fallback",
        "assign_sub_variable_op",
        "assign_sub_variable_op_eager_fallback",
        "assign_variable_op",
        "assign_variable_op_eager_fallback",
        "consume_mutex_lock",
        "consume_mutex_lock_eager_fallback",
        "destroy_resource_op",
        "destroy_resource_op_eager_fallback",
        "mutex_lock",
        "mutex_lock_eager_fallback",
        "mutex_v2",
        "mutex_v2_eager_fallback",
        "read_variable_op",
        "read_variable_op_eager_fallback",
        "resource_gather",
        "resource_gather_eager_fallback",
        "resource_gather_nd",
        "resource_gather_nd_eager_fallback",
        "resource_scatter_add",
        "resource_scatter_add_eager_fallback",
        "resource_scatter_div",
        "resource_scatter_div_eager_fallback",
        "resource_scatter_max",
        "resource_scatter_max_eager_fallback",
        "resource_scatter_min",
        "resource_scatter_min_eager_fallback",
        "resource_scatter_mul",
        "resource_scatter_mul_eager_fallback",
        "resource_scatter_sub",
        "resource_scatter_sub_eager_fallback",
        "resource_scatter_update",
        "resource_scatter_update_eager_fallback",
        "var_handle_op",
        "var_handle_op_eager_fallback",
        "var_is_initialized_op",
        "var_is_initialized_op_eager_fallback",
        "variable_shape",
        "variable_shape_eager_fallback"
    ],
    "confusion_matrix": [
        "remove_squeezable_dimensions",
        "confusion_matrix",
        "confusion_matrix_v1"
    ],
    "gen_functional_ops": [
        "case",
        "case_eager_fallback",
        "device_index",
        "device_index_eager_fallback",
        "fake_param",
        "fake_param_eager_fallback",
        "_for",
        "_for_eager_fallback",
        "_if",
        "_if_eager_fallback",
        "partitioned_call",
        "partitioned_call_eager_fallback",
        "remote_call",
        "remote_call_eager_fallback",
        "stateful_partitioned_call",
        "stateful_partitioned_call_eager_fallback",
        "stateless_case",
        "stateless_case_eager_fallback",
        "stateless_if",
        "stateless_if_eager_fallback",
        "stateless_while",
        "stateless_while_eager_fallback",
        "symbolic_gradient",
        "symbolic_gradient_eager_fallback",
        "to_bool",
        "to_bool_eager_fallback",
        "_while",
        "_while_eager_fallback"
    ],
    "handle_data_util": [
        "get_resource_handle_data",
        "copy_handle_data",
        "set_handle_data"
    ],
    "tensor_forest_ops": [
        "TreeVariableSaveable",
        "tree_variable",
        "ForestVariables",
        "restore",
        "resource",
        "__getitem__"
    ],
    "gen_experimental_dataset_ops": [
        "assert_cardinality_dataset",
        "assert_cardinality_dataset_eager_fallback",
        "assert_next_dataset",
        "assert_next_dataset_eager_fallback",
        "auto_shard_dataset",
        "auto_shard_dataset_eager_fallback",
        "bytes_produced_stats_dataset",
        "bytes_produced_stats_dataset_eager_fallback",
        "csv_dataset",
        "csv_dataset_eager_fallback",
        "csv_dataset_v2",
        "csv_dataset_v2_eager_fallback",
        "choose_fastest_branch_dataset",
        "choose_fastest_branch_dataset_eager_fallback",
        "choose_fastest_dataset",
        "choose_fastest_dataset_eager_fallback",
        "compress_element",
        "compress_element_eager_fallback",
        "compute_batch_size",
        "compute_batch_size_eager_fallback",
        "data_service_dataset",
        "data_service_dataset_eager_fallback",
        "dataset_from_graph",
        "dataset_from_graph_eager_fallback",
        "dataset_to_tf_record",
        "dataset_to_tf_record_eager_fallback",
        "dense_to_sparse_batch_dataset",
        "dense_to_sparse_batch_dataset_eager_fallback",
        "directed_interleave_dataset",
        "directed_interleave_dataset_eager_fallback",
        "dummy_iteration_counter",
        "dummy_iteration_counter_eager_fallback",
        "experimental_assert_next_dataset",
        "experimental_assert_next_dataset_eager_fallback",
        "experimental_auto_shard_dataset",
        "experimental_auto_shard_dataset_eager_fallback",
        "experimental_bytes_produced_stats_dataset",
        "experimental_bytes_produced_stats_dataset_eager_fallback",
        "experimental_csv_dataset",
        "experimental_csv_dataset_eager_fallback",
        "experimental_choose_fastest_dataset",
        "experimental_choose_fastest_dataset_eager_fallback",
        "experimental_dataset_cardinality",
        "experimental_dataset_cardinality_eager_fallback",
        "experimental_dataset_to_tf_record",
        "experimental_dataset_to_tf_record_eager_fallback",
        "experimental_dense_to_sparse_batch_dataset",
        "experimental_dense_to_sparse_batch_dataset_eager_fallback",
        "experimental_directed_interleave_dataset",
        "experimental_directed_interleave_dataset_eager_fallback",
        "experimental_group_by_reducer_dataset",
        "experimental_group_by_reducer_dataset_eager_fallback",
        "experimental_group_by_window_dataset",
        "experimental_group_by_window_dataset_eager_fallback",
        "experimental_ignore_errors_dataset",
        "experimental_ignore_errors_dataset_eager_fallback",
        "experimental_iterator_get_device",
        "experimental_iterator_get_device_eager_fallback",
        "experimental_lmdb_dataset",
        "experimental_lmdb_dataset_eager_fallback",
        "experimental_latency_stats_dataset",
        "experimental_latency_stats_dataset_eager_fallback",
        "experimental_map_and_batch_dataset",
        "experimental_map_and_batch_dataset_eager_fallback",
        "experimental_map_dataset",
        "experimental_map_dataset_eager_fallback",
        "experimental_matching_files_dataset",
        "experimental_matching_files_dataset_eager_fallback",
        "experimental_max_intra_op_parallelism_dataset",
        "experimental_max_intra_op_parallelism_dataset_eager_fallback",
        "experimental_non_serializable_dataset",
        "experimental_non_serializable_dataset_eager_fallback",
        "experimental_parallel_interleave_dataset",
        "experimental_parallel_interleave_dataset_eager_fallback",
        "experimental_parse_example_dataset",
        "experimental_parse_example_dataset_eager_fallback",
        "experimental_private_thread_pool_dataset",
        "experimental_private_thread_pool_dataset_eager_fallback",
        "experimental_random_dataset",
        "experimental_random_dataset_eager_fallback",
        "experimental_rebatch_dataset",
        "experimental_rebatch_dataset_eager_fallback",
        "experimental_scan_dataset",
        "experimental_scan_dataset_eager_fallback",
        "experimental_set_stats_aggregator_dataset",
        "experimental_set_stats_aggregator_dataset_eager_fallback",
        "experimental_sleep_dataset",
        "experimental_sleep_dataset_eager_fallback",
        "experimental_sliding_window_dataset",
        "experimental_sliding_window_dataset_eager_fallback",
        "experimental_sql_dataset",
        "experimental_sql_dataset_eager_fallback",
        "experimental_stats_aggregator_handle",
        "experimental_stats_aggregator_handle_eager_fallback",
        "experimental_stats_aggregator_summary",
        "experimental_stats_aggregator_summary_eager_fallback",
        "experimental_take_while_dataset",
        "experimental_take_while_dataset_eager_fallback",
        "experimental_thread_pool_dataset",
        "experimental_thread_pool_dataset_eager_fallback",
        "experimental_thread_pool_handle",
        "experimental_thread_pool_handle_eager_fallback",
        "experimental_unbatch_dataset",
        "experimental_unbatch_dataset_eager_fallback",
        "experimental_unique_dataset",
        "experimental_unique_dataset_eager_fallback",
        "group_by_reducer_dataset",
        "group_by_reducer_dataset_eager_fallback",
        "group_by_window_dataset",
        "group_by_window_dataset_eager_fallback",
        "ignore_errors_dataset",
        "ignore_errors_dataset_eager_fallback",
        "iterator_get_device",
        "iterator_get_device_eager_fallback",
        "lmdb_dataset",
        "lmdb_dataset_eager_fallback",
        "latency_stats_dataset",
        "latency_stats_dataset_eager_fallback",
        "legacy_parallel_interleave_dataset_v2",
        "legacy_parallel_interleave_dataset_v2_eager_fallback",
        "load_dataset",
        "load_dataset_eager_fallback",
        "map_and_batch_dataset",
        "map_and_batch_dataset_eager_fallback",
        "matching_files_dataset",
        "matching_files_dataset_eager_fallback",
        "max_intra_op_parallelism_dataset",
        "max_intra_op_parallelism_dataset_eager_fallback",
        "non_serializable_dataset",
        "non_serializable_dataset_eager_fallback",
        "parallel_interleave_dataset",
        "parallel_interleave_dataset_eager_fallback",
        "parse_example_dataset",
        "parse_example_dataset_eager_fallback",
        "parse_example_dataset_v2",
        "parse_example_dataset_v2_eager_fallback",
        "private_thread_pool_dataset",
        "private_thread_pool_dataset_eager_fallback",
        "random_dataset",
        "random_dataset_eager_fallback",
        "rebatch_dataset",
        "rebatch_dataset_eager_fallback",
        "rebatch_dataset_v2",
        "rebatch_dataset_v2_eager_fallback",
        "register_dataset",
        "register_dataset_eager_fallback",
        "sampling_dataset",
        "sampling_dataset_eager_fallback",
        "save_dataset",
        "save_dataset_eager_fallback",
        "scan_dataset",
        "scan_dataset_eager_fallback",
        "set_stats_aggregator_dataset",
        "set_stats_aggregator_dataset_eager_fallback",
        "sleep_dataset",
        "sleep_dataset_eager_fallback",
        "sliding_window_dataset",
        "sliding_window_dataset_eager_fallback",
        "snapshot_dataset",
        "snapshot_dataset_eager_fallback",
        "snapshot_dataset_v2",
        "snapshot_dataset_v2_eager_fallback",
        "sql_dataset",
        "sql_dataset_eager_fallback",
        "stats_aggregator_handle",
        "stats_aggregator_handle_eager_fallback",
        "stats_aggregator_handle_v2",
        "stats_aggregator_handle_v2_eager_fallback",
        "stats_aggregator_set_summary_writer",
        "stats_aggregator_set_summary_writer_eager_fallback",
        "stats_aggregator_summary",
        "stats_aggregator_summary_eager_fallback",
        "take_while_dataset",
        "take_while_dataset_eager_fallback",
        "thread_pool_dataset",
        "thread_pool_dataset_eager_fallback",
        "thread_pool_handle",
        "thread_pool_handle_eager_fallback",
        "unbatch_dataset",
        "unbatch_dataset_eager_fallback",
        "uncompress_element",
        "uncompress_element_eager_fallback",
        "unique_dataset",
        "unique_dataset_eager_fallback"
    ],
    "script_ops": [
        "_maybe_copy_to_context_device",
        "EagerFunc",
        "FuncRegistry",
        "_internal_py_func",
        "_EagerPyFuncGrad",
        "_eager_py_func",
        "eager_py_func",
        "py_func_common",
        "py_func",
        "numpy_function",
        "_convert",
        "__call__",
        "_ctx",
        "insert",
        "remove",
        "_convert",
        "__call__",
        "size",
        "_next_unique_token",
        "eagerly_executed_grad"
    ],
    "rnn_grad": [
        "_block_lstm_grad"
    ],
    "while_v2": [
        "while_loop",
        "_WhileGrad",
        "_build_while_op",
        "_get_intermediates",
        "_preprocess_grad",
        "_zeros_like",
        "_is_trainable",
        "_get_graph",
        "_create_grad_func",
        "_grad_fn",
        "_resolve_grad_captures",
        "_get_structured_grad_output",
        "_get_accumulator",
        "_WhileBodyGradFuncGraph",
        "_check_shapes_compat",
        "_check_num_inputs_outputs",
        "_check_inputs_outputs_types_match",
        "_build_cond_placeholders_name_prefix",
        "_duplicate_body_captures_in_cond",
        "_copy_handle_data",
        "_graph_name",
        "_pack_sequence_as",
        "_tensor_array_to_flow",
        "_build_maximum_iterations_loop_var",
        "_build_accumulator_name",
        "_is_loop_invariant",
        "_OperationWithOutputs",
        "_set_read_only_resource_inputs_attr",
        "grad_cond",
        "get_func_graph_output",
        "while_op_needs_rewrite",
        "_create_op_internal",
        "capture",
        "_capture_helper",
        "_resource_capture_helper",
        "flow_to_tensor_array",
        "f",
        "wrapped_cond",
        "wrapped_body"
    ],
    "gen_logging_ops": [
        "_assert",
        "_assert_eager_fallback",
        "audio_summary",
        "audio_summary_eager_fallback",
        "audio_summary_v2",
        "audio_summary_v2_eager_fallback",
        "histogram_summary",
        "histogram_summary_eager_fallback",
        "image_summary",
        "image_summary_eager_fallback",
        "merge_summary",
        "merge_summary_eager_fallback",
        "_print",
        "_print_eager_fallback",
        "print_v2",
        "print_v2_eager_fallback",
        "scalar_summary",
        "scalar_summary_eager_fallback",
        "tensor_summary",
        "tensor_summary_eager_fallback",
        "tensor_summary_v2",
        "tensor_summary_v2_eager_fallback",
        "timestamp",
        "timestamp_eager_fallback"
    ],
    "summary_ops_v2": [
        "_SummaryState",
        "_should_record_summaries_internal",
        "_should_record_summaries_v2",
        "should_record_summaries",
        "record_if",
        "record_summaries_every_n_global_steps",
        "always_record_summaries",
        "never_record_summaries",
        "get_step",
        "set_step",
        "SummaryWriter",
        "ResourceSummaryWriter",
        "NoopSummaryWriter",
        "initialize",
        "create_file_writer_v2",
        "create_file_writer",
        "create_db_writer",
        "create_noop_writer",
        "_cleanse_string",
        "_nothing",
        "all_v2_summary_ops",
        "summary_writer_initializer_op",
        "summary_scope",
        "write",
        "write_raw_pb",
        "summary_writer_function",
        "generic",
        "scalar",
        "histogram",
        "image",
        "audio",
        "graph",
        "import_event",
        "flush",
        "eval_dir",
        "create_summary_file_writer",
        "_serialize_graph",
        "_choose_step",
        "_check_create_file_writer_args",
        "run_metadata",
        "run_metadata_graphs",
        "keras_model",
        "trace_on",
        "trace_export",
        "trace_off",
        "set_as_default",
        "as_default",
        "init",
        "flush",
        "close",
        "set_as_default",
        "as_default",
        "init",
        "flush",
        "close",
        "set_as_default",
        "as_default",
        "init",
        "flush",
        "close",
        "record",
        "function",
        "function",
        "function",
        "function",
        "function",
        "record",
        "record"
    ],
    "gen_ragged_array_ops": [
        "ragged_cross",
        "ragged_cross_eager_fallback",
        "ragged_gather",
        "ragged_gather_eager_fallback"
    ],
    "gen_map_ops": [
        "empty_tensor_map",
        "empty_tensor_map_eager_fallback",
        "tensor_map_erase",
        "tensor_map_erase_eager_fallback",
        "tensor_map_has_key",
        "tensor_map_has_key_eager_fallback",
        "tensor_map_insert",
        "tensor_map_insert_eager_fallback",
        "tensor_map_lookup",
        "tensor_map_lookup_eager_fallback",
        "tensor_map_size",
        "tensor_map_size_eager_fallback",
        "tensor_map_stack_keys",
        "tensor_map_stack_keys_eager_fallback"
    ],
    "control_flow_grad": [
        "_SwitchGrad",
        "_MergeGrad",
        "_RefMergeGrad",
        "_ExitGrad",
        "_NextIterationGrad",
        "_RefNextIterationGrad",
        "_EnterGrad",
        "_RefEnterGrad",
        "_LoopCondGrad"
    ],
    "gen_audio_ops": [
        "audio_spectrogram",
        "audio_spectrogram_eager_fallback",
        "decode_wav",
        "decode_wav_eager_fallback",
        "encode_wav",
        "encode_wav_eager_fallback",
        "mfcc",
        "mfcc_eager_fallback"
    ],
    "stateless_random_ops": [
        "split",
        "fold_in",
        "stateless_random_uniform",
        "stateless_random_binomial",
        "stateless_random_gamma",
        "stateless_random_poisson",
        "stateless_random_normal",
        "stateless_truncated_normal",
        "stateless_multinomial",
        "stateless_categorical",
        "stateless_multinomial_categorical_impl",
        "stateless_parameterized_truncated_normal"
    ],
    "gen_lookup_ops": [
        "hash_table",
        "hash_table_eager_fallback",
        "hash_table_v2",
        "hash_table_v2_eager_fallback",
        "initialize_table",
        "initialize_table_eager_fallback",
        "initialize_table_from_dataset",
        "initialize_table_from_dataset_eager_fallback",
        "initialize_table_from_text_file",
        "initialize_table_from_text_file_eager_fallback",
        "initialize_table_from_text_file_v2",
        "initialize_table_from_text_file_v2_eager_fallback",
        "initialize_table_v2",
        "initialize_table_v2_eager_fallback",
        "lookup_table_export",
        "lookup_table_export_eager_fallback",
        "lookup_table_export_v2",
        "lookup_table_export_v2_eager_fallback",
        "lookup_table_find",
        "lookup_table_find_eager_fallback",
        "lookup_table_find_v2",
        "lookup_table_find_v2_eager_fallback",
        "lookup_table_import",
        "lookup_table_import_eager_fallback",
        "lookup_table_import_v2",
        "lookup_table_import_v2_eager_fallback",
        "lookup_table_insert",
        "lookup_table_insert_eager_fallback",
        "lookup_table_insert_v2",
        "lookup_table_insert_v2_eager_fallback",
        "lookup_table_remove_v2",
        "lookup_table_remove_v2_eager_fallback",
        "lookup_table_size",
        "lookup_table_size_eager_fallback",
        "lookup_table_size_v2",
        "lookup_table_size_v2_eager_fallback",
        "mutable_dense_hash_table",
        "mutable_dense_hash_table_eager_fallback",
        "mutable_dense_hash_table_v2",
        "mutable_dense_hash_table_v2_eager_fallback",
        "mutable_hash_table",
        "mutable_hash_table_eager_fallback",
        "mutable_hash_table_of_tensors",
        "mutable_hash_table_of_tensors_eager_fallback",
        "mutable_hash_table_of_tensors_v2",
        "mutable_hash_table_of_tensors_v2_eager_fallback",
        "mutable_hash_table_v2",
        "mutable_hash_table_v2_eager_fallback"
    ],
    "gen_clustering_ops": [
        "kmc2_chain_initialization",
        "kmc2_chain_initialization_eager_fallback",
        "kmeans_plus_plus_initialization",
        "kmeans_plus_plus_initialization_eager_fallback",
        "nearest_neighbors",
        "nearest_neighbors_eager_fallback"
    ],
    "gen_count_ops": [
        "dense_count_sparse_output",
        "dense_count_sparse_output_eager_fallback",
        "ragged_count_sparse_output",
        "ragged_count_sparse_output_eager_fallback",
        "sparse_count_sparse_output",
        "sparse_count_sparse_output_eager_fallback"
    ],
    "gen_control_flow_ops": [
        "abort",
        "abort_eager_fallback",
        "control_trigger",
        "control_trigger_eager_fallback",
        "enter",
        "enter_eager_fallback",
        "_exit",
        "_exit_eager_fallback",
        "loop_cond",
        "loop_cond_eager_fallback",
        "merge",
        "merge_eager_fallback",
        "next_iteration",
        "next_iteration_eager_fallback",
        "no_op",
        "no_op_eager_fallback",
        "ref_enter",
        "ref_enter_eager_fallback",
        "ref_exit",
        "ref_exit_eager_fallback",
        "ref_merge",
        "ref_merge_eager_fallback",
        "ref_next_iteration",
        "ref_next_iteration_eager_fallback",
        "ref_select",
        "ref_select_eager_fallback",
        "ref_switch",
        "ref_switch_eager_fallback",
        "switch",
        "switch_eager_fallback"
    ],
    "candidate_sampling_ops": [
        "uniform_candidate_sampler",
        "log_uniform_candidate_sampler",
        "learned_unigram_candidate_sampler",
        "fixed_unigram_candidate_sampler",
        "all_candidate_sampler",
        "compute_accidental_hits"
    ],
    "state_ops": [
        "variable_op",
        "variable_op_v2",
        "init_variable",
        "is_variable_initialized",
        "assign_sub",
        "assign_add",
        "assign",
        "count_up_to",
        "scatter_update",
        "scatter_nd_update",
        "scatter_add",
        "scatter_nd_add",
        "scatter_sub",
        "scatter_nd_sub",
        "scatter_mul",
        "scatter_div",
        "scatter_max",
        "scatter_min",
        "batch_scatter_update"
    ],
    "template": [
        "make_template",
        "make_template_internal",
        "_skip_common_stack_elements",
        "Template",
        "_EagerTemplateVariableStore",
        "EagerTemplate",
        "_call_func",
        "__call__",
        "name",
        "func",
        "variable_scope",
        "variable_scope_name",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "global_variables",
        "local_variables",
        "weights",
        "trainable_weights",
        "non_trainable_weights",
        "var_scope",
        "set_variable_scope_name",
        "as_default",
        "_variables_in_scope",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "_call_func",
        "__call__",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "global_variables",
        "local_variables"
    ],
    "default_gradient": [
        "get_zeros_dtype",
        "shape_and_dtype",
        "zeros_like",
        "ones_like",
        "supports_default_grad"
    ],
    "clustering_ops": [
        "KMeans",
        "_InitializeClustersOpFactory",
        "_distance_graph",
        "_compute_euclidean_distance",
        "_compute_cosine_distance",
        "_infer_graph",
        "_clusters_l2_normalized",
        "_create_variables",
        "_l2_normalize_data",
        "training_graph",
        "_mini_batch_sync_updates_op",
        "_mini_batch_training_op",
        "_full_batch_training_op",
        "_random",
        "_kmeans_plus_plus",
        "_kmc2_multiple_centers",
        "_greedy_batch_sampler",
        "_single_batch_sampler",
        "_choose_initial_centers",
        "_add_new_centers",
        "_initialize",
        "op",
        "_cond",
        "_body",
        "_sample_random",
        "_sample_kmc2_chain",
        "_f"
    ],
    "resource_variable_ops": [
        "get_eager_safe_handle_data",
        "_set_handle_shapes_and_types",
        "_combine_handle_data",
        "_variable_handle_from_shape_and_dtype",
        "eager_safe_variable_handle",
        "_handle_graph",
        "EagerResourceDeleter",
        "shape_safe_assign_variable_handle",
        "_maybe_set_handle_data",
        "variable_accessed",
        "BaseResourceVariable",
        "ResourceVariable",
        "UninitializedVariable",
        "_dense_var_to_tensor",
        "_UnreadVariable",
        "_ReadGrad",
        "variable_shape",
        "_GatherGrad",
        "_to_proto_fn",
        "_from_proto_fn",
        "is_resource_variable",
        "copy_to_graph_uninitialized",
        "VariableSpec",
        "__del__",
        "__repr__",
        "_assign_dependencies",
        "__array__",
        "__nonzero__",
        "__bool__",
        "__copy__",
        "__deepcopy__",
        "dtype",
        "device",
        "graph",
        "name",
        "shape",
        "set_shape",
        "_shape_as_list",
        "_shape_tuple",
        "create",
        "handle",
        "value",
        "_as_graph_element",
        "initializer",
        "initial_value",
        "constraint",
        "op",
        "trainable",
        "synchronization",
        "aggregation",
        "eval",
        "numpy",
        "count_up_to",
        "_map_resources",
        "_read_variable_op",
        "read_value",
        "sparse_read",
        "gather_nd",
        "to_proto",
        "from_proto",
        "is_initialized",
        "assign_sub",
        "assign_add",
        "_lazy_read",
        "assign",
        "__reduce__",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "batch_scatter_update",
        "scatter_nd_sub",
        "scatter_nd_add",
        "scatter_nd_update",
        "scatter_nd_max",
        "scatter_nd_min",
        "_strided_slice_assign",
        "__complex__",
        "__int__",
        "__long__",
        "__float__",
        "_dense_var_to_tensor",
        "__iadd__",
        "__isub__",
        "__imul__",
        "__idiv__",
        "__itruediv__",
        "__irealdiv__",
        "__ipow__",
        "_init_from_args",
        "_init_from_proto",
        "name",
        "value",
        "read_value",
        "_read_variable_op",
        "assign_sub",
        "assign_add",
        "assign",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "batch_scatter_update",
        "scatter_nd_sub",
        "scatter_nd_add",
        "scatter_nd_update",
        "scatter_nd_max",
        "scatter_nd_min",
        "op",
        "_to_components",
        "_from_components",
        "_from_compatible_tensor_list",
        "read_and_set_handle"
    ],
    "control_flow_state": [
        "_GetMaxSizeFromNestedMaximumIterations",
        "_GradLoopState",
        "_ControlFlowState",
        "MaybeCreateControlFlowState",
        "_ZerosLikeV1",
        "_ZerosLikeV2",
        "ZerosLike",
        "outer_grad_state",
        "forward_context",
        "forward_index",
        "forward_sync",
        "grad_context",
        "grad_index",
        "grad_sync",
        "history_map",
        "switch_map",
        "unused_exits",
        "deferred_exits",
        "forward_loop_exits",
        "pending_exits_count",
        "pending_exits_count",
        "AddForwardAccumulator",
        "AddBackpropAccumulatedValue",
        "GetRealValue",
        "GetGradState",
        "ProcessUnusedLoopExits",
        "EnterGradWhileContext",
        "ExitGradWhileContext",
        "AddWhileContext",
        "ZerosLikeForExit",
        "ZerosLikeV1WhileLoop",
        "PostProcessing"
    ],
    "gen_list_ops": [
        "empty_tensor_list",
        "empty_tensor_list_eager_fallback",
        "tensor_list_concat",
        "tensor_list_concat_eager_fallback",
        "tensor_list_concat_lists",
        "tensor_list_concat_lists_eager_fallback",
        "tensor_list_concat_v2",
        "tensor_list_concat_v2_eager_fallback",
        "tensor_list_element_shape",
        "tensor_list_element_shape_eager_fallback",
        "tensor_list_from_tensor",
        "tensor_list_from_tensor_eager_fallback",
        "tensor_list_gather",
        "tensor_list_gather_eager_fallback",
        "tensor_list_get_item",
        "tensor_list_get_item_eager_fallback",
        "tensor_list_length",
        "tensor_list_length_eager_fallback",
        "tensor_list_pop_back",
        "tensor_list_pop_back_eager_fallback",
        "tensor_list_push_back",
        "tensor_list_push_back_eager_fallback",
        "tensor_list_push_back_batch",
        "tensor_list_push_back_batch_eager_fallback",
        "tensor_list_reserve",
        "tensor_list_reserve_eager_fallback",
        "tensor_list_resize",
        "tensor_list_resize_eager_fallback",
        "tensor_list_scatter",
        "tensor_list_scatter_eager_fallback",
        "tensor_list_scatter_into_existing_list",
        "tensor_list_scatter_into_existing_list_eager_fallback",
        "tensor_list_scatter_v2",
        "tensor_list_scatter_v2_eager_fallback",
        "tensor_list_set_item",
        "tensor_list_set_item_eager_fallback",
        "tensor_list_split",
        "tensor_list_split_eager_fallback",
        "tensor_list_stack",
        "tensor_list_stack_eager_fallback"
    ],
    "gradient_descent": [
        "SGD",
        "_create_slots",
        "_prepare_local",
        "_resource_apply_dense",
        "_resource_apply_sparse_duplicate_indices",
        "_resource_apply_sparse",
        "get_config"
    ],
    "proximal_gradient_descent": [
        "ProximalGradientDescentOptimizer",
        "_apply_dense",
        "_resource_apply_dense",
        "_apply_sparse",
        "_resource_apply_sparse",
        "_prepare"
    ],
    "sync_replicas_optimizer": [
        "SyncReplicasOptimizer",
        "_SyncReplicasOptimizerHook",
        "compute_gradients",
        "apply_gradients",
        "get_chief_queue_runner",
        "get_slot",
        "variables",
        "get_slot_names",
        "get_init_tokens_op",
        "make_session_run_hook",
        "begin",
        "after_create_session"
    ],
    "adagrad": [
        "Adagrad",
        "_create_slots",
        "_prepare_local",
        "set_weights",
        "from_config",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "coordinator": [
        "Coordinator",
        "LooperThread",
        "_filter_exception",
        "request_stop",
        "clear_stop",
        "should_stop",
        "stop_on_exception",
        "wait_for_stop",
        "register_thread",
        "join",
        "joined",
        "raise_requested_exception",
        "loop",
        "run",
        "start_loop",
        "stop_loop",
        "run_loop"
    ],
    "checkpoint_ops": [
        "_load_and_remap_matrix",
        "_load_and_remap_matrix_initializer",
        "_load_embedding_initializer",
        "_initializer"
    ],
    "session_manager": [
        "_maybe_name",
        "SessionManager",
        "_ready",
        "_CountDownTimer",
        "_restore_checkpoint",
        "prepare_session",
        "recover_session",
        "wait_for_session",
        "_safe_close",
        "_model_ready",
        "_model_ready_for_local_init",
        "_try_run_local_init_op",
        "secs_remaining"
    ],
    "ftrl": [
        "Ftrl",
        "_create_slots",
        "_prepare_local",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "session_run_hook": [
        "SessionRunHook",
        "SessionRunArgs",
        "SessionRunContext",
        "SessionRunValues",
        "begin",
        "after_create_session",
        "before_run",
        "after_run",
        "end",
        "__new__",
        "original_args",
        "session",
        "stop_requested",
        "request_stop"
    ],
    "saver": [
        "BaseSaverBuilder",
        "BulkSaverBuilder",
        "_get_saver_or_default",
        "Saver",
        "import_meta_graph",
        "_import_meta_graph_with_return_elements",
        "_create_saver_from_imported_meta_graph",
        "export_meta_graph",
        "_wrap_restore_error_with_msg",
        "object_graph_key_mapping",
        "saver_from_object_based_checkpoint",
        "save_op",
        "bulk_restore",
        "restore_op",
        "sharded_filename",
        "_AddSaveOps",
        "_AddShardedSaveOpsForV2",
        "_AddShardedSaveOps",
        "_AddRestoreOps",
        "_AddShardedRestoreOps",
        "_GroupByDevices",
        "build",
        "_build_internal",
        "bulk_restore",
        "build",
        "_build_eager",
        "_build",
        "_check_saver_def",
        "_CheckpointFilename",
        "_RecordLastCheckpoint",
        "_MaybeDeleteOldCheckpoints",
        "as_saver_def",
        "to_proto",
        "from_proto",
        "last_checkpoints",
        "set_last_checkpoints",
        "set_last_checkpoints_with_time",
        "recover_last_checkpoints",
        "save",
        "export_meta_graph",
        "restore",
        "_add_collection_def"
    ],
    "device_setter": [
        "_RoundRobinStrategy",
        "_ReplicaDeviceChooser",
        "replica_device_setter",
        "__call__",
        "device_function"
    ],
    "server_lib": [
        "DispatcherConfig",
        "DispatchServer",
        "WorkerConfig",
        "WorkerServer",
        "__new__",
        "start",
        "join",
        "target",
        "_stop",
        "__del__",
        "_address",
        "_num_workers",
        "__new__",
        "start",
        "join",
        "_stop",
        "__del__",
        "_address",
        "_num_tasks"
    ],
    "training_util": [
        "global_step",
        "get_global_step",
        "create_global_step",
        "get_or_create_global_step",
        "assert_global_step",
        "_get_global_step_read",
        "_get_or_create_global_step_read",
        "_increment_global_step"
    ],
    "checkpoint_utils": [
        "load_checkpoint",
        "load_variable",
        "list_variables",
        "wait_for_new_checkpoint",
        "checkpoints_iterator",
        "init_from_checkpoint",
        "_init_from_checkpoint",
        "_get_checkpoint_filename",
        "_set_checkpoint_initializer",
        "_set_variable_or_list_initializer",
        "_is_variable",
        "_collect_partitioned_variable"
    ],
    "adagrad_da": [
        "AdagradDAOptimizer",
        "_create_slots",
        "_prepare",
        "_apply_dense",
        "_resource_apply_dense",
        "_apply_sparse",
        "_resource_apply_sparse"
    ],
    "momentum": [
        "MomentumOptimizer",
        "_create_slots",
        "_prepare",
        "_apply_dense",
        "_resource_apply_dense",
        "_apply_sparse",
        "_resource_apply_sparse"
    ],
    "monitored_session": [
        "Scaffold",
        "_create_monitored_session_with_worker_context",
        "MonitoredTrainingSession",
        "SessionCreator",
        "ChiefSessionCreator",
        "WorkerSessionCreator",
        "_MonitoredSession",
        "MonitoredSession",
        "SingularMonitoredSession",
        "_WrappedSession",
        "_RecoverableSession",
        "_CoordinatedSession",
        "_HookedSession",
        "finalize",
        "init_fn",
        "init_op",
        "ready_op",
        "ready_for_local_init_op",
        "local_init_op",
        "local_init_feed_dict",
        "summary_op",
        "saver",
        "init_feed_dict",
        "get_or_default",
        "default_local_init_op",
        "create_session",
        "_get_session_manager",
        "create_session",
        "_get_session_manager",
        "create_session",
        "graph",
        "run",
        "run_step_fn",
        "StepContext",
        "should_stop",
        "close",
        "__enter__",
        "__exit__",
        "_CoordinatedSessionCreator",
        "_close_internal",
        "_is_closed",
        "_tf_sess",
        "raw_session",
        "graph",
        "sess_str",
        "should_stop",
        "_check_stop",
        "close",
        "run",
        "run_step_fn",
        "_create_session",
        "_check_stop",
        "run",
        "run_step_fn",
        "_check_stop",
        "close",
        "run",
        "_check_stop",
        "run",
        "_call_hook_before_run",
        "_raise_if_feeds_intersects",
        "_merge_run_options",
        "session",
        "run_with_hooks",
        "request_stop",
        "create_session",
        "default_init_op",
        "default_ready_op",
        "default_ready_for_local_init_op"
    ],
    "adadelta": [
        "Adadelta",
        "_create_slots",
        "_prepare_local",
        "set_weights",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "optimizer": [
        "get_filtered_grad_fn",
        "_deduplicate_indexed_slices",
        "_var_key",
        "_OptimizableVariable",
        "_RefVariableProcessor",
        "_DenseReadResourceVariableProcessor",
        "_DenseResourceVariableProcessor",
        "_TensorProcessor",
        "_get_processor",
        "Optimizer",
        "filtered_grad_fn",
        "target",
        "update_op",
        "__str__",
        "target",
        "update_op",
        "target",
        "update_op",
        "target",
        "update_op",
        "target",
        "update_op",
        "get_name",
        "minimize",
        "compute_gradients",
        "_scale_loss",
        "apply_gradients",
        "_distributed_apply",
        "get_slot",
        "get_slot_names",
        "variables",
        "_create_non_slot_variable",
        "_checkpoint_dependencies",
        "_lookup_dependency",
        "_get_non_slot_variable",
        "_non_slot_variables",
        "_assert_valid_dtypes",
        "_valid_dtypes",
        "_create_slots",
        "_prepare",
        "_apply_dense",
        "_resource_apply_dense",
        "_resource_apply_sparse_duplicate_indices",
        "_resource_apply_sparse",
        "_apply_sparse_duplicate_indices",
        "_apply_sparse",
        "_finish",
        "_slot_dict",
        "_get_or_make_slot",
        "_get_or_make_slot_with_initializer",
        "_zeros_slot",
        "_restore_slot_variable",
        "_create_or_restore_slot_variable",
        "_call_if_callable",
        "update",
        "_from_current_graph",
        "finish"
    ],
    "saver_test_utils": [
        "CheckpointedOp",
        "name",
        "saveable",
        "insert",
        "lookup",
        "keys",
        "values",
        "_export",
        "CustomSaveable",
        "restore"
    ],
    "moving_averages": [
        "assign_moving_average",
        "weighted_moving_average",
        "_update",
        "_zero_debias",
        "ExponentialMovingAverage",
        "update_fn",
        "name",
        "apply",
        "average",
        "average_name",
        "variables_to_restore",
        "update_fn",
        "update",
        "_maybe_get_unique",
        "merge_fn"
    ],
    "basic_session_run_hooks": [
        "_HookTimer",
        "SecondOrStepTimer",
        "NeverTriggerTimer",
        "LoggingTensorHook",
        "get_or_create_steps_per_run_variable",
        "_MultiStepStopAtStepHook",
        "StopAtStepHook",
        "CheckpointSaverListener",
        "CheckpointSaverHook",
        "StepCounterHook",
        "NanLossDuringTrainingError",
        "NanTensorHook",
        "SummarySaverHook",
        "GlobalStepWaiterHook",
        "FinalOpsHook",
        "FeedFnHook",
        "ProfilerHook",
        "_as_graph_element",
        "reset",
        "should_trigger_for_step",
        "update_last_triggered_step",
        "last_triggered_step",
        "reset",
        "should_trigger_for_step",
        "update_last_triggered_step",
        "last_triggered_step",
        "should_trigger_for_step",
        "update_last_triggered_step",
        "last_triggered_step",
        "begin",
        "before_run",
        "_log_tensors",
        "after_run",
        "end",
        "begin",
        "_update_steps_per_run_variable",
        "after_create_session",
        "after_run",
        "begin",
        "after_create_session",
        "before_run",
        "after_run",
        "begin",
        "before_save",
        "after_save",
        "end",
        "_set_steps_per_run",
        "begin",
        "after_create_session",
        "before_run",
        "after_run",
        "end",
        "_save",
        "_get_saver",
        "_set_steps_per_run",
        "begin",
        "before_run",
        "_log_and_record",
        "after_run",
        "__str__",
        "before_run",
        "after_run",
        "begin",
        "before_run",
        "after_run",
        "end",
        "_get_summary_op",
        "begin",
        "before_run",
        "final_ops_values",
        "end",
        "before_run",
        "begin",
        "before_run",
        "after_run",
        "_save"
    ],
    "rmsprop": [
        "RMSprop",
        "_create_slots",
        "_prepare_local",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "set_weights",
        "get_config"
    ],
    "py_checkpoint_reader": [
        "error_translator",
        "get_variable_to_dtype_map",
        "has_tensor",
        "get_tensor",
        "NewCheckpointReader"
    ],
    "slot_creator": [
        "_create_slot_var",
        "create_slot",
        "create_slot_with_initializer",
        "create_zeros_slot"
    ],
    "checkpoint_management": [
        "_evaluate",
        "_GetCheckpointFilename",
        "generate_checkpoint_state_proto",
        "update_checkpoint_state",
        "update_checkpoint_state_internal",
        "get_checkpoint_state",
        "_prefix_to_checkpoint_path",
        "latest_checkpoint",
        "checkpoint_exists_internal",
        "checkpoint_exists",
        "get_checkpoint_mtimes",
        "remove_checkpoint",
        "_delete_file_if_exists",
        "meta_graph_filename",
        "CheckpointManager",
        "match_maybe_append",
        "directory",
        "checkpoint_interval",
        "latest_checkpoint",
        "checkpoints",
        "_sweep",
        "_record_state",
        "_prefix",
        "checkpoint",
        "save",
        "restore_or_initialize",
        "_initializing_creator"
    ],
    "quantize_training": [
        "do_quantize_training_on_graphdef"
    ],
    "adam": [
        "Adam",
        "NonFusedAdam",
        "_create_slots",
        "_prepare_local",
        "set_weights",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config",
        "_create_slots",
        "_prepare_local",
        "set_weights",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "tensorboard_logging": [
        "get_verbosity",
        "set_verbosity",
        "_check_verbosity",
        "set_summary_writer",
        "_clear_summary_writer",
        "log",
        "info",
        "warn",
        "error",
        "fatal"
    ],
    "warm_starting_util": [
        "VocabInfo",
        "_infer_var_name",
        "_get_var_info",
        "_warm_start_var_with_vocab",
        "_get_grouped_variables",
        "_get_object_checkpoint_renames",
        "warm_start",
        "__new__"
    ],
    "summary_io": [
        "SummaryWriter"
    ],
    "supervisor": [
        "Supervisor",
        "SVSummaryThread",
        "SVStepCounterThread",
        "SVTimerCheckpointThread",
        "_init_session_manager",
        "_get_first_op_from_collection",
        "_init_ready_op",
        "_init_init_op",
        "_init_local_init_op",
        "_init_saver",
        "_init_summary_op",
        "_init_global_step",
        "is_chief",
        "session_manager",
        "coord",
        "init_op",
        "init_feed_dict",
        "ready_op",
        "ready_for_local_init_op",
        "summary_writer",
        "summary_op",
        "save_summaries_secs",
        "global_step",
        "saver",
        "save_model_secs",
        "save_path",
        "_write_graph",
        "start_standard_services",
        "prepare_or_wait_for_session",
        "start_queue_runners",
        "loop",
        "stop",
        "request_stop",
        "should_stop",
        "stop_on_exception",
        "wait_for_stop",
        "summary_computed",
        "_default_global_step_tensor",
        "_verify_setup",
        "managed_session",
        "run_loop",
        "start_loop",
        "run_loop",
        "run_loop"
    ],
    "basic_loops": [
        "basic_train_loop"
    ],
    "queue_runner_impl": [
        "QueueRunner",
        "add_queue_runner",
        "start_queue_runners",
        "_init_from_args",
        "_init_from_proto",
        "queue",
        "enqueue_ops",
        "close_op",
        "cancel_op",
        "queue_closed_exception_types",
        "exceptions_raised",
        "name",
        "_run",
        "_close_on_stop",
        "create_threads",
        "to_proto",
        "from_proto"
    ],
    "evaluation": [
        "_get_or_create_eval_step",
        "_get_latest_eval_step_value",
        "_MultiStepStopAfterNEvalsHook",
        "_StopAfterNEvalsHook",
        "_evaluate_once",
        "_set_evals_completed_tensor",
        "begin",
        "after_create_session",
        "before_run",
        "after_run",
        "_set_evals_completed_tensor",
        "before_run",
        "after_run"
    ],
    "input": [
        "match_filenames_once",
        "limit_epochs",
        "input_producer",
        "string_input_producer",
        "range_input_producer",
        "slice_input_producer",
        "_flatten",
        "_SparseMetaData",
        "_as_tensor_list",
        "_as_tensor_list_list",
        "_as_original_type",
        "_store_sparse_tensors",
        "_store_sparse_tensors_join",
        "_restore_sparse_tensors",
        "_validate",
        "_validate_join",
        "_validate_keep_input",
        "_dtypes",
        "_merge_shapes",
        "_shapes",
        "_select_which_to_enqueue",
        "_enqueue_join",
        "_enqueue",
        "_which_queue",
        "_batch",
        "_batch_join",
        "_shuffle_batch",
        "_shuffle_batch_join",
        "batch",
        "maybe_batch",
        "batch_join",
        "maybe_batch_join",
        "shuffle_batch",
        "maybe_shuffle_batch",
        "shuffle_batch_join",
        "maybe_shuffle_batch_join",
        "__eq__",
        "__ne__",
        "__str__",
        "merge_with",
        "map_op",
        "sparse",
        "rank",
        "_sparse_meta_data",
        "_maybe_store",
        "_sparse_op",
        "_maybe_store_sparse",
        "_maybe_store_many_sparse",
        "_sparse_values_to_keep"
    ],
    "proximal_adagrad": [
        "ProximalAdagradOptimizer",
        "_create_slots",
        "_prepare",
        "_apply_dense",
        "_resource_apply_dense",
        "_apply_sparse",
        "_resource_apply_sparse"
    ],
    "executor": [
        "Executor",
        "new_executor",
        "__del__",
        "is_async",
        "handle",
        "wait",
        "clear_error"
    ],
    "wrap_function": [
        "VariableHolder",
        "_get_element_from_tensor_info",
        "_lift_single_variable",
        "_lift_unlifted_variables",
        "WrappedFunction",
        "_filter_returned_ops",
        "WrappedGraph",
        "wrap_function",
        "function_from_graph_def",
        "variables",
        "variable_creator_scope",
        "__call__",
        "call_with_variable_creator_scope",
        "_call_impl",
        "prune",
        "wrap_and_filter_returned_ops",
        "functions",
        "variables",
        "wrap_function",
        "_wrap_function",
        "_imports_graph_def",
        "wrapped",
        "_should_lift_variable",
        "_fetch_preprocessing_callback",
        "_structured_output_mapping"
    ],
    "backprop_util": [
        "IsTrainable"
    ],
    "graph_only_ops": [
        "graph_placeholder"
    ],
    "imperative_grad": [
        "imperative_grad"
    ],
    "profiler_client": [
        "start_tracing",
        "monitor"
    ],
    "forwardprop_util": [
        "TangentInfo",
        "pack_tangents",
        "push_forwardprop_state",
        "__new__"
    ],
    "profiler": [
        "ProfilerAlreadyRunningError",
        "ProfilerNotRunningError",
        "start",
        "stop",
        "maybe_create_event_file",
        "save",
        "start_profiler_server",
        "Profiler",
        "__enter__",
        "__exit__"
    ],
    "def_function": [
        "_CallCounter",
        "_FrequentTracingDetector",
        "UnliftedInitializerVariable",
        "experimental_run_functions_eagerly",
        "run_functions_eagerly",
        "experimental_functions_run_eagerly",
        "functions_run_eagerly",
        "_evaluate_var_is_initialized",
        "FunctionDeleter",
        "Function",
        "function",
        "called_with_tracing",
        "called_without_tracing",
        "get_tracing_count",
        "_get_counter",
        "called_without_tracing",
        "called_with_tracing",
        "__del__",
        "__getstate__",
        "__setstate__",
        "_get_key_for_call_stats",
        "_defun_with_scope",
        "_create_implements_attribute",
        "_defun",
        "_initialize",
        "_clone",
        "_decorate",
        "_get_tracing_count",
        "experimental_get_tracing_count",
        "__call__",
        "_call",
        "experimental_get_compiler_ir",
        "python_function",
        "input_signature",
        "function_spec",
        "pretty_printed_concrete_signatures",
        "_initialize_uninitialized_variables",
        "get_initialization_function",
        "_list_all_concrete_functions",
        "_list_all_concrete_functions_for_serialization",
        "_get_concrete_function_garbage_collected",
        "get_concrete_function",
        "__get__",
        "decorated",
        "wrapped_fn",
        "variable_capturing_scope",
        "invalid_creator_scope",
        "fn_with_cond",
        "compiler_ir_generator",
        "initialize_variables",
        "initialize_variables",
        "assign_fn",
        "not_assign_fn"
    ],
    "core": [
        "dense"
    ],
    "forwardprop": [
        "_identity_jvp",
        "_read_variable_jvp",
        "_jvp_helper",
        "_jvp_helper_wrapper",
        "_jvp_dispatch",
        "ForwardAccumulator",
        "__enter__",
        "__exit__",
        "_push_accumulator",
        "_pop_accumulator",
        "_watch",
        "jvp",
        "_batch_accumulator",
        "_watch",
        "_fetch_jvp"
    ],
    "monitoring": [
        "Metric",
        "CounterCell",
        "Counter",
        "IntGaugeCell",
        "IntGauge",
        "StringGaugeCell",
        "StringGauge",
        "BoolGaugeCell",
        "BoolGauge",
        "SamplerCell",
        "Buckets",
        "ExponentialBuckets",
        "Sampler",
        "MonitoredTimer",
        "monitored_timer",
        "__del__",
        "get_cell",
        "increase_by",
        "value",
        "get_cell",
        "set",
        "value",
        "get_cell",
        "set",
        "value",
        "get_cell",
        "set",
        "value",
        "get_cell",
        "add",
        "value",
        "__del__",
        "get_cell",
        "__enter__",
        "__exit__",
        "actual_decorator",
        "wrapper"
    ],
    "cancellation": [
        "CancellationManager",
        "is_cancelled",
        "start_cancel",
        "get_cancelable_function",
        "__del__"
    ],
    "remote": [
        "connect_to_remote_host",
        "connect_to_cluster",
        "_strip_prefix"
    ],
    "execute": [
        "quick_execute",
        "execute_with_cancellation",
        "execute_with_callbacks",
        "must_record_gradient",
        "record_gradient",
        "make_float",
        "make_int",
        "make_str",
        "make_bool",
        "make_type",
        "make_shape",
        "make_tensor",
        "args_to_matching_eager",
        "convert_to_mixed_eager_tensors",
        "args_to_mixed_eager_tensors"
    ],
    "tape": [
        "Tape",
        "push_new_tape",
        "push_tape",
        "watch",
        "VariableWatcher",
        "watch_variable",
        "variable_accessed",
        "variables_accessed",
        "pop_tape",
        "stop_recording",
        "should_record_backprop",
        "record_operation",
        "record_operation_backprop_only",
        "record_operation_forwardprop_only",
        "delete_trace",
        "could_possibly_record",
        "watched_variables",
        "__enter__",
        "__exit__",
        "watched_variables"
    ],
    "lift_to_graph": [
        "_as_operation",
        "_constant_inputs",
        "_copy_non_source",
        "_copy_source",
        "lift_to_graph"
    ],
    "backprop": [
        "op_attr_type",
        "make_attr",
        "_MockOp",
        "_gradient_function",
        "_must_record_gradient",
        "_record_gradient",
        "implicit_val_and_grad",
        "implicit_grad",
        "_get_arg_spec",
        "gradients_function",
        "_ensure_unique_tensor_objects",
        "val_and_grad_function",
        "make_vjp",
        "flatten_nested_indexed_slices",
        "aggregate_indexed_slices_gradients",
        "_aggregate_grads",
        "_num_elements",
        "_fast_fill",
        "_zeros",
        "_ones",
        "_handle_or_self",
        "GradientTape",
        "get_attr",
        "_get_control_flow_context",
        "grad_fn",
        "grad_fn",
        "decorated",
        "decorated",
        "decorated",
        "__enter__",
        "__exit__",
        "_push_tape",
        "_pop_tape",
        "__del__",
        "watch",
        "stop_recording",
        "reset",
        "watched_variables",
        "gradient",
        "jacobian",
        "batch_jacobian",
        "vjp",
        "loop_fn",
        "loop_fn",
        "_tensor_to_ndarray"
    ],
    "benchmarks_test_base": [
        "MicroBenchmarksBase",
        "run_with_xprof",
        "run_report"
    ],
    "context": [
        "_EagerTensorCache",
        "FunctionCallOptions",
        "_TensorCaches",
        "_ContextSwitchStack",
        "LogicalDevice",
        "LogicalDeviceConfiguration",
        "PhysicalDevice",
        "_AtomicCounter",
        "_TensorCacheDeleter",
        "Context",
        "_EagerDeviceContext",
        "_set_context_locked",
        "_set_context",
        "_create_context",
        "_reset_context",
        "context",
        "context_safe",
        "ensure_initialized",
        "set_global_seed",
        "global_seed",
        "internal_operation_seed",
        "executing_eagerly",
        "executing_eagerly_v1",
        "in_eager_mode",
        "shared_name",
        "graph_mode",
        "eager_mode",
        "scope_name",
        "device",
        "get_log_device_placement",
        "set_log_device_placement",
        "device_policy",
        "set_execution_mode",
        "execution_mode",
        "executor_scope",
        "function_executor_type",
        "is_async",
        "num_gpus",
        "enable_run_metadata",
        "disable_run_metadata",
        "enable_graph_collection",
        "disable_graph_collection",
        "export_run_metadata",
        "collect_graphs",
        "get_server_def",
        "set_server_def",
        "update_server_def",
        "check_alive",
        "async_scope",
        "async_wait",
        "async_clear_error",
        "add_function",
        "remove_function",
        "get_function_def",
        "register_custom_device",
        "_tmp_in_graph_mode",
        "put",
        "get",
        "flush",
        "executor_type",
        "executor_type",
        "config_proto_serialized",
        "config_proto_serialized",
        "ones_rank_cache",
        "zeros_cache",
        "push",
        "pop",
        "__new__",
        "increment_and_get",
        "__del__",
        "_set_global_seed",
        "_internal_operation_seed",
        "_initialize_logical_devices",
        "ensure_initialized",
        "_clear_caches",
        "get_server_def",
        "set_server_def",
        "update_server_def",
        "check_alive",
        "sync_executors",
        "clear_executor_errors",
        "enable_collective_ops",
        "configure_collective_ops",
        "abort_collective_ops",
        "check_collective_ops_peer_health",
        "_handle",
        "_devices",
        "__str__",
        "_mode",
        "executing_eagerly",
        "ones_rank_cache",
        "zeros_cache",
        "scope_name",
        "scope_name",
        "device_name",
        "device_spec",
        "_set_device",
        "device",
        "devices",
        "host_address_space",
        "execution_mode",
        "execution_mode",
        "is_async",
        "executor",
        "executor",
        "config",
        "_compute_gpu_options",
        "function_call_options",
        "function_call_options",
        "num_gpus",
        "add_function",
        "add_function_def",
        "get_function_def",
        "register_custom_device",
        "pack_eager_tensors",
        "remove_function",
        "has_function",
        "add_op_callback",
        "remove_op_callback",
        "op_callbacks",
        "invoking_op_callbacks",
        "invoking_op_callbacks",
        "_initialize_physical_devices",
        "list_physical_devices",
        "get_device_details",
        "_import_config",
        "list_logical_devices",
        "get_visible_devices",
        "set_visible_devices",
        "get_total_memory_usage",
        "get_memory_growth",
        "set_memory_growth",
        "get_logical_device_configuration",
        "set_logical_device_configuration",
        "get_compiler_ir",
        "enable_xla_devices",
        "enable_mlir_bridge",
        "enable_mlir_graph_optimization",
        "enable_mlir_bridge",
        "enable_mlir_graph_optimization",
        "optimizer_jit",
        "optimizer_jit",
        "get_optimizer_experimental_options",
        "set_optimizer_experimental_options",
        "intra_op_parallelism_threads",
        "intra_op_parallelism_threads",
        "inter_op_parallelism_threads",
        "inter_op_parallelism_threads",
        "soft_device_placement",
        "soft_device_placement",
        "log_device_placement",
        "log_device_placement",
        "device_policy",
        "device_policy",
        "lazy_remote_inputs_copy",
        "lazy_remote_inputs_copy",
        "use_tfrt",
        "use_tfrt",
        "enable_run_metadata",
        "disable_run_metadata",
        "enable_graph_collection",
        "disable_graph_collection",
        "export_run_metadata",
        "context_switches",
        "start_step",
        "end_step",
        "__enter__",
        "__exit__",
        "rewriter_toggle",
        "rewriter_bool",
        "rewriter_toggle",
        "rewriter_bool"
    ],
    "module": [
        "Module",
        "_is_variable",
        "_is_trainable_variable",
        "_is_module",
        "valid_identifier",
        "camel_to_snake",
        "_flatten_module",
        "name",
        "name_scope",
        "variables",
        "trainable_variables",
        "submodules",
        "_flatten",
        "with_name_scope",
        "method_with_name_scope"
    ],
    "summary": [
        "scalar",
        "image",
        "histogram",
        "audio",
        "text",
        "tensor_summary",
        "merge",
        "merge_all",
        "get_summary_description"
    ],
    "plugin_asset": [
        "get_plugin_asset",
        "get_all_plugin_assets",
        "PluginAsset",
        "assets"
    ],
    "summary_iterator": [
        "_SummaryIterator",
        "summary_iterator",
        "__iter__",
        "__next__"
    ],
    "item": [
        "Item",
        "IdentifyImportantOps",
        "GetOpProperties",
        "GetColocationGroups",
        "metagraph",
        "tf_item",
        "_BuildTFItem"
    ],
    "cluster": [
        "Cluster",
        "Provision",
        "Shutdown",
        "__del__",
        "tf_cluster",
        "ListDevices",
        "ListAvailableOps",
        "GetSupportedDevices",
        "EstimatePerformance",
        "MeasureCosts",
        "DeterminePeakMemoryUsage"
    ],
    "tf_optimizer": [
        "OptimizeGraph"
    ],
    "internal": [
        "NativeObject"
    ],
    "distribute": [
        "_AutoShardDataset",
        "_AutoShardDatasetV1",
        "_RebatchDataset",
        "_LegacyRebatchDataset",
        "_RemoteDataset",
        "replicate",
        "batch_sizes_for_worker",
        "compute_batch_size",
        "element_spec",
        "_compute_static_batch_dim",
        "_may_form_partial_batches",
        "element_spec",
        "element_spec",
        "element_spec",
        "get_static_batch_dim",
        "get_batch_dim",
        "recalculate_batch_size",
        "rebatch"
    ],
    "doc_typealias": [
        "document"
    ],
    "flops_registry": [
        "_zero_flops",
        "_list_product",
        "_unary_op_flops",
        "_reciprocal_flops",
        "_square_flops",
        "_rsqrt_flops",
        "_log_flops",
        "_neg_flops",
        "_assign_sub_flops",
        "_assign_add_flops",
        "_l2_loss_flops",
        "_softmax_flops",
        "_binary_per_element_op_flops",
        "_add_flops",
        "_sub_flops",
        "_mul_flops",
        "_real_div_flops",
        "_maximum_flops",
        "_minimum_flops",
        "_pow_flops",
        "_rsqrt_grad_flops",
        "_greater_equal_flops",
        "_greater_flops",
        "_less_equal_flops",
        "_less_flops",
        "_equal_flops",
        "_not_equal_flops",
        "_squared_difference_flops",
        "_reduction_op_flops",
        "_mean_flops",
        "_sum_flops",
        "_arg_max_flops",
        "_arg_min_flops",
        "_bias_add_grad_flops",
        "_verify_conv_data_format",
        "_pool_flops",
        "_avg_pool_flops",
        "_max_pool_flops",
        "_avg_pool_grad_flops",
        "_max_pool_grad_flops",
        "_conv_2d_backprop_input_flops",
        "_conv_2d_backprop_filter_flops",
        "_add_n_flops"
    ],
    "mlir": [
        "convert_graph_def",
        "convert_function"
    ],
    "jit": [
        "_XlaScope",
        "experimental_jit_scope",
        "xla_compile"
    ],
    "xla": [
        "compile",
        "XLACompileContext",
        "_compile_internal",
        "is_flat",
        "_postprocess_flat_outputs",
        "_postprocess_non_flat_outputs",
        "_disable_summary_context",
        "_CapturedObject",
        "_get_scaffold",
        "check_function_argument_count",
        "report_unsupported_operations",
        "_RemoveExternalControlEdges",
        "AddOp",
        "AddValue",
        "AddInnerOp",
        "grad_state",
        "back_prop",
        "capture",
        "get",
        "format_error",
        "xla_compile_wrapper"
    ],
    "trt_convert": [
        "_to_bytes",
        "_to_string",
        "TrtPrecisionMode",
        "TrtConversionParams",
        "_check_conversion_params",
        "_check_trt_version_compatibility",
        "get_tensorrt_rewriter_config",
        "_get_canonical_engine_name",
        "is_explicit_batch_mode_enabled",
        "TrtGraphConverter",
        "_get_resource_handle",
        "_TRTEngineResourceDeleter",
        "_TRTEngineResource",
        "TrtGraphConverterV2",
        "create_inference_graph",
        "supported_precision_modes",
        "__new__",
        "_run_conversion",
        "_add_nodes_denylist",
        "_convert_graph_def",
        "_collections_to_keep",
        "_convert_saved_model",
        "convert",
        "calibrate",
        "save",
        "destroy_resource",
        "_create_resource",
        "_initialize",
        "_run_conversion",
        "_for_each_trt_node",
        "_rebuild_func",
        "convert",
        "build",
        "save",
        "_restore_collections",
        "_set_profile_generation_mode",
        "_serialize_and_track_engine",
        "_gather_names",
        "_save_calibration_table",
        "_reset_allow_build_at_runtime"
    ],
    "tf_trt_integration_test_base": [
        "IsQuantizationMode",
        "IsQuantizationWithCalibration",
        "IsTensorRTVersionGreaterEqual",
        "GraphState",
        "TfTrtIntegrationTestBase",
        "_GetTestConfigsV1",
        "_GetTestConfigsV2",
        "_GetTest",
        "_AddTestsFor",
        "_AddTests",
        "trt_incompatible_op",
        "precision_modes",
        "_ToUnicode",
        "_ToBytes",
        "_ToString",
        "setUp",
        "_GetTensorSpec",
        "BuildParams",
        "BuildParamsWithMask",
        "GetParams",
        "GetConversionParams",
        "GetTrtRewriterConfig",
        "ShouldRunTest",
        "ExpectedEnginesToBuild",
        "ExpectedMaxBatchSizes",
        "ExpectedAbsoluteTolerance",
        "ExpectedRelativeTolerance",
        "_GetParamsCached",
        "_GetGPUOptions",
        "_GetConfigProto",
        "_GetFeedNames",
        "_GetFetchNames",
        "_GetFeedDict",
        "_RunGraphV1",
        "_RunGraphV2",
        "_RunGraph",
        "_CreateConverter",
        "_GetCalibratedInferGraph",
        "_GetInferGraph",
        "_GetGraphStateLabel",
        "_WriteGraph",
        "_Canonicalize",
        "_RemoveGraphSequenceNumberImpl",
        "_RemoveGraphSequenceNumber",
        "_MayRemoveGraphSequenceNumber",
        "_VerifyConnections",
        "_VerifyMaxBatchSizeAnnotations",
        "_GetGraphDef",
        "_VerifyGraphDefV1",
        "_VerifyGraphDefV2",
        "_VerifyGraphDef",
        "_GetSavedModelDir",
        "_MakeSavedModelV1",
        "_MakeSavedModelV2",
        "_MakeSavedModel",
        "RunTest",
        "testIdempotence",
        "_Test",
        "_ValidateShapes",
        "_InputName",
        "_ChainAllNodes",
        "_DetectStaticBatchSize",
        "_BuildInputFn"
    ],
    "client": [
        "_utcnow",
        "_environment_discovery_url",
        "_gce_metadata_endpoint",
        "_request_compute_metadata",
        "_environment_var_to_network_endpoints",
        "_get_tpu_name",
        "_as_text",
        "Client",
        "_symptom_msg",
        "_oom_event",
        "_hbm_oom_event",
        "_tpu_service",
        "_full_name",
        "_fetch_cloud_tpu_metadata",
        "_get_tpu_property",
        "__enter__",
        "__exit__",
        "recoverable",
        "symptoms",
        "state",
        "health",
        "runtime_version",
        "accelerator_type",
        "api_available",
        "name",
        "get_local_ip",
        "network_endpoints",
        "wait_for_healthy",
        "configure_tpu_version",
        "configure_worker"
    ],
    "tpu_ops": [
        "_create_default_group_assignment",
        "all_to_all",
        "_all_to_all_grad",
        "cross_replica_sum",
        "collective_permute",
        "_collective_permute_grad",
        "_cross_replica_sum_grad",
        "_embedding_activations_grad",
        "infeed_dequeue",
        "infeed_dequeue_tuple",
        "send_tpu_embedding_gradients",
        "enqueue_tpu_embedding_integer_batch",
        "enqueue_tpu_embedding_sparse_batch",
        "enqueue_tpu_embedding_sparse_tensor_batch",
        "enqueue_tpu_embedding_ragged_tensor_batch"
    ],
    "metric_utils": [
        "_init",
        "monitored_timer",
        "get_metric_summary"
    ],
    "cluster_coordinator": [
        "_RemoteValueStatus",
        "RemoteValue",
        "RemoteValueImpl",
        "InputError",
        "_maybe_rebuild_remote_values",
        "_maybe_get_remote_value",
        "_maybe_as_type_spec",
        "PerWorkerValues",
        "_select_worker_slice",
        "_disallow_remote_value_as_input",
        "Closure",
        "_CoordinatedClosureQueue",
        "WorkerPreemptionHandler",
        "Worker",
        "Cluster",
        "ClusterCoordinator",
        "handle_parameter_server_failure",
        "_PerWorkerDistributedDataset",
        "_PerWorkerDistributedIterator",
        "_extract_failed_ps_instances",
        "_is_ps_failure",
        "_is_worker_failure",
        "fetch",
        "_set_aborted",
        "_rebuild_on",
        "_set_value",
        "_set_error",
        "_get_value",
        "_get_error",
        "fetch",
        "_get_error",
        "_get",
        "_raise_if_remote_value",
        "mark_cancelled",
        "execute_on",
        "_cancel_all_closures",
        "_raise_if_error",
        "put",
        "get",
        "mark_finished",
        "put_back",
        "wait",
        "mark_failed",
        "done",
        "_validate_preemption_failure",
        "wait_on_failure",
        "_preemption_handler",
        "_set_resources_aborted",
        "_set_dead",
        "_process_closure",
        "_maybe_delay",
        "_process_queue",
        "_create_resource",
        "_register_resource",
        "_record_and_ignore_transient_ps_failure",
        "schedule",
        "join",
        "done",
        "strategy",
        "schedule",
        "join",
        "done",
        "create_per_worker_dataset",
        "_create_per_worker_resources",
        "fetch",
        "__iter__",
        "element_spec",
        "__next__",
        "get_next",
        "_maybe_fetch",
        "disallow_variable_creation",
        "_create_per_worker_iterator"
    ],
    "slurm_cluster_resolver": [
        "expand_hostlist",
        "expand_tasks_per_node",
        "_get_slurm_var",
        "_get_num_slurm_tasks",
        "_get_num_nvidia_gpus",
        "get_num_gpus",
        "SlurmClusterResolver",
        "split_hostlist",
        "expand_range_expression",
        "_resolve_own_rank",
        "_resolve_num_tasks",
        "_resolve_hostlist",
        "_resolve_task_configuration",
        "cluster_spec",
        "get_task_info",
        "master",
        "num_accelerators"
    ],
    "sagemaker_cluster_resolver": [
        "format_master_url",
        "_load_tf_config",
        "_get_value_in_tfconfig",
        "SageMakerClusterResolver",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "environment",
        "rpc_layer",
        "rpc_layer",
        "num_accelerators",
        "cluster_spec",
        "master"
    ],
    "kubernetes_cluster_resolver": [
        "KubernetesClusterResolver",
        "master",
        "cluster_spec"
    ],
    "gce_cluster_resolver": [
        "GCEClusterResolver",
        "cluster_spec",
        "master",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "rpc_layer",
        "rpc_layer"
    ],
    "tfconfig_cluster_resolver": [
        "format_master_url",
        "_load_tf_config",
        "_get_value_in_tfconfig",
        "TFConfigClusterResolver",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "environment",
        "rpc_layer",
        "rpc_layer",
        "num_accelerators",
        "cluster_spec",
        "master"
    ],
    "cluster_resolver": [
        "format_master_url",
        "get_accelerator_devices",
        "ClusterResolver",
        "SimpleClusterResolver",
        "UnionClusterResolver",
        "cluster_spec",
        "master",
        "num_accelerators",
        "environment",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "cluster_spec",
        "master",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "environment",
        "num_accelerators",
        "rpc_layer",
        "rpc_layer",
        "cluster_spec",
        "master",
        "task_type",
        "task_id",
        "task_type",
        "task_id",
        "environment",
        "num_accelerators",
        "rpc_layer",
        "rpc_layer"
    ],
    "parallel_device": [
        "unpack",
        "ParallelDevice",
        "pack",
        "unpack",
        "device_ids",
        "_assert_eager",
        "__enter__",
        "__exit__"
    ],
    "saving": [
        "_ParallelComponentSaveable",
        "ParallelVariable",
        "_variable_creator",
        "independent_buffers",
        "restore",
        "VariableProxyMetaClass",
        "_gather_saveables_for_checkpoint"
    ],
    "export_output": [
        "ExportOutput",
        "ClassificationOutput",
        "RegressionOutput",
        "PredictOutput",
        "_SupervisedOutput",
        "TrainOutput",
        "EvalOutput",
        "as_signature_def",
        "_check_output_key",
        "_wrap_and_check_outputs",
        "scores",
        "classes",
        "as_signature_def",
        "value",
        "as_signature_def",
        "outputs",
        "as_signature_def",
        "_prefix_output_keys",
        "_prefix_key",
        "_wrap_and_check_metrics",
        "loss",
        "predictions",
        "metrics",
        "_get_signature_def_fn",
        "as_signature_def",
        "_get_signature_def_fn",
        "_get_signature_def_fn"
    ],
    "mode_keys": [
        "KerasModeKeys",
        "EstimatorModeKeys",
        "is_predict",
        "is_eval",
        "is_train",
        "ModeKeyMap",
        "_get_internal_key",
        "__getitem__",
        "__iter__",
        "__len__"
    ],
    "export_utils": [
        "build_all_signature_defs",
        "_log_signature_report",
        "get_timestamped_export_dir",
        "get_temp_export_dir",
        "export_outputs_for_mode",
        "get_export_outputs",
        "_maybe_add_default_serving_output"
    ],
    "compare": [
        "assertProtoEqual",
        "NormalizeNumberFields",
        "_IsMap",
        "_IsRepeatedContainer",
        "ProtoEq",
        "ProtoAssertions",
        "Format",
        "assertProtoEqual"
    ],
    "structure": [
        "_TensorStructure",
        "_SparseTensorStructure",
        "_TensorArrayStructure",
        "_RaggedTensorStructure",
        "normalize_element",
        "convert_legacy_structure",
        "_from_tensor_list_helper",
        "from_compatible_tensor_list",
        "from_tensor_list",
        "get_flat_tensor_specs",
        "get_flat_tensor_shapes",
        "get_flat_tensor_types",
        "_to_tensor_list_helper",
        "to_batched_tensor_list",
        "to_tensor_list",
        "are_compatible",
        "type_spec_from_value",
        "NoneTensor",
        "NoneTensorSpec",
        "reduce_fn",
        "_type_spec",
        "value_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_to_tensor_list",
        "from_value",
        "_batch",
        "_unbatch",
        "_to_batched_tensor_list",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "most_specific_compatible_shape"
    ],
    "traverse": [
        "obtain_all_variant_tensor_ops"
    ],
    "sparse": [
        "any_sparse",
        "as_dense_shapes",
        "as_dense_types",
        "deserialize_sparse_tensors",
        "get_classes",
        "serialize_many_sparse_tensors",
        "serialize_sparse_tensors"
    ],
    "options": [
        "_internal_attr_name",
        "OptionsBase",
        "graph_rewrites",
        "create_option",
        "merge_options",
        "__eq__",
        "__ne__",
        "__setattr__",
        "get_fn",
        "set_fn"
    ],
    "convert": [
        "optional_param_to_tensor",
        "partial_shape_to_tensor"
    ],
    "iterator_ops": [
        "_convert_external_state_policy_to_enum",
        "make_saveable_from_iterator",
        "CheckpointInputPipelineHook",
        "_CustomSaver",
        "begin",
        "after_create_session",
        "_restore_or_save_initial_ckpt",
        "before_run",
        "after_run",
        "end",
        "save"
    ],
    "optional_ops": [
        "Optional",
        "_OptionalImpl",
        "OptionalSpec",
        "has_value",
        "get_value",
        "element_spec",
        "empty",
        "from_value",
        "has_value",
        "get_value",
        "element_spec",
        "_type_spec",
        "value_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes"
    ],
    "multi_device_iterator_ops": [
        "_PerDeviceGenerator",
        "_ReincarnatedPerDeviceGenerator",
        "_create_device_dataset",
        "MultiDeviceIterator",
        "MultiDeviceIteratorResourceDeleter",
        "MultiDeviceIteratorSpec",
        "OwnedMultiDeviceIterator",
        "_inputs",
        "element_spec",
        "_inputs",
        "element_spec",
        "_create_device_dataset",
        "get_next",
        "get_next_as_optional",
        "initializer",
        "_eager_reset",
        "element_spec",
        "__del__",
        "value_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "get_next",
        "__iter__",
        "next",
        "__next__",
        "get_next_as_optional",
        "element_spec",
        "_type_spec",
        "_init_func",
        "_remote_init_func",
        "_next_func",
        "_remote_next_func",
        "_finalize_func",
        "_remote_finalize_func"
    ],
    "readers": [
        "_is_valid_int32",
        "_is_valid_int64",
        "_is_valid_float",
        "_infer_type",
        "_next_csv_row",
        "_infer_column_defaults",
        "_infer_column_names",
        "_get_sorted_col_indices",
        "_maybe_shuffle_and_repeat",
        "make_tf_record_dataset",
        "make_csv_dataset_v2",
        "make_csv_dataset_v1",
        "CsvDatasetV2",
        "CsvDatasetV1",
        "make_batched_features_dataset_v2",
        "make_batched_features_dataset_v1",
        "_get_file_names",
        "SqlDatasetV2",
        "SqlDatasetV1",
        "filename_to_dataset",
        "map_fn",
        "element_spec",
        "element_spec",
        "apply_fn",
        "apply_fn"
    ],
    "dataset_ops": [
        "DatasetV2",
        "DatasetV1",
        "DatasetV1Adapter",
        "_ensure_same_dataset_graph",
        "make_one_shot_iterator",
        "make_initializable_iterator",
        "get_structure",
        "get_legacy_output_classes",
        "get_legacy_output_shapes",
        "get_legacy_output_types",
        "Options",
        "DatasetSource",
        "UnaryDataset",
        "UnaryUnchangedStructureDataset",
        "TensorDataset",
        "TensorSliceDataset",
        "SparseTensorSliceDataset",
        "_VariantDataset",
        "_NestedVariant",
        "from_variant",
        "to_variant",
        "DatasetSpec",
        "StructuredFunctionWrapper",
        "_GeneratorDataset",
        "ZipDataset",
        "ConcatenateDataset",
        "RepeatDataset",
        "RangeDataset",
        "CacheDataset",
        "ShuffleDataset",
        "TakeDataset",
        "SkipDataset",
        "ShardDataset",
        "BatchDataset",
        "_NumpyIterator",
        "_VariantTracker",
        "_is_padded_shape_compatible_with",
        "_padded_shape_to_tensor",
        "_padding_value_to_tensor",
        "_padding_values_or_default",
        "PaddedBatchDataset",
        "_should_unpack_args",
        "MapDataset",
        "ParallelMapDataset",
        "FlatMapDataset",
        "InterleaveDataset",
        "ParallelInterleaveDataset",
        "FilterDataset",
        "PrefetchDataset",
        "WindowDataset",
        "_OptionsDataset",
        "_ModelDataset",
        "_OptimizeDataset",
        "_SetStatsAggregatorDataset",
        "_MaxIntraOpParallelismDataset",
        "_PrivateThreadPoolDataset",
        "normalize_to_dense",
        "_RestructuredDataset",
        "_UnbatchDataset",
        "_collect_resource_inputs",
        "_resource_resolver",
        "_variant_tensor",
        "_variant_tensor",
        "_as_serialized_graph",
        "_trace_variant_creation",
        "_inputs",
        "_graph",
        "_graph",
        "_has_captured_ref",
        "_functions",
        "options",
        "_apply_options",
        "__iter__",
        "__bool__",
        "__len__",
        "element_spec",
        "__repr__",
        "as_numpy_iterator",
        "_flat_shapes",
        "_flat_types",
        "_flat_structure",
        "_type_spec",
        "from_tensors",
        "from_tensor_slices",
        "_GeneratorState",
        "from_generator",
        "range",
        "zip",
        "concatenate",
        "prefetch",
        "list_files",
        "repeat",
        "enumerate",
        "shuffle",
        "cache",
        "take",
        "skip",
        "shard",
        "batch",
        "padded_batch",
        "map",
        "flat_map",
        "interleave",
        "filter",
        "apply",
        "window",
        "reduce",
        "unbatch",
        "with_options",
        "cardinality",
        "_as_variant_tensor",
        "make_one_shot_iterator",
        "_make_one_shot_iterator",
        "make_initializable_iterator",
        "_make_initializable_iterator",
        "output_classes",
        "output_shapes",
        "output_types",
        "element_spec",
        "from_tensors",
        "from_tensor_slices",
        "from_sparse_tensor_slices",
        "from_generator",
        "range",
        "zip",
        "concatenate",
        "prefetch",
        "list_files",
        "repeat",
        "shuffle",
        "cache",
        "take",
        "skip",
        "shard",
        "batch",
        "padded_batch",
        "map",
        "map_with_legacy_function",
        "flat_map",
        "interleave",
        "filter",
        "filter_with_legacy_function",
        "apply",
        "window",
        "unbatch",
        "with_options",
        "_as_variant_tensor",
        "_has_captured_ref",
        "_inputs",
        "_functions",
        "options",
        "element_spec",
        "__iter__",
        "_graph_rewrites",
        "_graph_rewrite_configs",
        "_autotune_settings",
        "merge",
        "_inputs",
        "_inputs",
        "element_spec",
        "element_spec",
        "element_spec",
        "element_spec",
        "_inputs",
        "element_spec",
        "_type_spec",
        "value_type",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_to_tensor_list",
        "from_value",
        "_batch",
        "_unbatch",
        "_to_batched_tensor_list",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "output_structure",
        "output_classes",
        "output_shapes",
        "output_types",
        "function",
        "element_spec",
        "_transformation_name",
        "_inputs",
        "element_spec",
        "_inputs",
        "element_spec",
        "_parse_args",
        "_build_tensor",
        "element_spec",
        "element_spec",
        "__iter__",
        "__next__",
        "next",
        "make_zero",
        "value_or_default",
        "element_spec",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_functions",
        "_transformation_name",
        "element_spec",
        "options",
        "element_spec",
        "element_spec",
        "_process",
        "is_tensor_or_parent_ref",
        "get_next_id",
        "get_iterator",
        "iterator_completed",
        "get_iterator_id_fn",
        "generator_next_fn",
        "finalize_fn",
        "flat_map_fn",
        "_make_dataset",
        "_warn_if_collections",
        "_wrapper_helper",
        "check_types",
        "_padded_shape_to_batch_shape",
        "normalize",
        "normalize",
        "finalize_py_func",
        "wrapper_fn",
        "wrapper_fn",
        "generator_py_func",
        "generator_py_func"
    ],
    "benchmark_base": [
        "DatasetBenchmarkBase",
        "run_benchmark",
        "run_and_report_benchmark"
    ],
    "optimization": [
        "model",
        "optimize",
        "_ChooseFastestDataset",
        "_ChooseFastestBranchDataset",
        "_apply_fn",
        "_apply_fn",
        "_inputs",
        "element_spec",
        "element_spec"
    ],
    "testing": [
        "AutoGraphTestCase",
        "__new__",
        "_op_callback",
        "_run_as_tf_function",
        "variable",
        "setUp",
        "tearDown",
        "assertGraphContains",
        "assertOpCreated",
        "assertOpsNotCreated",
        "assertNoOpsCreated",
        "assertEqual",
        "assertDictEqual",
        "assertRaisesRuntime",
        "wrapper",
        "assertion",
        "fn_wrapper"
    ],
    "stats_ops": [
        "set_stats_aggregator",
        "bytes_produced_stats",
        "latency_stats",
        "_StatsDataset",
        "_apply_fn",
        "_apply_fn",
        "_apply_fn"
    ],
    "scan_ops": [
        "_ScanDataset",
        "scan",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_apply_fn"
    ],
    "compression_ops": [
        "compress",
        "uncompress"
    ],
    "optimization_options": [
        "_AutotuneAlgorithm",
        "MapVectorizationOptions",
        "OptimizationOptions",
        "_graph_rewrites",
        "_graph_rewrite_configs",
        "_autotune_buffers",
        "_autotune_settings",
        "_graph_rewrites",
        "_graph_rewrite_configs"
    ],
    "unique": [
        "unique",
        "_UniqueDataset",
        "_apply_fn"
    ],
    "get_single_element": [
        "get_single_element"
    ],
    "stats_aggregator": [
        "StatsAggregatorV2",
        "StatsAggregatorV1",
        "get_summary"
    ],
    "take_while_ops": [
        "_TakeWhileDataset",
        "take_while",
        "_functions",
        "_apply_fn"
    ],
    "counter": [
        "CounterV2",
        "CounterV1"
    ],
    "threadpool": [
        "_generate_shared_name",
        "PrivateThreadPool",
        "_ThreadPoolDataset",
        "override_threadpool"
    ],
    "snapshot": [
        "_LegacySnapshotDataset",
        "legacy_snapshot",
        "_SnapshotDataset",
        "snapshot",
        "_apply_fn",
        "_functions",
        "_transformation_name",
        "_apply_fn"
    ],
    "cardinality": [
        "cardinality",
        "assert_cardinality",
        "_AssertCardinalityDataset",
        "_apply_fn"
    ],
    "error_ops": [
        "ignore_errors",
        "_IgnoreErrorsDataset",
        "_apply_fn"
    ],
    "prefetching_ops": [
        "prefetch_to_device",
        "copy_to_device",
        "_CopyToDeviceDataset",
        "_MapOnGpuDataset",
        "map_on_gpu",
        "_apply_fn",
        "_apply_fn",
        "make_one_shot_iterator",
        "_functions",
        "element_spec",
        "_transformation_name",
        "_apply_fn",
        "_init_func",
        "_remote_init_func",
        "_next_func",
        "_remote_next_func",
        "_finalize_func",
        "_remote_finalize_func"
    ],
    "enumerate_ops": [
        "enumerate_dataset",
        "_apply_fn"
    ],
    "map_defun": [
        "map_defun"
    ],
    "shuffle_ops": [
        "_ShuffleAndRepeatDataset",
        "shuffle_and_repeat",
        "_apply_fn"
    ],
    "stats_options": [
        "StatsOptions"
    ],
    "threading_options": [
        "ThreadingOptions"
    ],
    "grouping": [
        "group_by_reducer",
        "group_by_window",
        "bucket_by_sequence_length",
        "_GroupByReducerDataset",
        "_GroupByWindowDataset",
        "Reducer",
        "_apply_fn",
        "_apply_fn",
        "_make_key_func",
        "_make_init_func",
        "_make_reduce_func",
        "_make_finalize_func",
        "element_spec",
        "_functions",
        "_transformation_name",
        "_make_window_size_func",
        "_make_key_func",
        "_make_reduce_func",
        "element_spec",
        "_functions",
        "_transformation_name",
        "init_func",
        "reduce_func",
        "finalize_func",
        "constant_window_func",
        "element_to_bucket_id",
        "window_size_fn",
        "make_padded_shapes",
        "batching_fn",
        "_apply_fn",
        "window_size_func_wrapper",
        "key_func_wrapper"
    ],
    "interleave_ops": [
        "parallel_interleave",
        "_DirectedInterleaveDataset",
        "sample_from_datasets_v2",
        "sample_from_datasets_v1",
        "choose_from_datasets_v2",
        "choose_from_datasets_v1",
        "_apply_fn",
        "_inputs",
        "element_spec",
        "select_dataset_constant_logits",
        "select_dataset_varying_logits"
    ],
    "matching_files": [
        "MatchingFilesDataset",
        "element_spec"
    ],
    "distribute_options": [
        "AutoShardPolicy",
        "ExternalStatePolicy",
        "DistributeOptions"
    ],
    "io": [
        "save",
        "_LoadDataset",
        "load",
        "_functions",
        "element_spec"
    ],
    "resampling": [
        "rejection_resample",
        "_get_prob_original_static",
        "_filter_ds",
        "_estimate_initial_dist_ds",
        "_get_target_to_initial_ratio",
        "_estimate_data_distribution",
        "_calculate_acceptance_probs_with_mixing",
        "_apply_fn",
        "maybe_warn_on_large_rejection",
        "_gather_and_copy",
        "update_estimate_and_tile",
        "add_class_value"
    ],
    "writers": [
        "TFRecordWriter",
        "write"
    ],
    "batching": [
        "dense_to_ragged_batch",
        "dense_to_sparse_batch",
        "map_and_batch_with_legacy_function",
        "map_and_batch",
        "unbatch",
        "_DenseToSparseBatchDataset",
        "_MapAndBatchDataset",
        "_DenseToRaggedDataset",
        "_apply_fn",
        "_apply_fn",
        "_apply_fn",
        "_apply_fn",
        "_apply_fn",
        "element_spec",
        "_functions",
        "element_spec",
        "element_spec",
        "to_ragged_spec",
        "to_ragged_variant"
    ],
    "data_service_ops": [
        "ProcessingMode",
        "_DataServiceDatasetV2",
        "_DataServiceDatasetV1",
        "_parse_service",
        "_from_dataset_id",
        "_distribute",
        "distribute",
        "register_dataset",
        "from_dataset_id",
        "validate",
        "element_spec",
        "_apply_fn"
    ],
    "dataset_serialization_test_base": [
        "remove_variants",
        "DatasetSerializationTestBase",
        "_remove_variant",
        "tearDown",
        "run_core_tests",
        "verify_unused_iterator",
        "verify_fully_used_iterator",
        "verify_exhausted_iterator",
        "verify_multiple_breaks",
        "verify_reset_restored_iterator",
        "verify_error_on_save",
        "verify_run_with_breaks",
        "gen_outputs",
        "match",
        "does_not_match",
        "gen_break_points",
        "_build_graph",
        "_add_iterator_ops_to_collection",
        "_get_iterator_ops_from_collection",
        "_get_output_types",
        "_get_output_shapes",
        "_get_output_classes",
        "_ckpt_path",
        "_latest_ckpt",
        "_save",
        "_restore",
        "_initialize",
        "_import_meta_graph",
        "_delete_ckpt",
        "ds_fn_no_opt",
        "get_ops"
    ],
    "debug_mnist": [
        "main"
    ],
    "profile_analyzer_cli": [
        "ProfileDataTableView",
        "_list_profile_filter",
        "_list_profile_sort_key",
        "ProfileAnalyzer",
        "create_profiler_ui",
        "value",
        "row_count",
        "column_count",
        "column_names",
        "column_sort_id",
        "list_profile",
        "_get_profile_data_generator",
        "_get_list_profile_lines",
        "_measure_list_profile_column_widths",
        "print_source",
        "_get_total_cost",
        "_render_normalized_cost_bar",
        "get_help",
        "profile_data_generator"
    ],
    "base_ui": [
        "BaseUI",
        "set_help_intro",
        "register_command_handler",
        "register_tab_comp_context",
        "run_ui",
        "_parse_command",
        "_analyze_tab_complete_input",
        "config",
        "_config_command_handler"
    ],
    "debugger_cli_common": [
        "CommandLineExit",
        "RichLine",
        "rich_text_lines_from_rich_line_list",
        "get_tensorflow_version_lines",
        "RichTextLines",
        "regex_find",
        "wrap_rich_text_lines",
        "CommandHandlerRegistry",
        "TabCompletionRegistry",
        "CommandHistory",
        "MenuItem",
        "Menu",
        "exit_token",
        "__add__",
        "__len__",
        "lines",
        "font_attr_segs",
        "annotations",
        "num_lines",
        "slice",
        "extend",
        "_extend_before",
        "append",
        "append_rich_line",
        "prepend",
        "write_to_file",
        "register_command_handler",
        "dispatch_command",
        "is_registered",
        "get_help",
        "set_help_intro",
        "_help_handler",
        "_version_handler",
        "_resolve_prefix",
        "_get_help_for_command_prefix",
        "register_tab_comp_context",
        "deregister_context",
        "extend_comp_items",
        "remove_comp_items",
        "get_completions",
        "_common_prefix",
        "_load_history_from_file",
        "_add_command_to_history_file",
        "_get_default_history_file_path",
        "add_command",
        "most_recent_n",
        "lookup_prefix",
        "caption",
        "type",
        "content",
        "is_enabled",
        "disable",
        "enable",
        "append",
        "insert",
        "num_items",
        "captions",
        "caption_to_item",
        "format_as_single_line"
    ],
    "cli_test_utils": [
        "assert_lines_equal_ignoring_whitespace",
        "assert_array_lines_close"
    ],
    "analyzer_cli": [
        "_add_main_menu",
        "DebugAnalyzer",
        "create_analyzer_ui",
        "_build_argument_parsers",
        "add_tensor_filter",
        "get_tensor_filter",
        "get_help",
        "list_tensors",
        "_measure_tensor_list_column_widths",
        "_sort_dump_data_by",
        "_tensor_list_column_heads",
        "node_info",
        "_exclude_denylisted_ops",
        "_render_node_traceback",
        "list_inputs",
        "print_tensor",
        "list_outputs",
        "evaluate_expression",
        "_reconstruct_print_source_command",
        "print_source",
        "_make_source_table",
        "list_source",
        "_list_inputs_or_outputs",
        "_dfs_from_node",
        "_format_neighbors",
        "_list_node_attributes",
        "_list_node_dumps"
    ],
    "command_parser": [
        "Interval",
        "parse_command",
        "extract_output_file_path",
        "parse_tensor_name_with_slicing",
        "validate_slicing_string",
        "_parse_slices",
        "parse_indices",
        "parse_ranges",
        "parse_memory_interval",
        "parse_time_interval",
        "_parse_interval",
        "parse_readable_size_str",
        "parse_readable_time_str",
        "evaluate_tensor_slice",
        "get_print_tensor_argparser",
        "contains",
        "__eq__",
        "parse_positive_float"
    ],
    "cli_config": [
        "CLIConfig",
        "get",
        "set",
        "set_callback",
        "_default_config_file_path",
        "_save_to_file",
        "summarize",
        "_load_from_file"
    ],
    "curses_widgets": [
        "NavigationHistoryItem",
        "CursesNavigationHistory",
        "add_item",
        "update_scroll_position",
        "size",
        "pointer",
        "go_back",
        "go_forward",
        "can_go_back",
        "can_go_forward",
        "render"
    ],
    "cli_shared": [
        "bytes_to_readable_str",
        "time_to_readable_str",
        "parse_ranges_highlight",
        "numpy_printoptions_from_screen_info",
        "format_tensor",
        "error",
        "_recommend_command",
        "get_tfdbg_logo",
        "get_run_start_intro",
        "get_run_short_description",
        "get_error_intro",
        "ranges_filter"
    ],
    "evaluator": [
        "_parse_debug_tensor_name",
        "ExpressionEvaluator",
        "evaluate"
    ],
    "tensor_format": [
        "HighlightOptions",
        "format_tensor",
        "_annotate_ndarray_lines",
        "locate_tensor_element",
        "_validate_indices_list",
        "_locate_elements_in_line",
        "_pad_string_to_length",
        "numeric_summary",
        "_counts_summary"
    ],
    "ui_factory": [
        "get_ui"
    ],
    "curses_ui": [
        "_get_command_from_line_attr_segs",
        "ScrollBar",
        "CursesUI",
        "_block_y",
        "layout",
        "get_click_command",
        "_init_layout",
        "_screen_init",
        "_screen_color_init",
        "_screen_launch",
        "_screen_create_command_window",
        "_screen_refresh",
        "_screen_terminate",
        "run_ui",
        "get_help",
        "_addstr",
        "_refresh_pad",
        "_screen_create_command_textbox",
        "_ui_loop",
        "_get_user_command",
        "_screen_get_user_command",
        "_strip_terminator",
        "_screen_refresh_size",
        "_navigate_screen_output",
        "_dispatch_command",
        "_screen_gather_textbox_str",
        "_on_textbox_keypress",
        "_screen_getmouse",
        "_redraw_output",
        "_fetch_hyperlink_command",
        "_title",
        "_auto_key_in",
        "_erase_existing_command",
        "_screen_draw_text_line",
        "_screen_new_output_pad",
        "_screen_display_output",
        "_display_output",
        "_display_lines",
        "_display_nav_bar",
        "_display_main_menu",
        "_pad_line_end_with_whitespace",
        "_screen_add_line_to_output_pad",
        "_screen_scroll_output_pad",
        "_scroll_output",
        "_screen_render_nav_bar",
        "_screen_render_menu_pad",
        "_compile_ui_status_summary",
        "_format_indices",
        "_show_array_indices",
        "_show_array_index_at_line",
        "_tab_complete",
        "_display_candidates",
        "_toast",
        "_error_toast",
        "_info_toast",
        "_interrupt_handler",
        "_mouse_mode_command_handler",
        "_set_mouse_enabled",
        "_screen_set_mousemask"
    ],
    "readline_ui": [
        "ReadlineUI",
        "_init_input",
        "_readline_complete",
        "run_ui",
        "_ui_loop",
        "_get_user_command",
        "_dispatch_command",
        "_display_output"
    ],
    "offline_analyzer": [
        "main"
    ],
    "framework": [
        "_check_type",
        "OnSessionInitRequest",
        "OnSessionInitAction",
        "OnSessionInitResponse",
        "OnRunStartRequest",
        "OnRunStartAction",
        "OnRunStartResponse",
        "OnRunEndRequest",
        "OnRunEndResponse",
        "BaseDebugWrapperSession",
        "WatchOptions",
        "NonInteractiveDebugWrapperSession",
        "graph",
        "graph_def",
        "sess_str",
        "session",
        "run",
        "_run_with_debugging",
        "_run_with_profiling",
        "_is_disabled_thread",
        "run_step_fn",
        "partial_run_setup",
        "partial_run",
        "list_devices",
        "reset",
        "make_callable",
        "_make_callable_from_options",
        "run_call_count",
        "increment_run_call_count",
        "_is_disk_usage_reset_each_run",
        "_decorate_run_options_for_debug",
        "_decorate_run_options_for_profile",
        "on_session_init",
        "on_run_start",
        "on_run_end",
        "as_default",
        "__enter__",
        "__exit__",
        "__del__",
        "close",
        "should_stop",
        "__repr__",
        "on_session_init",
        "prepare_run_debug_urls",
        "on_run_start",
        "_prepare_run_watch_config",
        "on_run_end",
        "is_empty",
        "wrapped_runner",
        "wrapped_runner"
    ],
    "grpc_wrapper": [
        "publish_traceback",
        "GrpcDebugWrapperSession",
        "_signal_handler",
        "register_signal_handler",
        "TensorBoardDebugWrapperSession",
        "prepare_run_debug_urls",
        "_normalize_grpc_url",
        "run",
        "_gated_grpc_watch_fn"
    ],
    "local_cli_wrapper": [
        "LocalCLIDebugWrapperSession",
        "_is_disk_usage_reset_each_run",
        "_initialize_argparsers",
        "add_tensor_filter",
        "on_session_init",
        "on_run_start",
        "_exit_if_requested_by_user",
        "_prep_cli_for_run_start",
        "on_run_end",
        "_remove_dump_root",
        "_prep_debug_cli_for_run_end",
        "_prep_profile_cli_for_run_end",
        "_launch_cli",
        "_run_info_handler",
        "_print_feed_handler",
        "_run_handler",
        "_register_this_run_info",
        "_get_run_debug_urls",
        "_update_run_calls_state"
    ],
    "hooks": [
        "LocalCLIDebugHook",
        "DumpingDebugHook",
        "GrpcDebugHook",
        "TensorBoardDebugHook",
        "add_tensor_filter",
        "begin",
        "before_run",
        "after_run",
        "begin",
        "before_run",
        "after_run",
        "before_run",
        "before_run",
        "_gated_grpc_watch_fn"
    ],
    "dumping_wrapper": [
        "DumpingDebugWrapperSession",
        "prepare_run_debug_urls"
    ],
    "debug_keras": [
        "main"
    ],
    "debug_mnist_v1": [
        "parse_args",
        "main",
        "format_example",
        "weight_variable",
        "bias_variable",
        "nn_layer"
    ],
    "debug_fibonacci": [
        "main",
        "has_negative"
    ],
    "debug_errors": [
        "main"
    ],
    "debug_mnist_v2": [
        "parse_args",
        "main",
        "format_example",
        "get_dense_weights",
        "dense_layer",
        "model",
        "loss"
    ],
    "debug_fibonacci_v2": [
        "main"
    ],
    "compile_utils": [
        "Container",
        "LossesContainer",
        "MetricsContainer",
        "create_pseudo_output_names",
        "create_pseudo_input_names",
        "_create_pseudo_names",
        "map_to_output_names",
        "map_missing_dict_keys",
        "match_dtype_and_rank",
        "get_mask",
        "apply_mask",
        "build",
        "_conform_to_outputs",
        "_maybe_broadcast_to_outputs",
        "_should_broadcast",
        "_copy_object",
        "metrics",
        "build",
        "_create_metrics",
        "__call__",
        "_get_loss_object",
        "_should_broadcast",
        "_copy_object",
        "metrics",
        "build",
        "_set_metric_names",
        "_create_ordered_metrics",
        "update_state",
        "_get_metric_objects",
        "_get_metric_object",
        "_should_broadcast",
        "_copy_object",
        "one_index",
        "_broadcast_fn"
    ],
    "input_layer": [
        "InputLayer",
        "Input",
        "get_config",
        "_trackable_saved_model_saver"
    ],
    "training_utils_v1": [
        "Aggregator",
        "MetricsAggregator",
        "ConcatAggregator",
        "get_copy_pool",
        "SliceAggregator",
        "OutputsAggregator",
        "get_progbar",
        "check_num_samples",
        "standardize_single_array",
        "standardize_input_data",
        "standardize_sample_or_class_weights",
        "standardize_class_weights",
        "standardize_sample_weights",
        "check_array_lengths",
        "check_loss_and_target_compatibility",
        "collect_per_output_metric_info",
        "batch_shuffle",
        "standardize_weights",
        "has_symbolic_tensors",
        "has_tensors",
        "get_metric_name",
        "get_metric_function",
        "call_metric_function",
        "get_loss_function",
        "validate_dataset_input",
        "validate_input_types",
        "check_generator_arguments",
        "check_steps_argument",
        "cast_single_tensor",
        "cast_if_floating_dtype_and_mismatch",
        "cast_if_floating_dtype",
        "cast_to_model_input_dtypes",
        "prepare_sample_weight_modes",
        "prepare_loss_functions",
        "prepare_loss_weights",
        "is_feature_layer",
        "is_eager_dataset_or_iterator",
        "get_dataset_graph_def",
        "verify_dataset_shuffled",
        "is_dataset_or_iterator",
        "get_iterator",
        "initialize_iterator",
        "extract_tensors_from_dataset",
        "unpack_iterator_input",
        "infer_steps_for_dataset",
        "ModelInputs",
        "generic_output_names",
        "should_run_validation",
        "split_training_and_validation_data",
        "unpack_validation_data",
        "TrainingLoop",
        "create",
        "aggregate",
        "finalize",
        "create",
        "aggregate",
        "finalize",
        "create",
        "aggregate",
        "finalize",
        "create",
        "aggregate",
        "_slice_assign",
        "finalize",
        "create",
        "aggregate",
        "finalize",
        "is_tensor_or_composite_tensor",
        "set_of_lengths",
        "get_input_names",
        "get_symbolic_inputs",
        "as_dict",
        "as_list",
        "fit",
        "evaluate",
        "predict"
    ],
    "training_eager_v1": [
        "_eager_loss_fn",
        "_eager_metrics_fn",
        "_model_loss",
        "_process_single_batch",
        "train_on_batch",
        "test_on_batch"
    ],
    "partial_batch_padding_handler": [
        "PartialBatchPaddingHandler",
        "get_real_batch_size",
        "update_mask",
        "pad_batch",
        "apply_mask",
        "_find_any_tensor",
        "_pad"
    ],
    "base_layer_v1": [
        "Layer",
        "KerasHistory",
        "build",
        "call",
        "_add_trackable",
        "add_weight",
        "get_config",
        "from_config",
        "compute_output_shape",
        "compute_output_signature",
        "compute_mask",
        "__call__",
        "_assert_built_as_v1",
        "dtype",
        "name",
        "dynamic",
        "stateful",
        "stateful",
        "trainable",
        "trainable",
        "activity_regularizer",
        "activity_regularizer",
        "input_spec",
        "input_spec",
        "trainable_weights",
        "non_trainable_weights",
        "weights",
        "updates",
        "losses",
        "add_loss",
        "metrics",
        "add_metric",
        "add_update",
        "set_weights",
        "get_weights",
        "get_updates_for",
        "get_losses_for",
        "get_input_mask_at",
        "get_output_mask_at",
        "input_mask",
        "output_mask",
        "get_input_shape_at",
        "get_output_shape_at",
        "get_input_at",
        "get_output_at",
        "input",
        "output",
        "input_shape",
        "count_params",
        "output_shape",
        "inbound_nodes",
        "outbound_nodes",
        "apply",
        "add_variable",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "_inbound_nodes",
        "_inbound_nodes",
        "_outbound_nodes",
        "_outbound_nodes",
        "_set_dtype_policy",
        "_compute_dtype",
        "_maybe_cast_inputs",
        "_dtype",
        "_dtype",
        "_name_scope",
        "_init_set_name",
        "_get_existing_metric",
        "_symbolic_add_metric",
        "_handle_weight_regularization",
        "_handle_activity_regularization",
        "_set_mask_metadata",
        "_collect_input_masks",
        "_call_arg_was_passed",
        "_get_call_arg_value",
        "_set_call_arg_value",
        "_get_node_attribute_at_index",
        "_maybe_build",
        "_symbolic_call",
        "_get_trainable_state",
        "_set_trainable_state",
        "_obj_reference_counts",
        "_maybe_create_attribute",
        "__delattr__",
        "__setattr__",
        "_gather_children_attribute",
        "_is_layer",
        "_init_call_fn_args",
        "_call_full_argspec",
        "_call_fn_args",
        "_call_fn_arg_positions",
        "_call_accepts_kwargs",
        "_should_compute_mask",
        "_dedup_weights",
        "_trackable_saved_model_saver",
        "_object_identifier",
        "_tracking_metadata",
        "_list_extra_dependencies_for_serialization",
        "_list_functions_for_serialization",
        "__getstate__",
        "__setstate__",
        "check_type_return_shape",
        "_tag_unconditional",
        "process_update",
        "_loss_for_variable",
        "_make_placeholder_like",
        "getter",
        "_convert_non_tensor",
        "f"
    ],
    "base_preprocessing_layer": [
        "PreprocessingLayer",
        "CombinerPreprocessingLayer",
        "convert_to_list",
        "Combiner",
        "adapt",
        "_add_state_variable",
        "_restore_updates",
        "_get_dataset_iterator",
        "adapt",
        "_set_state_variables",
        "__repr__",
        "compute",
        "merge",
        "extract",
        "restore",
        "serialize",
        "deserialize"
    ],
    "base_layer_utils": [
        "create_mean_metric",
        "make_variable",
        "collect_previous_mask",
        "have_all_keras_metadata",
        "generate_placeholders_from_shape",
        "create_keras_history",
        "_create_keras_history_helper",
        "unnest_if_single_tensor",
        "needs_keras_history",
        "is_in_keras_graph",
        "is_in_eager_or_tf_function",
        "is_in_tf_function",
        "uses_keras_history",
        "mark_checked",
        "call_context",
        "CallContext",
        "CallContextManager",
        "training_arg_passed_to_call",
        "is_subclassed",
        "from_saved_model",
        "check_graph_consistency",
        "mark_as_return",
        "enable_v2_dtype_behavior",
        "disable_v2_dtype_behavior",
        "v2_dtype_behavior_enabled",
        "TrackableWeightHandler",
        "no_ragged_support",
        "is_split_variable",
        "has_weights",
        "_collect_previous_mask",
        "_mark_checked",
        "enter",
        "layer",
        "inputs",
        "build_graph",
        "training",
        "saving",
        "frozen",
        "in_keras_graph",
        "__enter__",
        "__exit__",
        "_mark_as_return",
        "num_tensors",
        "set_weights",
        "get_tensors",
        "_set_weights_v1"
    ],
    "functional": [
        "Functional",
        "_make_node_key",
        "_map_graph_network",
        "_build_map",
        "_build_map_helper",
        "_map_subgraph_network",
        "_should_skip_first_node",
        "connect_ancillary_layers",
        "reconstruct_from_config",
        "get_network_config",
        "shape_with_no_batch_size",
        "_init_graph_network",
        "input",
        "input_shape",
        "input_spec",
        "input_spec",
        "output",
        "output_shape",
        "_set_output_names",
        "_layer_checkpoint_dependencies",
        "_checkpoint_dependencies",
        "_lookup_dependency",
        "_handle_deferred_layer_dependencies",
        "_should_compute_mask",
        "compute_mask",
        "call",
        "compute_output_shape",
        "_init_set_name",
        "_run_internal_graph",
        "_flatten_to_reference_inputs",
        "_conform_to_reference_input",
        "get_config",
        "from_config",
        "_validate_graph_inputs_and_outputs",
        "_insert_layers",
        "_compute_tensor_usage_count",
        "_assert_weights_created",
        "_graph_network_add_loss",
        "_graph_network_add_metric",
        "_trackable_saved_model_saver",
        "_get_save_spec",
        "add_unprocessed_node",
        "get_node_index",
        "_deserialize_keras_tensors",
        "process_node",
        "process_layer",
        "_get_min_depth",
        "_deserialize_keras_tensor"
    ],
    "training_v1": [
        "Model",
        "DistributedCallbackModel",
        "_TrainingEndpoint",
        "_TrainingTarget",
        "_is_symbolic_tensor",
        "_convert_scipy_sparse_tensor",
        "_get_metrics_from_layers",
        "_non_none_constant_value",
        "_init_batch_counters",
        "_set_strategy",
        "get_weights",
        "load_weights",
        "compile",
        "_init_distributed_function_cache_if_not_compiled",
        "metrics",
        "metrics_names",
        "run_eagerly",
        "run_eagerly",
        "_select_training_loop",
        "fit",
        "evaluate",
        "predict",
        "reset_metrics",
        "train_on_batch",
        "test_on_batch",
        "predict_on_batch",
        "fit_generator",
        "evaluate_generator",
        "predict_generator",
        "_check_call_args",
        "_set_optimizer",
        "_prepare_validation_data",
        "_validate_compile_param_for_distribution_strategy",
        "_process_target_tensor_for_compile",
        "_compile_eagerly",
        "_update_sample_weight_modes",
        "_recompile_weights_loss_and_weighted_metrics",
        "_compile_weights_loss_and_weighted_metrics",
        "_prepare_skip_target_masks",
        "_prepare_output_masks",
        "_prepare_total_loss",
        "_get_callback_model",
        "_make_callback_model",
        "_validate_or_infer_batch_size",
        "_prepare_sample_weights",
        "_cache_output_metric_attributes",
        "_add_unique_metric_name",
        "_init_metric_attributes",
        "_set_per_output_metric_attributes",
        "_set_metric_attributes",
        "_handle_per_output_metrics",
        "_handle_metrics",
        "_check_trainable_weights_consistency",
        "_make_train_function",
        "_make_test_function",
        "_make_predict_function",
        "_make_execution_function",
        "_distribution_standardize_user_data",
        "_standardize_user_data",
        "_standardize_tensors",
        "_build_model_with_inputs",
        "_compile_from_inputs",
        "_set_inputs",
        "_set_input_attrs",
        "_set_output_attrs",
        "_targets",
        "_feed_targets",
        "_feed_output_names",
        "_feed_output_shapes",
        "_feed_loss_fns",
        "_loss_weights_list",
        "_output_loss_metrics",
        "sample_weights",
        "_sample_weight_modes",
        "_feed_sample_weights",
        "_maybe_load_initial_epoch_from_ckpt",
        "_get_training_eval_metrics",
        "_assert_compile_was_called",
        "_in_multi_worker_mode",
        "_get_distribution_strategy",
        "_trackable_saved_model_saver",
        "_get_compile_args",
        "_compile_was_called",
        "set_original_model",
        "save_weights",
        "save",
        "load_weights",
        "__getattr__",
        "output",
        "output_name",
        "shape",
        "loss_fn",
        "loss_weight",
        "loss_weight",
        "training_target",
        "training_target",
        "create_training_target",
        "output_loss_metric",
        "output_loss_metric",
        "sample_weight",
        "sample_weight",
        "sample_weight_mode",
        "sample_weight_mode",
        "should_skip_target",
        "should_skip_target_weights",
        "has_training_target",
        "has_feedable_training_target",
        "loss_name",
        "feed_output_shape",
        "sample_weights_mismatch",
        "populate_sample_weight",
        "target",
        "feedable",
        "skip_target_weights",
        "_type_spec_from_value",
        "create_tensor_spec"
    ],
    "training_utils": [
        "slice_arrays",
        "handle_partial_sample_weights",
        "RespectCompiledTrainableState",
        "get_input_shape_and_dtype",
        "get_static_batch_size",
        "list_to_tuple",
        "__enter__",
        "__exit__",
        "_is_graph_model"
    ],
    "sequential": [
        "Sequential",
        "_get_shape_tuple",
        "relax_input_shape",
        "clear_previously_created_nodes",
        "track_nodes_created_by_last_call",
        "layers",
        "add",
        "pop",
        "_build_graph_network_for_inferred_shape",
        "build",
        "call",
        "compute_output_shape",
        "compute_mask",
        "predict_proba",
        "predict_classes",
        "get_config",
        "from_config",
        "input_spec",
        "input_spec",
        "_trackable_saved_model_saver",
        "_is_layer_name_unique",
        "_assert_weights_created"
    ],
    "base_layer": [
        "Layer",
        "TensorFlowOpLayer",
        "AddLoss",
        "AddMetric",
        "_in_functional_construction_mode",
        "_convert_numpy_or_python_types",
        "_instrument_layer_creation",
        "build",
        "call",
        "_add_trackable",
        "add_weight",
        "get_config",
        "from_config",
        "compute_output_shape",
        "compute_output_signature",
        "_keras_tensor_symbolic_call",
        "_infer_output_signature",
        "compute_mask",
        "__call__",
        "_functional_construction_call",
        "_set_training_mode",
        "_autographed_call",
        "dtype",
        "name",
        "supports_masking",
        "supports_masking",
        "dynamic",
        "stateful",
        "stateful",
        "trainable",
        "trainable",
        "activity_regularizer",
        "activity_regularizer",
        "input_spec",
        "input_spec",
        "trainable_weights",
        "non_trainable_weights",
        "weights",
        "updates",
        "losses",
        "add_loss",
        "_clear_losses",
        "metrics",
        "add_metric",
        "add_update",
        "set_weights",
        "get_weights",
        "get_updates_for",
        "get_losses_for",
        "get_input_mask_at",
        "get_output_mask_at",
        "input_mask",
        "output_mask",
        "get_input_shape_at",
        "get_output_shape_at",
        "get_input_at",
        "get_output_at",
        "input",
        "output",
        "input_shape",
        "count_params",
        "output_shape",
        "inbound_nodes",
        "outbound_nodes",
        "apply",
        "add_variable",
        "variables",
        "trainable_variables",
        "non_trainable_variables",
        "_inbound_nodes",
        "_inbound_nodes",
        "_outbound_nodes",
        "_outbound_nodes",
        "_set_dtype_policy",
        "dtype_policy",
        "compute_dtype",
        "_compute_dtype",
        "variable_dtype",
        "_maybe_cast_inputs",
        "_should_cast_single_input",
        "_cast_single_input",
        "_dtype",
        "_dtype",
        "_name_scope",
        "_init_set_name",
        "_get_existing_metric",
        "_handle_weight_regularization",
        "_handle_activity_regularization",
        "_set_mask_metadata",
        "_set_mask_keras_history_checked",
        "_get_input_masks",
        "_call_arg_was_passed",
        "_get_call_arg_value",
        "_set_call_arg_value",
        "_set_connectivity_metadata",
        "_get_node_attribute_at_index",
        "_maybe_build",
        "_symbolic_call",
        "_get_trainable_state",
        "_set_trainable_state",
        "_obj_reference_counts",
        "_maybe_create_attribute",
        "__delattr__",
        "__setattr__",
        "_gather_children_attribute",
        "_flatten_layers",
        "_is_layer",
        "_init_call_fn_args",
        "_call_full_argspec",
        "_call_fn_args",
        "_call_fn_arg_defaults",
        "_call_fn_arg_positions",
        "_call_accepts_kwargs",
        "_eager_losses",
        "_eager_losses",
        "_dedup_weights",
        "_split_out_first_arg",
        "_set_save_spec",
        "_get_save_spec",
        "_trackable_saved_model_saver",
        "_object_identifier",
        "_tracking_metadata",
        "_list_extra_dependencies_for_serialization",
        "_list_functions_for_serialization",
        "__getstate__",
        "__setstate__",
        "call",
        "_make_node_def",
        "_make_op",
        "_defun_call",
        "get_config",
        "call",
        "get_config",
        "call",
        "get_config",
        "check_type_return_shape",
        "_tag_callable",
        "_loss_for_variable",
        "_make_placeholder_like",
        "getter",
        "_convert_non_tensor",
        "_make_placeholder_like"
    ],
    "training_generator_v1": [
        "model_iteration",
        "_get_next_batch",
        "_validate_arguments",
        "convert_to_generator_like",
        "_make_enqueued_generator",
        "_make_execution_function",
        "_get_num_samples_or_steps",
        "GeneratorOrSequenceTrainingLoop",
        "EagerDatasetOrIteratorTrainingLoop",
        "GeneratorLikeTrainingLoop",
        "_gen",
        "fit",
        "evaluate",
        "predict",
        "fit",
        "evaluate",
        "predict",
        "fit",
        "evaluate",
        "predict",
        "predict_on_batch"
    ],
    "training_arrays_v1": [
        "model_iteration",
        "_get_model_feed",
        "_print_train_info",
        "_get_num_samples_or_steps",
        "_prepare_feed_values",
        "_get_iterator",
        "_reinitialize_iterator",
        "_make_execution_function",
        "_update_sample_weight_mode",
        "ArrayLikeTrainingLoop",
        "fit",
        "evaluate",
        "predict",
        "get_distributed_inputs"
    ],
    "training": [
        "disable_multi_worker",
        "inject_functional_model_class",
        "is_functional_model_init_params",
        "Model",
        "reduce_per_replica",
        "concat",
        "_is_tpu_multi_host",
        "_tpu_multi_host_concat",
        "_collective_all_reduce_multi_worker",
        "_multi_worker_concat",
        "_is_scalar",
        "write_scalar_summaries",
        "_minimum_control_deps",
        "_disallow_inside_tf_function",
        "_is_hdf5_filepath",
        "_method_wrapper",
        "__new__",
        "_init_batch_counters",
        "__setattr__",
        "build",
        "call",
        "compile",
        "_get_optimizer",
        "_reset_compile_cache",
        "_configure_steps_per_execution",
        "_should_compute_mask",
        "metrics",
        "metrics_names",
        "distribute_strategy",
        "run_eagerly",
        "run_eagerly",
        "train_step",
        "make_train_function",
        "fit",
        "test_step",
        "make_test_function",
        "evaluate",
        "predict_step",
        "make_predict_function",
        "predict",
        "reset_metrics",
        "train_on_batch",
        "test_on_batch",
        "predict_on_batch",
        "fit_generator",
        "evaluate_generator",
        "predict_generator",
        "trainable_weights",
        "non_trainable_weights",
        "get_weights",
        "save",
        "save_weights",
        "load_weights",
        "_updated_config",
        "get_config",
        "from_config",
        "to_json",
        "to_yaml",
        "reset_states",
        "state_updates",
        "weights",
        "_undeduplicated_weights",
        "summary",
        "layers",
        "get_layer",
        "_set_save_spec",
        "_assert_weights_created",
        "_check_call_args",
        "_validate_compile",
        "_maybe_load_initial_epoch_from_ckpt",
        "_assert_compile_was_called",
        "_set_inputs",
        "_trackable_saved_model_saver",
        "_list_functions_for_serialization",
        "_should_eval",
        "_get_compile_args",
        "_get_callback_model",
        "_in_multi_worker_mode",
        "_get_distribution_strategy",
        "_compile_was_called",
        "_reduce",
        "_get_single_optimizer",
        "step_function",
        "step_function",
        "step_function",
        "run_step",
        "train_function",
        "train_function",
        "run_step",
        "test_function",
        "test_function",
        "run_step",
        "predict_function",
        "predict_function"
    ],
    "keras_tensor": [
        "enable_keras_tensors",
        "disable_keras_tensors",
        "keras_tensors_enabled",
        "KerasTensor",
        "SparseKerasTensor",
        "RaggedKerasTensor",
        "UserRegisteredSpec",
        "UserRegisteredTypeKerasTensor",
        "_KerasTensorIterator",
        "register_keras_tensor_specialization",
        "keras_tensor_to_placeholder",
        "keras_tensor_from_tensor",
        "type_spec",
        "shape",
        "from_tensor",
        "_to_placeholder",
        "get_shape",
        "__len__",
        "op",
        "__hash__",
        "__array__",
        "is_tensor_like",
        "set_shape",
        "__str__",
        "__repr__",
        "dtype",
        "ref",
        "__iter__",
        "name",
        "_overload_all_operators",
        "_overload_operator",
        "_to_placeholder",
        "_to_placeholder",
        "ragged_rank",
        "_component_specs",
        "_from_components",
        "_serialize",
        "_to_components",
        "value_type",
        "from_tensor",
        "_to_placeholder",
        "__iter__",
        "__next__",
        "component_to_placeholder"
    ],
    "input_spec": [
        "InputSpec",
        "to_tensor_shape",
        "assert_input_compatibility",
        "display_shape",
        "to_tensor_spec",
        "__repr__",
        "get_config",
        "from_config"
    ],
    "data_adapter": [
        "DataAdapter",
        "TensorLikeDataAdapter",
        "GenericArrayLikeDataAdapter",
        "CompositeTensorDataAdapter",
        "ListsOfScalarsDataAdapter",
        "DatasetAdapter",
        "GeneratorDataAdapter",
        "KerasSequenceAdapter",
        "select_data_adapter",
        "_type_name",
        "_process_tensorlike",
        "is_none_or_empty",
        "broadcast_sample_weight_modes",
        "DataHandler",
        "_make_class_weight_map_fn",
        "expand_1d",
        "train_validation_split",
        "unpack_x_y_sample_weight",
        "pack_x_y_sample_weight",
        "single_batch_iterator",
        "_check_data_cardinality",
        "_scipy_sparse_to_sparse_tensor",
        "_is_distributed_dataset",
        "can_handle",
        "get_dataset",
        "get_size",
        "batch_size",
        "representative_batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "get_samples",
        "on_epoch_end",
        "can_handle",
        "slice_inputs",
        "get_dataset",
        "get_size",
        "batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "can_handle",
        "slice_inputs",
        "can_handle",
        "get_dataset",
        "get_size",
        "batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "can_handle",
        "_is_list_of_scalars",
        "get_dataset",
        "get_size",
        "batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "can_handle",
        "get_dataset",
        "get_size",
        "batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "_validate_args",
        "can_handle",
        "_standardize_batch",
        "_peek_and_restore",
        "_handle_multiprocessing",
        "get_dataset",
        "get_size",
        "batch_size",
        "representative_batch_size",
        "has_partial_batch",
        "partial_batch_size",
        "should_recreate_iterator",
        "can_handle",
        "_peek_and_restore",
        "_handle_multiprocessing",
        "get_size",
        "should_recreate_iterator",
        "on_epoch_end",
        "_convert_numpy_and_scipy",
        "enumerate_epochs",
        "_truncate_execution_to_epoch",
        "catch_stop_iteration",
        "steps",
        "step_increment",
        "inferred_steps",
        "should_sync",
        "_infer_steps",
        "_samples",
        "_validate_data_handler",
        "_class_weights_map_fn",
        "_expand_single_1d_tensor",
        "_can_split",
        "_split",
        "_is_tensor",
        "permutation",
        "slice_batch_indices",
        "grab_batch",
        "_is_array_like",
        "dynamic_shape_like",
        "grab_batch",
        "_is_composite",
        "_is_tensor_or_composite",
        "_get_dynamic_shape",
        "wrapped_generator",
        "_convert_dtype",
        "shuffle_batch",
        "py_method",
        "generator_fn",
        "generator_fn",
        "generator_fn",
        "slice_array"
    ],
    "base_preprocessing_layer_v1": [
        "CombinerPreprocessingLayer",
        "_restore_updates",
        "_get_dataset_iterator",
        "_set_state_variables"
    ],
    "training_distributed_v1": [
        "_per_replica_execution_function",
        "_build_model",
        "_make_train_step_fn",
        "experimental_tpu_fit_loop",
        "experimental_tpu_test_loop",
        "experimental_tpu_predict_loop",
        "DistributionSingleWorkerTrainingLoop",
        "_train_with_multi_worker",
        "DistributionMultiWorkerTrainingLoop",
        "_step_fn",
        "_test_step_fn",
        "_predict_step_fn",
        "fit",
        "evaluate",
        "predict",
        "wrapper",
        "fit",
        "evaluate",
        "predict",
        "_worker_fn"
    ],
    "node": [
        "Node",
        "KerasHistory",
        "is_keras_tensor",
        "keras_inputs",
        "parent_nodes",
        "iterate_inbound",
        "map_arguments",
        "serialize",
        "input_tensors",
        "output_tensors",
        "input_shapes",
        "output_shapes",
        "outbound_layer",
        "inbound_layers",
        "_serialize_keras_tensor",
        "serialize_first_arg_tensor"
    ],
    "text_dataset": [
        "text_dataset_from_directory",
        "paths_and_labels_to_dataset",
        "path_to_string_content"
    ],
    "dataset_utils": [
        "index_directory",
        "iter_valid_files",
        "index_subdirectory",
        "get_training_or_validation_split",
        "labels_to_dataset",
        "check_validation_split_arg"
    ],
    "image": [
        "smart_resize",
        "array_to_img",
        "img_to_array",
        "save_img",
        "load_img",
        "Iterator",
        "DirectoryIterator",
        "NumpyArrayIterator",
        "DataFrameIterator",
        "ImageDataGenerator",
        "flow",
        "flow_from_directory",
        "flow_from_dataframe"
    ],
    "sequence": [
        "TimeseriesGenerator",
        "pad_sequences"
    ],
    "timeseries": [
        "timeseries_dataset_from_array",
        "sequences_from_indices"
    ],
    "text": [
        "text_to_word_sequence",
        "one_hot"
    ],
    "image_dataset": [
        "image_dataset_from_directory",
        "paths_and_labels_to_dataset",
        "path_to_image"
    ],
    "keras_image_model_correctness_test": [
        "DistributionStrategyCnnCorrectnessTest",
        "get_model",
        "_get_data",
        "get_data",
        "get_data_with_partial_last_batch_eval",
        "test_cnn_correctness",
        "test_cnn_with_batch_norm_correctness",
        "test_cnn_with_sync_batch_norm_correctness",
        "test_cnn_correctness_with_partial_last_batch_eval",
        "test_cnn_with_batch_norm_correctness_and_partial_last_batch_eval"
    ],
    "keras_utils_test": [
        "Counter",
        "TestDistributionStrategyWithCallbacks",
        "TestDistributionStrategyErrorCases",
        "TestDistributionStrategyWithLossMasking",
        "TestDistributionStrategyWithNormalizationLayer",
        "TestDistributionStrategySaveLoadWeights",
        "TestDistributionStrategyValidation",
        "TestDistributionStrategyWithStaticShapes",
        "wrap_with_counts",
        "test_callbacks_in_fit",
        "test_callbacks_in_eval",
        "test_callbacks_in_predict",
        "test_validating_dataset_input_tensors_with_shape_mismatch",
        "test_validating_dataset_input_tensors_with_dtype_mismatch",
        "test_unsupported_features",
        "test_distribution_strategy_on_subclassed_model",
        "test_distribution_strategy_on_deferred_sequential_model",
        "test_standalone_loss_without_loss_reduction",
        "test_masking",
        "test_batchnorm_correctness",
        "test_save_load_h5",
        "test_save_load_trackable",
        "test_layer_outside_scope",
        "test_model_outside_scope",
        "test_input_batch_size_not_divisible_by_num_replicas",
        "test_static_input_batch_size",
        "_call_and_count",
        "_SimpleMLP",
        "call"
    ],
    "keras_stateful_lstm_model_correctness_test": [
        "strategies_for_stateful_embedding_model",
        "test_combinations_for_stateful_embedding_model",
        "DistributionStrategyStatefulLstmModelCorrectnessTest",
        "get_model",
        "disabled_test_stateful_lstm_model_correctness",
        "test_incorrectly_use_multiple_cores_for_stateful_lstm_model"
    ],
    "keras_embedding_model_correctness_test": [
        "DistributionStrategyEmbeddingModelCorrectnessTest",
        "DistributionStrategySiameseEmbeddingModelCorrectnessTest",
        "get_model",
        "test_embedding_model_correctness",
        "test_embedding_time_distributed_model_correctness",
        "get_model",
        "get_data",
        "test_siamese_embedding_model_correctness",
        "submodel"
    ],
    "distributed_training_utils_v1": [
        "set_weights",
        "unwrap_values",
        "unwrap_output_dict",
        "unwrap_outputs",
        "flatten_per_replica_values",
        "validate_callbacks",
        "validate_distributed_dataset_inputs",
        "validate_per_replica_inputs",
        "validate_all_tensor_types",
        "validate_all_tensor_shapes",
        "_wait_for_variable_initialization",
        "init_restore_or_wait_for_variables",
        "validate_inputs",
        "is_dataset_shape_fully_defined",
        "process_batch_and_step_size",
        "get_input_params",
        "get_batch_dimension",
        "get_iterator",
        "initialize_iterator",
        "_get_input_from_iterator",
        "_prepare_feed_values",
        "is_distributing_by_cloning",
        "_custom_compile_for_predict",
        "_build_network_on_replica",
        "_build_distributed_network",
        "_clone_and_build_model",
        "clone_model_on_replicas",
        "_make_execution_function",
        "_make_execution_function_without_cloning",
        "_make_replica_execution_function",
        "_make_replicated_models_with_cloning",
        "_make_execution_function_with_cloning",
        "_make_graph_execution_function",
        "_make_eager_execution_function",
        "_copy_weights_to_distributed_model",
        "_copy_weights_to_original_model",
        "_per_replica_aggregate_batch",
        "_reset_metrics",
        "get_distributed_model",
        "set_distributed_model",
        "get_distributed_function",
        "set_distributed_function",
        "_generate_cache_key",
        "distributed_scope",
        "is_current_worker_chief",
        "filter_distributed_callbacks",
        "_update_sample_weight_modes",
        "concat_along_batch_dimension",
        "_upcast_low_precision_outputs",
        "_upcast_low_precision_outputs",
        "_per_replica_function",
        "_per_replica_function",
        "distributed_function",
        "execution_function",
        "predict_on_batch"
    ],
    "keras_correctness_test_base": [
        "eager_mode_test_configuration",
        "graph_mode_test_configuration",
        "all_strategy_and_input_config_combinations",
        "all_strategy_and_input_config_combinations_eager",
        "strategy_minus_tpu_and_input_config_combinations_eager",
        "strategies_for_embedding_models",
        "test_combinations_for_embedding_model",
        "test_combinations_with_tpu_strategies_graph",
        "multi_worker_mirrored_eager",
        "multi_worker_mirrored_eager_and_graph",
        "MaybeDistributionScope",
        "batch_wrapper",
        "get_batch_size",
        "get_data_size",
        "get_shapes",
        "get_correctness_test_inputs",
        "fit_eval_and_predict",
        "compare_results",
        "should_skip_tpu_with_eager",
        "LearningRateBatchScheduler",
        "TestDistributionStrategyCorrectnessBase",
        "TestDistributionStrategyEmbeddingModelCorrectnessBase",
        "__enter__",
        "__exit__",
        "_get_compare_result_tolerance",
        "on_batch_begin",
        "set_up_test_config",
        "get_data",
        "get_data_with_partial_last_batch",
        "get_data_with_partial_last_batch_eval",
        "get_input_for_correctness_test",
        "get_model",
        "run_correctness_test",
        "get_input_for_dynamic_lr_test",
        "run_dynamic_lr_test",
        "get_data"
    ],
    "keras_rnn_model_correctness_test": [
        "_DistributionStrategyRnnModelCorrectnessTest",
        "DistributionStrategyGruModelCorrectnessTest",
        "DistributionStrategyLstmModelCorrectnessTest",
        "_get_layer_class",
        "get_model",
        "_get_layer_class",
        "test_gru_model_correctness",
        "_get_layer_class",
        "test_lstm_model_correctness",
        "test_lstm_model_correctness_mixed_precision"
    ],
    "distribute_strategy_test": [
        "simple_sequential_model",
        "simple_subclassed_model",
        "simple_multi_inputs_multi_outputs_model",
        "get_multi_inputs_multi_outputs_data",
        "batch_wrapper",
        "get_model",
        "get_sample_weights_model",
        "get_dataset",
        "get_predict_dataset",
        "convert_numpy_to_dataset_with_unknown_cardinality",
        "multi_input_output_model",
        "strategy_minus_tpu_combinations",
        "tpu_strategy_combinations",
        "tpu_strategy_combinations_graph_only",
        "multi_worker_strategy_combinations_eager_only",
        "all_strategy_combinations",
        "all_strategy_minus_default_and_tpu_combinations",
        "all_strategy_combinations_minus_default",
        "strategy_and_optimizer_combinations",
        "BatchCountingCB",
        "TestDistributionStrategyWithNumpyArrays",
        "TestDistributionStrategyWithDatasets",
        "_is_tpu_strategy",
        "TestDistributionStrategyWithDatasetsFile",
        "TestRegularizerLoss",
        "TestDistributionStrategyWithKerasModels",
        "_functional_with_add_loss_and_metric",
        "_sequential_with_add_loss_and_metric",
        "_functional_with_layer_reuse",
        "TestDistributionStrategyWithMultipleAddLossAndMetricCalls",
        "DeterministicModel",
        "TestModelCapturesStrategy",
        "_SimpleMLP",
        "on_train_batch_begin",
        "on_train_batch_end",
        "on_test_batch_begin",
        "on_test_batch_end",
        "on_predict_batch_begin",
        "on_predict_batch_end",
        "test_calculating_input_params_no_steps_no_batch_size",
        "test_calculating_input_params_with_steps_no_batch_size",
        "test_calculating_input_params_no_steps_with_batch_size",
        "test_calculating_input_params_with_steps_with_batch_size",
        "test_calling_model_with_numpy_arrays",
        "test_calling_model_with_mixed_precision",
        "test_operator_overload_mixed_precision",
        "test_optimizer_in_cross_replica_context_raises_error",
        "test_calling_model_with_nested_numpy_arrays",
        "test_numpy_with_sample_weights",
        "test_flatten_predict_outputs",
        "test_evaluate_with_partial_batch",
        "test_predict_with_partial_batch",
        "test_no_target_model",
        "test_predict_multi_output_model_with_partial_batch",
        "test_gradients_are_none",
        "test_calling_model_on_same_dataset",
        "test_model_interleaved_eval_same_as_direct_eval",
        "test_fit_with_tuple_and_dict_dataset_inputs",
        "test_fit_with_dictionary_in_the_dataset_b135161171",
        "test_fit_eval_and_predict_methods_on_dataset_without_steps",
        "test_predict_on_dataset_with_unknown_cardinality_without_steps",
        "test_on_dataset_with_unknown_cardinality_without_steps",
        "test_on_dataset_with_unknown_cardinality",
        "test_fit_eval_and_predict_methods_on_dataset",
        "test_fit_eval_and_predict_with_optimizer",
        "test_dataset_wrong_input_shape",
        "test_dataset_external_batch_input_validation",
        "test_learning_phase_value",
        "testOptimizerWithCallbacks",
        "test_evaluate_with_dataset_with_partial_batch",
        "test_predict_with_dataset_with_partial_batch",
        "test_predict_multi_output_model_with_dataset_with_partial_batch",
        "test_match_model_input_matches_with_dataset_tensors",
        "test_dataset_with_sample_weights",
        "setUp",
        "test_predict_on_dataset_shard_options_file_multi_worker_mirrored",
        "IdentityRegularizer",
        "AddLayer",
        "loss_fn",
        "test_regularizer_loss",
        "test_distribution_strategy_on_sequential_model",
        "test_distribution_strategy_on_functional_model",
        "test_distributed_dataset",
        "test_distributed_datasets_from_function",
        "test_host_training_loop",
        "test_host_training_loop_last_partial_execution",
        "test_host_training_loop_dataset_unknown_size",
        "test_host_training_loop_truncate_to_epoch",
        "test_gradient_clipping",
        "test_custom_gradient_transformation",
        "test_distribution_strategy_one_dimensional",
        "test_distribution_strategy_with_loss_reduction_types",
        "test_distribution_strategy_with_symbolic_add_loss",
        "DISABLED_test_distribution_strategy_with_callable_add_loss",
        "test_distribution_strategy_with_add_metric_in_call",
        "test_distribution_strategy_with_add_metric_object",
        "test_distribution_strategy_with_add_metric_outside_call",
        "test_sparse_tensor_outputs",
        "test_ragged_tensor_outputs",
        "test_correctness_of_add_loss_with_merge_call",
        "test_unimplemented_parameter_server_strategy",
        "test_fit_and_evaluate",
        "build",
        "call",
        "test_fit_and_evaluate",
        "call",
        "MyLayer",
        "DenseWithExtraWeight",
        "custom_loss",
        "_create_model_input_output_tensors",
        "__call__",
        "build",
        "call",
        "MyLayer",
        "MyLayer",
        "custom_transform",
        "_get_model",
        "_make_model_with_add_loss",
        "_make_model",
        "Bias",
        "_make_model_with_add_metric",
        "Bias",
        "_make_model_with_add_metric_object",
        "_make_model_with_add_metric",
        "ToSparse",
        "ToRagged",
        "_get_model",
        "_get_data",
        "build",
        "call",
        "run_fn",
        "MyLayer",
        "build",
        "schedule",
        "CBCounter",
        "CBCounter",
        "make_dataset",
        "build",
        "call",
        "build",
        "call",
        "build",
        "call",
        "build",
        "call",
        "call",
        "call",
        "train_step",
        "call",
        "map_fn",
        "map_fn",
        "on_epoch_end",
        "on_train_batch_end",
        "on_test_batch_end",
        "on_epoch_end",
        "on_train_batch_end",
        "on_test_batch_end",
        "step_fn"
    ],
    "distributed_training_utils": [
        "is_tpu_strategy",
        "global_batch_size_supported",
        "call_replica_local_fn"
    ],
    "saved_model_test_base": [
        "is_tpu_strategy",
        "get_tolerance",
        "simple_models_with_strategies",
        "simple_models_with_strategy_pairs",
        "tfmodule_models_with_strategies",
        "tfmodule_models_with_strategy_pairs",
        "load_and_run_with_saved_model_api",
        "TestSavedModelBase",
        "setUp",
        "_save_model",
        "_load_and_run_model",
        "_train_model",
        "_predict_with_model",
        "_get_predict_dataset",
        "run_test_save_no_strategy_restore_strategy",
        "run_test_save_strategy_restore_no_strategy",
        "run_test_save_strategy_restore_strategy",
        "run_test_save_strategy"
    ],
    "worker_training_state": [
        "WorkerTrainingState",
        "back_up",
        "restore",
        "delete_backup",
        "maybe_load_initial_epoch_from_ckpt"
    ],
    "simple_models": [
        "_get_data_for_simple_models",
        "SimpleFunctionalModel",
        "SimpleSequentialModel",
        "_SimpleModel",
        "SimpleSubclassModel",
        "_SimpleModule",
        "SimpleTFModuleModel",
        "get_model",
        "get_data",
        "get_batch_size",
        "get_model",
        "get_data",
        "get_batch_size",
        "call",
        "get_model",
        "get_data",
        "get_batch_size",
        "__call__",
        "get_model",
        "get_data",
        "get_batch_size"
    ],
    "optimizer_combinations": [
        "distributions_and_v1_optimizers",
        "distributions_and_v2_optimizers",
        "distributions_and_v1_and_v2_optimizers"
    ],
    "keras_dnn_correctness_test": [
        "all_strategy_combinations_with_eager_and_graph_modes",
        "all_strategy_combinations_with_graph_mode",
        "is_default_strategy",
        "TestDistributionStrategyDnnCorrectness",
        "TestDistributionStrategyDnnMetricCorrectness",
        "TestDistributionStrategyDnnMetricEvalCorrectness",
        "SubclassedModel",
        "TestDistributionStrategyDnnCorrectnessWithSubclassedModel",
        "get_model",
        "get_data",
        "get_data_with_partial_last_batch",
        "get_data_with_partial_last_batch_eval",
        "test_dnn_correctness",
        "test_dnn_correctness_with_partial_last_batch_eval",
        "test_dnn_correctness_with_partial_last_batch",
        "test_dnn_with_dynamic_learning_rate",
        "get_model",
        "run_metric_correctness_test",
        "test_simple_dnn_metric_correctness",
        "get_model",
        "run_eval_metrics_correctness_test",
        "test_identity_model_metric_eval_correctness",
        "call",
        "get_model",
        "test_dnn_correctness",
        "test_dnn_with_dynamic_learning_rate",
        "test_dnn_correctness_with_partial_last_batch_eval"
    ],
    "multi_worker_testing_utils": [
        "mnist_synthetic_dataset",
        "get_mnist_model"
    ],
    "model_collection_base": [
        "ModelAndInput",
        "get_model",
        "get_data",
        "get_batch_size"
    ],
    "model_subclassing_test_util": [
        "SimpleConvTestModel",
        "get_multi_io_subclass_model",
        "NestedTestModel1",
        "NestedTestModel2",
        "get_nested_model_3",
        "CustomCallModel",
        "TrainingNoDefaultModel",
        "TrainingMaskingModel",
        "call",
        "call",
        "get_functional_graph_model",
        "call",
        "Inner",
        "call",
        "call",
        "call",
        "call"
    ],
    "model_architectures": [
        "basic_sequential",
        "basic_sequential_deferred",
        "stacked_rnn",
        "lstm",
        "multi_input_multi_output",
        "nested_sequential_in_functional",
        "seq_to_seq",
        "shared_layer_functional",
        "shared_sequential",
        "MySubclassModel",
        "nested_subclassed_model",
        "nested_subclassed_in_functional_model",
        "nested_functional_in_subclassed_model",
        "shared_layer_subclassed_model",
        "functional_with_keyword_args",
        "get_models",
        "call",
        "get_config",
        "from_config",
        "NestedSubclassModel",
        "get_functional_model",
        "NestedFunctionalInSubclassModel",
        "SharedLayerSubclassModel",
        "call",
        "call",
        "call"
    ],
    "initializers_v1": [
        "RandomNormal",
        "RandomUniform",
        "TruncatedNormal",
        "LecunNormal",
        "LecunUniform",
        "HeNormal",
        "HeUniform",
        "get_config",
        "get_config",
        "get_config",
        "get_config"
    ],
    "initializers_v2": [
        "Initializer",
        "Zeros",
        "Ones",
        "Constant",
        "RandomUniform",
        "RandomNormal",
        "TruncatedNormal",
        "VarianceScaling",
        "Orthogonal",
        "Identity",
        "GlorotUniform",
        "GlorotNormal",
        "LecunNormal",
        "LecunUniform",
        "HeNormal",
        "HeUniform",
        "_get_dtype",
        "__call__",
        "get_config",
        "from_config",
        "__call__",
        "__call__",
        "__call__",
        "get_config",
        "__call__",
        "__call__",
        "__call__",
        "__call__",
        "__call__",
        "__call__",
        "get_config",
        "get_config",
        "get_config",
        "get_config",
        "get_config",
        "get_config"
    ],
    "base": [
        "CheckpointInitialValueCallable",
        "CheckpointInitialValue",
        "NoRestoreSaveable",
        "PythonStateSaveable",
        "PythonStringStateSaveable",
        "CheckpointPosition",
        "no_automatic_dependency_tracking",
        "no_manual_dependency_tracking_scope",
        "no_automatic_dependency_tracking_scope",
        "Trackable",
        "checkpoint_position",
        "__call__",
        "restore_uid",
        "__getattr__",
        "checkpoint_position",
        "restore",
        "feed_dict_additions",
        "freeze",
        "optional_restore",
        "feed_dict_additions",
        "freeze",
        "python_restore",
        "restore",
        "restore",
        "bind_object",
        "is_simple_variable",
        "value_tensors",
        "gather_ops_or_named_saveables",
        "restore_ops",
        "checkpoint",
        "trackable",
        "object_proto",
        "restore_uid",
        "__repr__",
        "_method_wrapper",
        "_setattr_tracking",
        "_setattr_tracking",
        "_update_uid",
        "_update_uid",
        "_unconditional_checkpoint_dependencies",
        "_unconditional_dependency_names",
        "_name_based_restores",
        "_maybe_initialize_trackable",
        "_object_identifier",
        "_tracking_metadata",
        "_no_dependency",
        "_name_based_attribute_restore",
        "_checkpoint_dependencies",
        "_deferred_dependencies",
        "_lookup_dependency",
        "_add_variable_with_custom_getter",
        "_preload_simple_restoration",
        "_track_trackable",
        "_handle_deferred_dependencies",
        "_restore_from_checkpoint_position",
        "_single_restoration_from_checkpoint_position",
        "_gather_saveables_for_checkpoint",
        "_list_extra_dependencies_for_serialization",
        "_list_functions_for_serialization",
        "_map_resources",
        "_state_callback_wrapper",
        "_constant_state"
    ],
    "convolutional": [
        "Conv",
        "Conv1D",
        "Conv2D",
        "Conv3D",
        "Conv1DTranspose",
        "Conv2DTranspose",
        "Conv3DTranspose",
        "SeparableConv",
        "SeparableConv1D",
        "SeparableConv2D",
        "DepthwiseConv2D",
        "UpSampling1D",
        "UpSampling2D",
        "UpSampling3D",
        "ZeroPadding1D",
        "ZeroPadding2D",
        "ZeroPadding3D",
        "Cropping1D",
        "Cropping2D",
        "Cropping3D",
        "_validate_init",
        "build",
        "call",
        "_spatial_output_shape",
        "compute_output_shape",
        "_recreate_conv_op",
        "get_config",
        "_compute_causal_padding",
        "_get_channel_axis",
        "_get_input_channel",
        "_get_padding_op",
        "build",
        "call",
        "compute_output_shape",
        "get_config",
        "build",
        "call",
        "compute_output_shape",
        "get_config",
        "build",
        "call",
        "compute_output_shape",
        "get_config",
        "build",
        "call",
        "get_config",
        "call",
        "call",
        "build",
        "call",
        "compute_output_shape",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "_apply_fn"
    ],
    "pooling": [
        "Pooling1D",
        "MaxPooling1D",
        "AveragePooling1D",
        "Pooling2D",
        "MaxPooling2D",
        "AveragePooling2D",
        "Pooling3D",
        "MaxPooling3D",
        "AveragePooling3D",
        "GlobalPooling1D",
        "GlobalAveragePooling1D",
        "GlobalMaxPooling1D",
        "GlobalPooling2D",
        "GlobalAveragePooling2D",
        "GlobalMaxPooling2D",
        "GlobalPooling3D",
        "GlobalAveragePooling3D",
        "GlobalMaxPooling3D",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "call",
        "compute_mask",
        "call",
        "compute_output_shape",
        "call",
        "get_config",
        "call",
        "call",
        "compute_output_shape",
        "call",
        "get_config",
        "call",
        "call"
    ],
    "normalization": [
        "convert_to_ndarray",
        "Normalization",
        "_NormalizingCombiner",
        "build",
        "call",
        "compute_output_shape",
        "compute_output_signature",
        "get_config",
        "set_weights",
        "compute",
        "add_data_to_accumulator",
        "merge",
        "extract",
        "restore",
        "serialize",
        "deserialize",
        "_create_accumulator",
        "variance_contribution"
    ],
    "fashion_mnist": [
        "load_data"
    ],
    "mnist": [
        "load_data"
    ],
    "cifar": [
        "load_batch"
    ],
    "imdb": [
        "load_data",
        "get_word_index"
    ],
    "cifar10": [
        "load_data"
    ],
    "boston_housing": [
        "load_data"
    ],
    "cifar100": [
        "load_data"
    ],
    "reuters": [
        "load_data",
        "get_word_index"
    ],
    "tf_utils": [
        "is_tensor_or_tensor_list",
        "get_reachable_from_inputs",
        "map_structure_with_atomic",
        "get_shapes",
        "convert_shapes",
        "ListWrapper",
        "convert_inner_node_data",
        "shape_type_conversion",
        "are_all_symbolic_tensors",
        "is_extension_type",
        "is_symbolic_tensor",
        "register_symbolic_tensor_type",
        "type_spec_from_value",
        "is_ragged",
        "is_tensor_or_variable",
        "assert_no_legacy_layers",
        "maybe_init_scope",
        "graph_context_for_symbolic_tensors",
        "dataset_is_infinite",
        "get_tensor_spec",
        "to_numpy_or_python_type",
        "_astuple",
        "_is_shape_component",
        "_is_atomic_shape",
        "_convert_shape",
        "as_list",
        "_is_serialized_node_data",
        "_is_atomic_nested",
        "_convert_object_or_list",
        "wrapper",
        "_to_single_numpy_or_python_type"
    ],
    "conv_utils": [
        "convert_data_format",
        "normalize_tuple",
        "conv_output_length",
        "conv_input_length",
        "deconv_output_length",
        "normalize_data_format",
        "normalize_padding",
        "conv_kernel_mask",
        "conv_kernel_idxs",
        "conv_connected_inputs",
        "conv_output_shape"
    ],
    "metrics_utils": [
        "Reduction",
        "update_state_wrapper",
        "result_wrapper",
        "weakmethod",
        "assert_thresholds_range",
        "parse_init_thresholds",
        "ConfusionMatrix",
        "AUCCurve",
        "AUCSummationMethod",
        "update_confusion_matrix_variables",
        "_filter_top_k",
        "ragged_assert_compatible_and_get_flat_values",
        "decorated",
        "decorated",
        "inner",
        "from_str",
        "from_str",
        "weighted_assign_add",
        "merge_fn_wrapper"
    ],
    "data_utils": [
        "is_generator_or_sequence",
        "_extract_archive",
        "get_file",
        "_makedirs_exist_ok",
        "_hash_file",
        "validate_file",
        "ThreadsafeIter",
        "threadsafe_generator",
        "Sequence",
        "iter_sequence_infinite",
        "dont_use_multiprocessing_pool",
        "get_pool_class",
        "get_worker_id_queue",
        "init_pool",
        "get_index",
        "SequenceEnqueuer",
        "OrderedEnqueuer",
        "init_pool_generator",
        "next_sample",
        "GeneratorEnqueuer",
        "urlretrieve",
        "__iter__",
        "next",
        "__next__",
        "g",
        "__getitem__",
        "__len__",
        "on_epoch_end",
        "__iter__",
        "wrapped",
        "is_running",
        "start",
        "_send_sequence",
        "stop",
        "__del__",
        "_run",
        "_get_executor_init",
        "get",
        "_get_executor_init",
        "_wait_queue",
        "_run",
        "get",
        "_get_executor_init",
        "_run",
        "get",
        "chunk_read",
        "ProgressTracker",
        "dl_progress",
        "pool_fn",
        "pool_fn"
    ],
    "vis_utils": [
        "check_pydot",
        "is_wrapped_model",
        "add_edge",
        "model_to_dot",
        "plot_model",
        "format_dtype",
        "format_shape"
    ],
    "version_utils": [
        "ModelVersionSelector",
        "LayerVersionSelector",
        "TensorBoardVersionSelector",
        "should_use_v2",
        "swap_class",
        "disallow_legacy_graph",
        "is_v1_layer_or_model",
        "__new__",
        "__new__",
        "__new__"
    ],
    "losses_utils": [
        "remove_squeezable_dimensions",
        "squeeze_or_expand_dimensions",
        "_safe_mean",
        "_num_elements",
        "reduce_weighted_loss",
        "compute_weighted_loss",
        "scale_loss_for_distribution",
        "cast_losses_to_common_dtype",
        "_maybe_expand_weights",
        "_maybe_adjust_weights"
    ],
    "generic_utils": [
        "CustomObjectScope",
        "get_custom_objects",
        "serialize_keras_class_and_config",
        "register_keras_serializable",
        "get_registered_name",
        "skip_failed_serialization",
        "get_registered_object",
        "serialize_keras_object",
        "get_custom_objects_by_name",
        "class_and_config_for_serialized_keras_object",
        "deserialize_keras_object",
        "func_dump",
        "func_load",
        "has_arg",
        "Progbar",
        "make_batches",
        "slice_arrays",
        "to_list",
        "to_snake_case",
        "is_all_none",
        "check_for_unexpected_keys",
        "validate_kwargs",
        "validate_config",
        "default",
        "is_default",
        "populate_dict_with_module_objects",
        "LazyLoader",
        "__enter__",
        "__exit__",
        "decorator",
        "ensure_value_to_cell",
        "update",
        "add",
        "_estimate_step_duration",
        "_load",
        "__getattr__",
        "dummy_fn"
    ],
    "multi_gpu_utils": [
        "_get_available_devices",
        "_normalize_device_name",
        "multi_gpu_model",
        "get_slice"
    ],
    "kernelized_utils": [
        "_to_matrix",
        "_align_matrices",
        "inner_product",
        "exact_gaussian_kernel",
        "exact_laplacian_kernel"
    ],
    "layer_utils": [
        "is_layer",
        "has_weights",
        "invalidate_recursive_cache",
        "MutationSentinel",
        "AttributeSentinel",
        "filter_empty_layer_containers",
        "gather_trainable_weights",
        "gather_non_trainable_weights",
        "outer",
        "mark_as",
        "in_cached_state",
        "__repr__",
        "add_parent",
        "get",
        "_set",
        "mark_cached",
        "invalidate",
        "invalidate_all",
        "wrapped"
    ],
    "io_utils": [
        "path_to_string",
        "ask_to_proceed_with_overwrite",
        "_path_to_string",
        "_path_to_string",
        "_path_to_string"
    ],
    "np_utils": [
        "_canonicalize_axis",
        "_canonicalize_axes",
        "_supports_signature",
        "_to_tf_type",
        "_to_numpy_type",
        "isscalar",
        "_has_docstring",
        "_add_blank_line",
        "_np_signature",
        "_is_compatible_param_kind",
        "_prepare_np_fun_name_and_fun",
        "_np_doc_helper",
        "get_np_doc_form",
        "set_np_doc_form",
        "Link",
        "AliasOf",
        "NoLink",
        "generate_link",
        "is_check_link",
        "set_check_link",
        "_add_np_doc",
        "is_sig_mismatch_an_error",
        "set_is_sig_mismatch_an_error",
        "np_doc",
        "np_doc_only",
        "finfo",
        "_maybe_get_dtype",
        "result_type",
        "_result_type_binary",
        "promote_types",
        "tf_broadcast",
        "get_static_value",
        "_maybe_static",
        "cond",
        "add",
        "subtract",
        "greater",
        "greater_equal",
        "less_equal",
        "logical_and",
        "logical_or",
        "getitem",
        "reduce_all",
        "reduce_any",
        "tf_rank",
        "names_from_num",
        "relax",
        "decorator",
        "decorator"
    ],
    "base_feature_layer": [
        "_BaseFeaturesLayer",
        "build",
        "_output_shape",
        "compute_output_shape",
        "_process_dense_tensor",
        "_verify_and_concat_tensors",
        "get_config",
        "from_config"
    ],
    "dense_features_v2": [
        "DenseFeatures",
        "build"
    ],
    "dense_features": [
        "DenseFeatures",
        "_is_feature_layer",
        "_tracking_metadata",
        "_target_shape",
        "call"
    ],
    "scikit_learn": [
        "BaseWrapper",
        "KerasClassifier",
        "KerasRegressor",
        "check_params",
        "get_params",
        "set_params",
        "fit",
        "filter_sk_params",
        "fit",
        "predict",
        "predict_proba",
        "score",
        "predict",
        "score"
    ],
    "wide_deep": [
        "WideDeepModel",
        "call",
        "train_step",
        "_make_train_function",
        "get_config",
        "from_config"
    ],
    "linear": [
        "LinearModel",
        "build",
        "call",
        "get_config",
        "from_config"
    ],
    "distribution_util": [
        "_collective_communication",
        "_mirrored_cross_device_ops",
        "get_distribution_strategy",
        "configure_cluster",
        "get_strategy_scope",
        "DummyContextManager",
        "__enter__",
        "__exit__"
    ],
    "benchmark_util": [
        "TimerCallBack",
        "measure_performance",
        "on_epoch_begin",
        "on_epoch_end",
        "on_batch_end"
    ],
    "saving_utils": [
        "extract_model_metrics",
        "model_input_signature",
        "raise_model_input_error",
        "trace_model_call",
        "model_metadata",
        "should_overwrite",
        "compile_args_from_training_config",
        "_deserialize_nested_config",
        "_serialize_nested_config",
        "_deserialize_metric",
        "_enforce_names_consistency",
        "try_build_compiled_arguments",
        "_wrapped_model",
        "_is_single_object",
        "_serialize_fn",
        "_has_name",
        "_clear_name"
    ],
    "saved_model_experimental": [
        "export_saved_model",
        "_export_model_json",
        "_export_model_variables",
        "_save_v1_format",
        "_get_var_list",
        "create_placeholder",
        "_export_mode",
        "_create_signature_def_map",
        "_assert_same_non_optimizer_objects",
        "load_from_saved_model"
    ],
    "model_config": [
        "model_from_config",
        "model_from_yaml",
        "model_from_json"
    ],
    "hdf5_format": [
        "save_model_to_hdf5",
        "load_model_from_hdf5",
        "preprocess_weights_for_loading",
        "_convert_rnn_weights",
        "save_optimizer_weights_to_hdf5_group",
        "load_optimizer_weights_from_hdf5_group",
        "save_weights_to_hdf5_group",
        "load_weights_from_hdf5_group",
        "load_weights_from_hdf5_group_by_name",
        "save_attributes_to_hdf5_group",
        "load_attributes_from_hdf5_group",
        "_legacy_weights",
        "convert_nested_bidirectional",
        "convert_nested_time_distributed",
        "convert_nested_model",
        "transform_kernels",
        "transpose_input",
        "transform",
        "convert_lstm_weights",
        "convert_gru_weights"
    ],
    "densenet": [
        "dense_block",
        "transition_block",
        "conv_block",
        "DenseNet",
        "DenseNet121",
        "DenseNet169",
        "DenseNet201",
        "preprocess_input",
        "decode_predictions"
    ],
    "mobilenet": [
        "MobileNet",
        "_conv_block",
        "_depthwise_conv_block",
        "preprocess_input",
        "decode_predictions"
    ],
    "xception": [
        "Xception",
        "preprocess_input",
        "decode_predictions"
    ],
    "vgg16": [
        "VGG16",
        "preprocess_input",
        "decode_predictions"
    ],
    "mobilenet_v3": [
        "MobileNetV3",
        "MobileNetV3Small",
        "MobileNetV3Large",
        "relu",
        "hard_sigmoid",
        "hard_swish",
        "_depth",
        "_se_block",
        "_inverted_res_block",
        "preprocess_input",
        "decode_predictions",
        "stack_fn",
        "stack_fn",
        "depth",
        "depth"
    ],
    "vgg19": [
        "VGG19",
        "preprocess_input",
        "decode_predictions"
    ],
    "resnet": [
        "ResNet",
        "block1",
        "stack1",
        "block2",
        "stack2",
        "block3",
        "stack3",
        "ResNet50",
        "ResNet101",
        "ResNet152",
        "preprocess_input",
        "decode_predictions",
        "stack_fn",
        "stack_fn",
        "stack_fn"
    ],
    "imagenet_utils": [
        "preprocess_input",
        "decode_predictions",
        "_preprocess_numpy_input",
        "_preprocess_symbolic_input",
        "obtain_input_shape",
        "correct_pad",
        "validate_activation"
    ],
    "efficientnet": [
        "EfficientNet",
        "block",
        "EfficientNetB0",
        "EfficientNetB1",
        "EfficientNetB2",
        "EfficientNetB3",
        "EfficientNetB4",
        "EfficientNetB5",
        "EfficientNetB6",
        "EfficientNetB7",
        "preprocess_input",
        "decode_predictions",
        "round_filters",
        "round_repeats"
    ],
    "nasnet": [
        "NASNet",
        "NASNetMobile",
        "NASNetLarge",
        "_separable_conv_block",
        "_adjust_block",
        "_normal_a_cell",
        "_reduction_a_cell",
        "preprocess_input",
        "decode_predictions"
    ],
    "mobilenet_v2": [
        "MobileNetV2",
        "_inverted_res_block",
        "_make_divisible",
        "preprocess_input",
        "decode_predictions"
    ],
    "inception_v3": [
        "InceptionV3",
        "conv2d_bn",
        "preprocess_input",
        "decode_predictions"
    ],
    "inception_resnet_v2": [
        "InceptionResNetV2",
        "conv2d_bn",
        "inception_resnet_block",
        "preprocess_input",
        "decode_predictions"
    ],
    "resnet_v2": [
        "ResNet50V2",
        "ResNet101V2",
        "ResNet152V2",
        "preprocess_input",
        "decode_predictions",
        "stack_fn",
        "stack_fn",
        "stack_fn"
    ],
    "einsum_dense": [
        "EinsumDense",
        "_analyze_einsum_string",
        "_analyze_split_string",
        "build",
        "compute_output_shape",
        "get_config",
        "call"
    ],
    "kernelized": [
        "RandomFourierFeatures",
        "_get_random_features_initializer",
        "_get_default_scale",
        "build",
        "call",
        "compute_output_shape",
        "get_config",
        "_get_cauchy_samples"
    ],
    "multi_head_attention": [
        "_build_attention_equation",
        "_build_proj_equation",
        "_get_output_shape",
        "MultiHeadAttention",
        "get_config",
        "_build_from_signature",
        "_build_attention",
        "_masked_softmax",
        "_compute_attention",
        "call"
    ],
    "wrappers": [
        "Wrapper",
        "TimeDistributed",
        "Bidirectional",
        "build",
        "activity_regularizer",
        "get_config",
        "from_config",
        "_get_shape_tuple",
        "build",
        "compute_output_shape",
        "call",
        "compute_mask",
        "_verify_layer_config",
        "_recreate_layer_from_config",
        "compute_output_shape",
        "__call__",
        "call",
        "reset_states",
        "build",
        "compute_mask",
        "constraints",
        "get_config",
        "from_config",
        "force_zero_output_for_mask",
        "step"
    ],
    "rnn_cell_wrapper_v2": [
        "_RNNCellWrapperV2",
        "DropoutWrapper",
        "ResidualWrapper",
        "DeviceWrapper",
        "call",
        "build",
        "get_config",
        "from_config"
    ],
    "recurrent_v2": [
        "_use_new_code",
        "_DefunWrapper",
        "GRUCell",
        "GRU",
        "standard_gru",
        "gpu_gru",
        "gru_with_backend_selection",
        "LSTMCell",
        "LSTM",
        "_canonical_to_params",
        "standard_lstm",
        "gpu_lstm",
        "lstm_with_backend_selection",
        "is_sequence_right_padded",
        "has_fully_masked_sequence",
        "is_cudnn_supported_inputs",
        "calculate_sequence_by_mask",
        "_generate_defun_backend",
        "_get_context_device_type",
        "_runtime",
        "_read_variable_value",
        "__deepcopy__",
        "build",
        "call",
        "_defun_gru_call",
        "step",
        "gpu_gru_with_fallback",
        "call",
        "convert",
        "step",
        "gpu_lstm_with_fallback",
        "cudnn_gru_fn",
        "standard_gru_fn",
        "cudnn_lstm_fn",
        "stardard_lstm_fn",
        "step",
        "step"
    ],
    "normalization_v2": [
        "SyncBatchNormalization",
        "BatchNormalization",
        "_calculate_mean_and_var"
    ],
    "merge": [
        "_Merge",
        "Add",
        "Subtract",
        "Multiply",
        "Average",
        "Maximum",
        "Minimum",
        "Concatenate",
        "Dot",
        "add",
        "subtract",
        "multiply",
        "average",
        "maximum",
        "minimum",
        "concatenate",
        "dot",
        "_merge_function",
        "_compute_elemwise_op_output_shape",
        "build",
        "call",
        "compute_output_shape",
        "compute_mask",
        "_merge_function",
        "build",
        "_merge_function",
        "_merge_function",
        "_merge_function",
        "_merge_function",
        "_merge_function",
        "build",
        "_merge_function",
        "compute_output_shape",
        "compute_mask",
        "get_config",
        "build",
        "_merge_function",
        "compute_output_shape",
        "compute_mask",
        "get_config"
    ],
    "local": [
        "LocallyConnected1D",
        "LocallyConnected2D",
        "get_locallyconnected_mask",
        "local_conv_matmul",
        "local_conv_sparse_matmul",
        "make_2d",
        "build",
        "compute_output_shape",
        "call",
        "get_config",
        "build",
        "compute_output_shape",
        "call",
        "get_config"
    ],
    "dense_attention": [
        "BaseDenseAttention",
        "Attention",
        "AdditiveAttention",
        "_lower_triangular_mask",
        "_merge_masks",
        "_calculate_scores",
        "_apply_scores",
        "call",
        "compute_mask",
        "_validate_call_args",
        "get_config",
        "build",
        "_calculate_scores",
        "get_config",
        "build",
        "_calculate_scores",
        "get_config",
        "dropped_weights"
    ],
    "noise": [
        "GaussianNoise",
        "GaussianDropout",
        "AlphaDropout",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "_get_noise_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "noised",
        "noised",
        "dropped_inputs"
    ],
    "recurrent": [
        "StackedRNNCells",
        "RNN",
        "AbstractRNNCell",
        "DropoutRNNCellMixin",
        "SimpleRNNCell",
        "SimpleRNN",
        "GRUCell",
        "GRU",
        "LSTMCell",
        "PeepholeLSTMCell",
        "LSTM",
        "_generate_dropout_mask",
        "_standardize_args",
        "_is_multiple_state",
        "_generate_zero_filled_state_for_cell",
        "_generate_zero_filled_state",
        "_caching_device",
        "_config_for_enable_caching_device",
        "state_size",
        "output_size",
        "get_initial_state",
        "call",
        "build",
        "get_config",
        "from_config",
        "states",
        "states",
        "compute_output_shape",
        "compute_mask",
        "build",
        "_validate_state_spec",
        "get_initial_state",
        "__call__",
        "call",
        "_process_inputs",
        "_validate_args_if_ragged",
        "_maybe_reset_cell_dropout_mask",
        "reset_states",
        "get_config",
        "from_config",
        "_trackable_saved_model_saver",
        "call",
        "state_size",
        "output_size",
        "get_initial_state",
        "_create_non_trackable_mask_cache",
        "reset_dropout_mask",
        "reset_recurrent_dropout_mask",
        "_create_dropout_mask",
        "_create_recurrent_dropout_mask",
        "get_dropout_mask_for_cell",
        "get_recurrent_dropout_mask_for_cell",
        "__getstate__",
        "__setstate__",
        "build",
        "call",
        "get_initial_state",
        "get_config",
        "call",
        "units",
        "activation",
        "use_bias",
        "kernel_initializer",
        "recurrent_initializer",
        "bias_initializer",
        "kernel_regularizer",
        "recurrent_regularizer",
        "bias_regularizer",
        "kernel_constraint",
        "recurrent_constraint",
        "bias_constraint",
        "dropout",
        "recurrent_dropout",
        "get_config",
        "from_config",
        "build",
        "call",
        "get_config",
        "get_initial_state",
        "call",
        "units",
        "activation",
        "recurrent_activation",
        "use_bias",
        "kernel_initializer",
        "recurrent_initializer",
        "bias_initializer",
        "kernel_regularizer",
        "recurrent_regularizer",
        "bias_regularizer",
        "kernel_constraint",
        "recurrent_constraint",
        "bias_constraint",
        "dropout",
        "recurrent_dropout",
        "implementation",
        "reset_after",
        "get_config",
        "from_config",
        "build",
        "_compute_carry_and_output",
        "_compute_carry_and_output_fused",
        "call",
        "get_config",
        "get_initial_state",
        "build",
        "_compute_carry_and_output",
        "_compute_carry_and_output_fused",
        "call",
        "units",
        "activation",
        "recurrent_activation",
        "use_bias",
        "kernel_initializer",
        "recurrent_initializer",
        "bias_initializer",
        "unit_forget_bias",
        "kernel_regularizer",
        "recurrent_regularizer",
        "bias_regularizer",
        "kernel_constraint",
        "recurrent_constraint",
        "bias_constraint",
        "dropout",
        "recurrent_dropout",
        "implementation",
        "get_config",
        "from_config",
        "dropped_inputs",
        "to_list_or_none",
        "create_zeros",
        "_get_output_shape",
        "get_input_spec",
        "get_step_input_shape",
        "_get_state_shape",
        "step",
        "step",
        "bias_initializer"
    ],
    "advanced_activations": [
        "LeakyReLU",
        "PReLU",
        "ELU",
        "ThresholdedReLU",
        "_large_compatible_negative",
        "Softmax",
        "ReLU",
        "call",
        "get_config",
        "compute_output_shape",
        "build",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape",
        "call",
        "get_config",
        "compute_output_shape"
    ],
    "embeddings": [
        "Embedding",
        "build",
        "compute_mask",
        "compute_output_shape",
        "call",
        "get_config"
    ],
    "cudnn_recurrent": [
        "_CuDNNRNN",
        "CuDNNGRU",
        "CuDNNLSTM",
        "call",
        "get_config",
        "from_config",
        "trainable_weights",
        "non_trainable_weights",
        "losses",
        "get_losses_for",
        "cell",
        "build",
        "_process_batch",
        "get_config",
        "cell",
        "build",
        "_process_batch",
        "get_config",
        "bias_initializer"
    ],
    "convolutional_recurrent": [
        "ConvRNN2D",
        "ConvLSTM2DCell",
        "ConvLSTM2D",
        "compute_output_shape",
        "build",
        "get_initial_state",
        "call",
        "reset_states",
        "build",
        "call",
        "input_conv",
        "recurrent_conv",
        "get_config",
        "call",
        "filters",
        "kernel_size",
        "strides",
        "padding",
        "data_format",
        "dilation_rate",
        "activation",
        "recurrent_activation",
        "use_bias",
        "kernel_initializer",
        "recurrent_initializer",
        "bias_initializer",
        "unit_forget_bias",
        "kernel_regularizer",
        "recurrent_regularizer",
        "bias_regularizer",
        "kernel_constraint",
        "recurrent_constraint",
        "bias_constraint",
        "dropout",
        "recurrent_dropout",
        "get_config",
        "from_config",
        "get_tuple_shape",
        "step",
        "step",
        "bias_initializer"
    ],
    "autocast_variable": [
        "AutoCastVariable",
        "create_autocast_variable",
        "enable_auto_cast_variables",
        "_should_cast",
        "dtype",
        "true_dtype",
        "_cast_dtype",
        "value",
        "read_value",
        "sparse_read",
        "gather_nd",
        "__getattr__",
        "_dense_var_to_tensor",
        "_should_act_as_resource_variable",
        "__repr__",
        "set_shape",
        "trainable",
        "synchronization",
        "aggregation",
        "eval",
        "initialized_value",
        "initial_value",
        "constraint",
        "_apply_assign_update",
        "_apply_update",
        "assign",
        "assign_add",
        "assign_sub",
        "scatter_sub",
        "scatter_add",
        "scatter_max",
        "scatter_min",
        "scatter_mul",
        "scatter_div",
        "scatter_update",
        "batch_scatter_update",
        "scatter_nd_sub",
        "scatter_nd_add",
        "scatter_nd_update",
        "load",
        "name",
        "_shared_name",
        "initializer",
        "device",
        "op",
        "_as_graph_element",
        "graph",
        "shape",
        "get_shape",
        "_gather_saveables_for_checkpoint",
        "_map_resources",
        "to_proto",
        "from_proto",
        "_handle_name",
        "_handle_name",
        "_initializer_op",
        "_initializer_op",
        "__add__",
        "__radd__",
        "__sub__",
        "__rsub__",
        "__mul__",
        "__rmul__",
        "__truediv__",
        "__rtruediv__",
        "__floordiv__",
        "__rfloordiv__",
        "__mod__",
        "__rmod__",
        "__lt__",
        "__le__",
        "__gt__",
        "__ge__",
        "__getitem__",
        "__pow__",
        "__rpow__",
        "__neg__",
        "__abs__",
        "__div__",
        "__rdiv__",
        "__matmul__",
        "__rmatmul__",
        "AutoCastDistributedVariable",
        "__enter__",
        "__exit__",
        "__repr__"
    ],
    "loss_scale": [
        "LossScale",
        "FixedLossScale",
        "_is_all_finite",
        "_op_in_graph_mode",
        "_assign_if_finite",
        "DynamicLossScale",
        "get",
        "__call__",
        "update",
        "_add_weight",
        "_checkpoint_dependencies",
        "_lookup_dependency",
        "get_config",
        "from_config",
        "__call__",
        "update",
        "__repr__",
        "get_config",
        "initial_loss_scale",
        "increment_period",
        "multiplier",
        "__call__",
        "update",
        "__repr__",
        "get_config",
        "update_if_finite_grads",
        "update_if_not_finite_grads",
        "get_is_finite",
        "incr_loss_scale"
    ],
    "get_layer_policy": [
        "get_layer_policy"
    ],
    "loss_scale_optimizer": [
        "MixedPrecisionLossScaleOptimizer",
        "_doing_dynamic_loss_scaling",
        "compute_gradients",
        "_scale_loss",
        "_unscale_grads",
        "_scale_grad",
        "apply_gradients",
        "_distributed_apply",
        "_apply_gradients",
        "_apply_sparse",
        "_apply_dense",
        "_resource_apply_sparse",
        "_resource_apply_dense",
        "variables",
        "apply_fn",
        "new_loss"
    ],
    "device_compatibility_check": [
        "_dedup_strings",
        "_log_device_compatibility_check",
        "log_device_compatibility_check"
    ],
    "policy": [
        "Policy",
        "PolicyV1",
        "global_policy",
        "_check_if_mixed_precision_graph_rewrite_is_enabled",
        "set_policy",
        "policy_scope",
        "_is_convertible_to_dtype",
        "_policy_equivalent_to_dtype",
        "serialize",
        "deserialize",
        "_parse_name",
        "variable_dtype",
        "compute_dtype",
        "name",
        "__repr__",
        "get_config",
        "from_config",
        "loss_scale",
        "__repr__",
        "get_config",
        "from_config"
    ],
    "adamax": [
        "Adamax",
        "_create_slots",
        "_prepare_local",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "nadam": [
        "Nadam",
        "_create_slots",
        "_prepare_local",
        "_prepare",
        "_resource_apply_dense",
        "_resource_apply_sparse",
        "get_config"
    ],
    "legacy_learning_rate_decay": [
        "exponential_decay",
        "piecewise_constant",
        "polynomial_decay",
        "natural_exp_decay",
        "inverse_time_decay",
        "cosine_decay",
        "cosine_decay_restarts",
        "linear_cosine_decay",
        "noisy_linear_cosine_decay"
    ],
    "learning_rate_schedule": [
        "LearningRateSchedule",
        "ExponentialDecay",
        "PiecewiseConstantDecay",
        "PolynomialDecay",
        "InverseTimeDecay",
        "CosineDecay",
        "CosineDecayRestarts",
        "LinearCosineDecay",
        "NoisyLinearCosineDecay",
        "serialize",
        "deserialize",
        "__call__",
        "get_config",
        "from_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "__call__",
        "get_config",
        "compute_step"
    ],
    "optimizer_v2": [
        "_deduplicate_indexed_slices",
        "OptimizerV2",
        "_var_key",
        "_get_slot_key_from_var",
        "RestoredOptimizer",
        "clipnorm",
        "global_clipnorm",
        "clipnorm",
        "global_clipnorm",
        "clipvalue",
        "clipvalue",
        "_transform_loss",
        "_get_gradients",
        "_transform_unaggregated_gradients",
        "_aggregate_gradients",
        "_transform_gradients",
        "minimize",
        "_compute_gradients",
        "apply_gradients",
        "_distributed_apply",
        "get_gradients",
        "get_updates",
        "_set_hyper",
        "_get_hyper",
        "_create_slots",
        "_create_all_weights",
        "__getattribute__",
        "__dir__",
        "__setattr__",
        "get_slot_names",
        "add_slot",
        "get_slot",
        "_prepare",
        "_prepare_local",
        "_fallback_apply_state",
        "_create_hypers",
        "iterations",
        "iterations",
        "_decayed_lr",
        "get_config",
        "from_config",
        "_serialize_hyperparameter",
        "variables",
        "weights",
        "get_weights",
        "set_weights",
        "add_weight",
        "_init_set_name",
        "_assert_valid_dtypes",
        "_valid_dtypes",
        "_call_if_callable",
        "_resource_apply_dense",
        "_resource_apply_sparse_duplicate_indices",
        "_resource_apply_sparse",
        "_resource_scatter_add",
        "_resource_scatter_update",
        "_dense_apply_args",
        "_sparse_apply_args",
        "_restore_slot_variable",
        "_create_or_restore_slot_variable",
        "_distribution_strategy_scope",
        "get_config",
        "apply_grad_to_update_var",
        "_assume_mirrored"
    ],
    "saved_model_benchmark_util": [
        "save_and_load_benchmark"
    ],
    "network_serialization": [
        "NetworkSavedModelSaver",
        "object_identifier"
    ],
    "json_utils": [
        "Encoder",
        "_encode_tuple",
        "decode",
        "_decode_helper",
        "get_json_type",
        "default",
        "encode"
    ],
    "metric_serialization": [
        "MetricSavedModelSaver",
        "object_identifier",
        "_python_properties_internal",
        "_get_serialized_attributes_internal"
    ],
    "base_serialization": [
        "SavedModelSaver",
        "object_identifier",
        "tracking_metadata",
        "list_extra_dependencies_for_serialization",
        "list_functions_for_serialization",
        "python_properties",
        "objects_to_serialize",
        "functions_to_serialize"
    ],
    "save_impl": [
        "should_skip_serialization",
        "wrap_layer_objects",
        "wrap_layer_functions",
        "default_save_signature",
        "_replace_child_layer_functions",
        "_restore_child_layer_functions",
        "_reset_layer_losses",
        "_restore_layer_losses",
        "LayerCallCollection",
        "layer_call_wrapper",
        "LayerCall",
        "_wrap_call_and_conditional_losses",
        "_extract_outputs_from_fn",
        "_append_activity_regularizer_loss",
        "_create_call_fn_decorator",
        "_wrap_unconditional_loss",
        "_wrap_activity_regularizer",
        "_get_layer_call_method",
        "replace_layer_functions",
        "replace_metric_functions",
        "_generate_input_signature",
        "add_trace",
        "fn_input_signature",
        "training_arg_was_passed",
        "get_training_arg_value",
        "get_input_arg_value",
        "_maybe_wrap_with_training_arg",
        "add_function",
        "wrapper",
        "__call__",
        "get_concrete_function",
        "call_and_return_conditional_losses",
        "call",
        "fn",
        "wrap_with_training_arg",
        "trace_with_training",
        "to_tensor_spec_or_none"
    ],
    "serialized_attributes": [
        "SerializedAttributes",
        "CommonEndpoints",
        "LayerAttributes",
        "ModelAttributes",
        "MetricAttributes",
        "RNNAttributes",
        "with_attributes",
        "new",
        "functions",
        "checkpointable_objects",
        "functions_to_serialize",
        "objects_to_serialize",
        "set_and_validate_functions",
        "set_and_validate_objects"
    ],
    "model_serialization": [
        "ModelSavedModelSaver",
        "SequentialSavedModelSaver",
        "object_identifier",
        "_python_properties_internal",
        "_get_serialized_attributes_internal",
        "object_identifier"
    ],
    "layer_serialization": [
        "LayerSavedModelSaver",
        "get_config",
        "InputLayerSavedModelSaver",
        "RNNSavedModelSaver",
        "object_identifier",
        "python_properties",
        "_python_properties_internal",
        "objects_to_serialize",
        "functions_to_serialize",
        "_get_serialized_attributes",
        "_get_serialized_attributes_internal",
        "object_identifier",
        "python_properties",
        "objects_to_serialize",
        "functions_to_serialize",
        "object_identifier",
        "_get_serialized_attributes_internal"
    ],
    "string_lookup": [
        "StringLookup",
        "get_config",
        "get_vocabulary"
    ],
    "reduction": [
        "get_reduce_op",
        "Reduction",
        "call"
    ],
    "hashing": [
        "Hashing",
        "_preprocess_single_input",
        "_preprocess_inputs",
        "call",
        "_process_single_input",
        "_process_input_list",
        "_get_string_to_hash_bucket_fn",
        "compute_output_shape",
        "compute_output_signature",
        "get_config"
    ],
    "discretization": [
        "Discretization",
        "get_config",
        "compute_output_shape",
        "compute_output_signature",
        "call",
        "_bucketize_op"
    ],
    "integer_lookup_v1": [
        "IntegerLookup"
    ],
    "preprocessing_stage": [
        "PreprocessingStage",
        "FunctionalPreprocessingStage",
        "_unzip_dataset",
        "adapt",
        "fit",
        "adapt",
        "build_map_fn",
        "map_fn",
        "map_fn",
        "map_fn",
        "map_fn"
    ],
    "string_lookup_v1": [
        "StringLookup"
    ],
    "category_crossing": [
        "CategoryCrossing",
        "partial_crossing",
        "_preprocess_input",
        "call",
        "compute_output_shape",
        "compute_output_signature",
        "get_config"
    ],
    "table_utils": [
        "TableHandler",
        "get_vocabulary_from_file",
        "validate_vocabulary_is_unique",
        "assert_same_type",
        "convert_to_ndarray",
        "vocab_size",
        "clear",
        "insert",
        "_replace_oov_buckets",
        "_ragged_lookup",
        "_sparse_lookup",
        "_tensor_lookup",
        "lookup",
        "_eval",
        "_run"
    ],
    "category_encoding": [
        "CategoryEncoding",
        "_CategoryEncodingAccumulator",
        "_CategoryEncodingCombiner",
        "compute_output_shape",
        "compute_output_signature",
        "adapt",
        "_set_state_variables",
        "get_config",
        "_convert_to_ndarray",
        "_convert_to_sparse_inputs",
        "set_num_elements",
        "set_tfidf_data",
        "call",
        "compute",
        "merge",
        "_inverse_document_frequency",
        "extract",
        "restore",
        "serialize",
        "deserialize",
        "_create_accumulator"
    ],
    "image_preprocessing": [
        "check_fill_mode_and_interpolation",
        "Resizing",
        "CenterCrop",
        "RandomCrop",
        "Rescaling",
        "RandomFlip",
        "RandomTranslation",
        "get_translation_matrix",
        "transform",
        "get_rotation_matrix",
        "RandomRotation",
        "RandomZoom",
        "get_zoom_matrix",
        "RandomContrast",
        "RandomHeight",
        "RandomWidth",
        "_RandomGenerator",
        "make_generator",
        "get_interpolation",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "call",
        "compute_output_shape",
        "get_config",
        "state",
        "_create_variable",
        "random_cropped_inputs",
        "resize_and_center_cropped_inputs",
        "random_flipped_inputs",
        "random_translated_inputs",
        "random_rotated_inputs",
        "random_zoomed_inputs",
        "random_contrasted_inputs",
        "random_height_inputs",
        "random_width_inputs"
    ],
    "index_lookup_v1": [
        "IndexLookup",
        "_use_v1_apis"
    ],
    "text_vectorization": [
        "TextVectorization",
        "_get_vectorization_class",
        "_get_index_lookup_class",
        "_assert_same_type",
        "_convert_to_ndarray",
        "compute_output_shape",
        "compute_output_signature",
        "adapt",
        "get_vocabulary",
        "get_config",
        "count_params",
        "set_vocabulary",
        "build",
        "_set_state_variables",
        "_preprocess",
        "call"
    ],
    "category_encoding_v1": [
        "CategoryEncoding"
    ],
    "index_lookup": [
        "IndexLookup",
        "_IndexLookupAccumulator",
        "_IndexLookupCombiner",
        "compute_output_shape",
        "compute_output_signature",
        "adapt",
        "get_vocabulary",
        "vocab_size",
        "get_config",
        "count_params",
        "_set_forward_vocabulary",
        "_set_inverse_vocabulary",
        "set_vocabulary",
        "_set_state_variables",
        "call",
        "_use_v1_apis",
        "compute",
        "merge",
        "extract",
        "restore",
        "serialize",
        "deserialize",
        "_create_accumulator"
    ],
    "normalization_v1": [
        "Normalization"
    ],
    "preprocessing_test_utils": [
        "PreprocessingLayerTest",
        "assertAllCloseOrEqual",
        "assert_extracted_output_equal",
        "validate_accumulator_computation",
        "validate_accumulator_extract",
        "validate_accumulator_extract_and_restore",
        "validate_accumulator_serialize_and_deserialize",
        "validate_accumulator_uniqueness"
    ],
    "text_vectorization_v1": [
        "TextVectorization",
        "_get_vectorization_class",
        "_get_index_lookup_class"
    ],
    "integer_lookup": [
        "IntegerLookup",
        "get_config"
    ],
    "rnn_cell_impl": [
        "_hasattr",
        "assert_like_rnncell",
        "_concat",
        "_zero_state_tensors",
        "RNNCell",
        "LayerRNNCell",
        "BasicRNNCell",
        "GRUCell",
        "LSTMStateTuple",
        "BasicLSTMCell",
        "LSTMCell",
        "_RNNCellWrapperV1",
        "DropoutWrapper",
        "ResidualWrapper",
        "DeviceWrapper",
        "MultiRNNCell",
        "_check_rnn_cell_input_dtypes",
        "_check_supported_dtypes",
        "get_state_shape",
        "__call__",
        "_rnn_get_variable",
        "state_size",
        "output_size",
        "build",
        "get_initial_state",
        "zero_state",
        "get_config",
        "__call__",
        "state_size",
        "output_size",
        "build",
        "call",
        "get_config",
        "state_size",
        "output_size",
        "build",
        "call",
        "get_config",
        "dtype",
        "state_size",
        "output_size",
        "build",
        "call",
        "get_config",
        "state_size",
        "output_size",
        "build",
        "call",
        "get_config",
        "_call_wrapped_cell",
        "__call__",
        "get_config",
        "from_config",
        "state_size",
        "output_size",
        "zero_state",
        "trainable_weights",
        "non_trainable_weights",
        "call"
    ],
    "rnn_cell_wrapper_impl": [
        "DropoutWrapperBase",
        "ResidualWrapperBase",
        "DeviceWrapperBase",
        "_serialize_function_to_config",
        "_parse_config_to_function",
        "_default_dropout_state_filter_visitor",
        "_enumerated_map_structure_up_to",
        "_gen_seed",
        "wrapped_cell",
        "state_size",
        "output_size",
        "build",
        "zero_state",
        "_variational_recurrent_dropout_value",
        "_dropout",
        "_call_wrapped_cell",
        "get_config",
        "from_config",
        "state_size",
        "output_size",
        "zero_state",
        "_call_wrapped_cell",
        "get_config",
        "from_config",
        "state_size",
        "output_size",
        "zero_state",
        "_call_wrapped_cell",
        "get_config",
        "enumerated_fn",
        "_should_dropout",
        "assert_shape_match",
        "default_residual_fn",
        "tensor_and_const_value",
        "convert_to_batch_shape",
        "batch_noise",
        "dropout",
        "dropout"
    ],
    "gradients": [
        "jacobian",
        "batch_jacobian",
        "loop_fn",
        "loop_fn"
    ],
    "pfor": [
        "_variant_handle_data",
        "_is_tensor_list",
        "_stack",
        "_is_stateful_pfor_op",
        "WhileOp",
        "ConversionNotImplementedError",
        "_PforInput",
        "RegisterPFor",
        "RegisterPForWithArgs",
        "_create_op",
        "wrap",
        "_wrap_and_tile_variants",
        "_fallback_converter",
        "PForConfig",
        "PFor",
        "_convert_adjust_contrastv2",
        "_convert_adjust_hue",
        "_convert_adjust_saturation",
        "_flatten_first_two_dims",
        "_unflatten_first_dim",
        "_inputs_with_flattening",
        "_convert_flatten_batch",
        "_convert_batch_to_space_nd",
        "_convert_space_to_batch_nd",
        "_channel_flatten_input",
        "_convert_fused_batch_norm",
        "_convert_fused_batch_norm_grad",
        "_convert_flatten_batch_shape_input",
        "_convert_conv2d_backprop_filter",
        "_convert_softmax",
        "_convert_identity",
        "_convert_identity_n",
        "_convert_reshape",
        "_convert_fill",
        "_convert_broadcast_to",
        "_convert_expanddims",
        "_convert_searchsorted",
        "_convert_matrix_band_part",
        "_convert_matrix_set_diag",
        "_convert_matrix_diag_v2",
        "_convert_diag",
        "_convert_matrix_diag_part_v2",
        "_convert_matrix_set_diag_v2",
        "_convert_diag_part",
        "_convert_one_hot",
        "_convert_slice",
        "_convert_tile",
        "_convert_pack",
        "_convert_unpack",
        "_convert_pad",
        "_convert_split",
        "_convert_split_v",
        "_convert_squeeze",
        "_convert_reverse",
        "_convert_transpose",
        "_convert_zeroslike",
        "_convert_gather",
        "_convert_gather_nd",
        "_convert_concatv2",
        "_convert_strided_slice",
        "_convert_strided_slice_grad",
        "_convert_check_numerics",
        "_convert_matmul",
        "_convert_batch_mat_mul",
        "_convert_batch_mat_mul_v2",
        "_convert_reduction",
        "_convert_argmax_argmin",
        "_convert_bucketize",
        "_convert_clip_by_value",
        "_convert_cumfoo",
        "_convert_biasadd",
        "_convert_unsortedsegmentsum",
        "_flatten_array_with_offset",
        "_convert_sparse_segment",
        "_convert_sparse_segment_grad",
        "_convert_cast",
        "_convert_cwise",
        "_convert_leaky_relu",
        "_convert_equal",
        "_convert_not_equal",
        "_convert_approximate_equal",
        "_convert_shape",
        "_convert_shape_n",
        "_convert_size",
        "_convert_rank",
        "_convert_addn",
        "_convert_cross",
        "_convert_biasaddgrad",
        "_convert_grads",
        "_convert_select",
        "_convert_selectv2",
        "_transpose_dim_to_front",
        "_convert_random",
        "_convert_random_with_param",
        "_convert_multinomial",
        "_convert_stateless_multinomial",
        "_convert_einsum",
        "_convert_cholesky",
        "_convert_log_matrix_determinant",
        "_convert_matrix_inverse",
        "_convert_matrix_solve",
        "_convert_matrix_triangular_solve",
        "_convert_self_adjoint_eig",
        "_convert_assert",
        "_convert_print",
        "_convert_tensor_array_v3",
        "_convert_tensor_array_size_v3",
        "_handle_inside_pfor",
        "_unstack_flow",
        "_convert_tensor_array_read_v3",
        "_convert_tensor_array_write_v3",
        "_transpose_first_two_dims",
        "_convert_tensor_array_gather_v3",
        "_convert_tensor_array_scatter_v3",
        "_convert_tensor_array_grad_v3",
        "_stack_tensor_list_shape",
        "_tile_variant_with_length",
        "_tile_variant",
        "_untile_variant",
        "_convert_tensor_list_reserve",
        "_convert_tensor_list_element_shape",
        "_convert_tensor_list_length",
        "_stack_tensor_list",
        "_convert_tensor_list_get_item",
        "_convert_tensor_array_set_item",
        "_convert_tensor_list_push_back",
        "_convert_tensor_array_push_back",
        "_convert_tensor_list_concat_v2",
        "_convert_tensor_list_stack",
        "_convert_tensor_list_gather",
        "_convert_tensor_list_scatter",
        "_convert_tensor_list_from_tensor",
        "_stack_cache_key",
        "_stack_handle_inside_pfor",
        "_convert_stack_push_v2",
        "_convert_stack_pop_v2",
        "_convert_decode_csv",
        "_convert_parse_single_example",
        "_convert_parse_example_v2",
        "_convert_function_call",
        "_convert_partitioned_call",
        "_partition_inputs_for_indices",
        "_outputs_for_branch",
        "_convert_if",
        "WhileV2",
        "_convert_while",
        "_convert_fft",
        "_convert_rfft",
        "__str__",
        "inputs",
        "control_inputs",
        "outputs",
        "name",
        "is_inside_loop",
        "op_is_inside_loop",
        "is_stateful",
        "pfor_converter",
        "_init_pfor",
        "_convert_enter",
        "_maybe_stacked",
        "_create_init_values",
        "_process_cond_unstacked",
        "_process_cond_stacked",
        "_process_body",
        "__call__",
        "stack_inputs",
        "expanddim_inputs_for_broadcast",
        "inputs",
        "num_inputs",
        "input",
        "stacked_input",
        "unstacked_input",
        "op",
        "op_type",
        "get_attr",
        "outputs",
        "output",
        "__call__",
        "__call__",
        "while_body",
        "_has_reductions",
        "_set_iters",
        "reduce",
        "reduce_concat",
        "reduce_mean",
        "reduce_sum",
        "_lookup_reduction",
        "op_is_inside_loop",
        "_convert_sparse",
        "_restack_sparse_tensor_logically",
        "_unwrap_or_tile",
        "convert",
        "_was_converted",
        "_add_conversion",
        "_convert_reduction",
        "_convert_helper",
        "loop_len_vector",
        "loop_var",
        "pfor_ops",
        "pfor_config",
        "all_indices_partitioned",
        "fallback_to_while_loop",
        "_body_fn",
        "_transpose_elem",
        "f",
        "_output_shapes",
        "_init_values",
        "_process_cond_unstacked",
        "_process_cond_stacked",
        "_process_body",
        "__call__",
        "true_fn",
        "cond",
        "body",
        "_get_rank",
        "_f",
        "fn",
        "while_body",
        "true_fn",
        "cond",
        "body",
        "while_fn",
        "_add_to_stack",
        "_map_fn",
        "_map_fn"
    ],
    "losses_impl": [
        "Reduction",
        "_safe_mean",
        "_num_present",
        "_num_elements",
        "compute_weighted_loss",
        "absolute_difference",
        "cosine_distance",
        "hinge_loss",
        "huber_loss",
        "log_loss",
        "mean_pairwise_squared_error",
        "mean_squared_error",
        "sigmoid_cross_entropy",
        "softmax_cross_entropy",
        "_remove_squeezable_dimensions",
        "sparse_softmax_cross_entropy",
        "all",
        "validate"
    ],
    "loss_reduction": [
        "ReductionV2",
        "all",
        "validate"
    ],
    "util": [
        "test_moment_matching",
        "chi_squared",
        "normal_cdf",
        "anderson_darling",
        "test_truncated_normal",
        "_normal_cdf",
        "normal_pdf",
        "probit"
    ],
    "special_math": [
        "ndtr",
        "_ndtr",
        "ndtri",
        "_ndtri",
        "log_ndtr",
        "_log_ndtr_lower",
        "_log_ndtr_asymptotic_series",
        "erfinv",
        "_double_factorial",
        "log_cdf_laplace",
        "_create_polynomial"
    ],
    "transformed_distribution": [
        "_static_value",
        "_logical_and",
        "_logical_equal",
        "_logical_not",
        "_concat_vectors",
        "_pick_scalar_condition",
        "_ones_like",
        "_ndims_from_shape",
        "_is_scalar_from_shape",
        "TransformedDistribution",
        "distribution",
        "bijector",
        "_event_shape_tensor",
        "_event_shape",
        "_batch_shape_tensor",
        "_batch_shape",
        "_sample_n",
        "_call_sample_n",
        "_log_prob",
        "_finish_log_prob_for_one_fiber",
        "_prob",
        "_finish_prob_for_one_fiber",
        "_log_cdf",
        "_cdf",
        "_log_survival_function",
        "_survival_function",
        "_quantile",
        "_entropy",
        "_maybe_validate_shape_override",
        "_maybe_rotate_dims",
        "_maybe_get_static_event_ndims"
    ],
    "bijector_impl": [
        "_Mapping",
        "Bijector",
        "__new__",
        "x_key",
        "y_key",
        "merge",
        "_merge_dicts",
        "_merge",
        "_deep_tuple",
        "graph_parents",
        "forward_min_event_ndims",
        "inverse_min_event_ndims",
        "is_constant_jacobian",
        "_is_injective",
        "validate_args",
        "dtype",
        "name",
        "_forward_event_shape_tensor",
        "forward_event_shape_tensor",
        "_forward_event_shape",
        "forward_event_shape",
        "_inverse_event_shape_tensor",
        "inverse_event_shape_tensor",
        "_inverse_event_shape",
        "inverse_event_shape",
        "_forward",
        "_call_forward",
        "forward",
        "_inverse",
        "_call_inverse",
        "inverse",
        "_inverse_log_det_jacobian",
        "_call_inverse_log_det_jacobian",
        "inverse_log_det_jacobian",
        "_forward_log_det_jacobian",
        "_call_forward_log_det_jacobian",
        "forward_log_det_jacobian",
        "_name_scope",
        "_maybe_assert_dtype",
        "_cache",
        "_lookup",
        "_reduce_jacobian_det_over_event",
        "_get_event_reduce_dims",
        "_check_valid_event_ndims",
        "_maybe_get_static_event_ndims",
        "camel_to_snake"
    ],
    "dirichlet_multinomial": [
        "DirichletMultinomial",
        "total_count",
        "concentration",
        "total_concentration",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_prob",
        "_mean",
        "_covariance",
        "_variance",
        "_variance_scale_term",
        "_maybe_assert_valid_concentration",
        "_maybe_assert_valid_sample"
    ],
    "categorical": [
        "_broadcast_cat_event_and_params",
        "Categorical",
        "_kl_categorical_categorical",
        "event_size",
        "logits",
        "probs",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_cdf",
        "_log_prob",
        "_entropy",
        "_mode"
    ],
    "laplace": [
        "Laplace",
        "LaplaceWithSoftplusScale",
        "_param_shapes",
        "loc",
        "scale",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_prob",
        "_log_cdf",
        "_log_survival_function",
        "_cdf",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_entropy",
        "_mean",
        "_stddev",
        "_median",
        "_mode",
        "_z"
    ],
    "bernoulli": [
        "Bernoulli",
        "_kl_bernoulli_bernoulli",
        "_param_shapes",
        "logits",
        "probs",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_entropy",
        "_mean",
        "_variance",
        "_mode",
        "_broadcast"
    ],
    "normal": [
        "Normal",
        "NormalWithSoftplusScale",
        "_kl_normal_normal",
        "_param_shapes",
        "loc",
        "scale",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_log_cdf",
        "_cdf",
        "_log_survival_function",
        "_survival_function",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_entropy",
        "_mean",
        "_quantile",
        "_stddev",
        "_mode",
        "_z",
        "_inv_z"
    ],
    "student_t": [
        "StudentT",
        "StudentTWithAbsDfSoftplusScale",
        "_param_shapes",
        "df",
        "loc",
        "scale",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_cdf",
        "_entropy",
        "_mean",
        "_variance",
        "_mode"
    ],
    "uniform": [
        "Uniform",
        "_param_shapes",
        "low",
        "high",
        "range",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_prob",
        "_cdf",
        "_entropy",
        "_mean",
        "_variance",
        "_stddev"
    ],
    "distribution": [
        "_BaseDistribution",
        "_copy_fn",
        "_update_docstring",
        "_convert_to_tensor",
        "_DistributionMeta",
        "ReparameterizationType",
        "Distribution",
        "__new__",
        "__repr__",
        "__eq__",
        "_parameters",
        "_parameters",
        "param_shapes",
        "param_static_shapes",
        "_param_shapes",
        "name",
        "dtype",
        "parameters",
        "reparameterization_type",
        "allow_nan_stats",
        "validate_args",
        "copy",
        "_batch_shape_tensor",
        "batch_shape_tensor",
        "_batch_shape",
        "batch_shape",
        "_event_shape_tensor",
        "event_shape_tensor",
        "_event_shape",
        "event_shape",
        "is_scalar_event",
        "is_scalar_batch",
        "_sample_n",
        "_call_sample_n",
        "sample",
        "_log_prob",
        "_call_log_prob",
        "log_prob",
        "_prob",
        "_call_prob",
        "prob",
        "_log_cdf",
        "_call_log_cdf",
        "log_cdf",
        "_cdf",
        "_call_cdf",
        "cdf",
        "_log_survival_function",
        "_call_log_survival_function",
        "log_survival_function",
        "_survival_function",
        "_call_survival_function",
        "survival_function",
        "_entropy",
        "entropy",
        "_mean",
        "mean",
        "_quantile",
        "_call_quantile",
        "quantile",
        "_variance",
        "variance",
        "_stddev",
        "stddev",
        "_covariance",
        "covariance",
        "_mode",
        "mode",
        "_cross_entropy",
        "cross_entropy",
        "_kl_divergence",
        "kl_divergence",
        "__str__",
        "__repr__",
        "_name_scope",
        "_expand_sample_shape_to_vector",
        "_set_sample_static_shape",
        "_is_scalar_helper"
    ],
    "exponential": [
        "Exponential",
        "ExponentialWithSoftplusRate",
        "_param_shapes",
        "rate",
        "_log_survival_function",
        "_sample_n"
    ],
    "beta": [
        "Beta",
        "BetaWithSoftplusConcentration",
        "_kl_beta_beta",
        "_param_shapes",
        "concentration1",
        "concentration0",
        "total_concentration",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_prob",
        "_log_cdf",
        "_cdf",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_entropy",
        "_mean",
        "_variance",
        "_mode",
        "_maybe_assert_valid_concentration",
        "_maybe_assert_valid_sample",
        "delta"
    ],
    "bijector_test_util": [
        "assert_finite",
        "assert_strictly_increasing",
        "assert_strictly_decreasing",
        "assert_strictly_monotonic",
        "assert_scalar_congruency",
        "assert_bijective_and_finite"
    ],
    "kullback_leibler": [
        "_registered_kl",
        "kl_divergence",
        "cross_entropy",
        "RegisterKL",
        "__call__"
    ],
    "gamma": [
        "Gamma",
        "GammaWithSoftplusConcentrationRate",
        "_kl_gamma_gamma",
        "_param_shapes",
        "concentration",
        "rate",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_cdf",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_entropy",
        "_mean",
        "_variance",
        "_stddev",
        "_mode",
        "_maybe_assert_valid_sample"
    ],
    "identity_bijector": [
        "Identity",
        "_forward",
        "_inverse",
        "_inverse_log_det_jacobian",
        "_forward_log_det_jacobian"
    ],
    "multinomial": [
        "Multinomial",
        "total_count",
        "logits",
        "probs",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_mean",
        "_covariance",
        "_variance",
        "_maybe_assert_valid_sample",
        "_sample_single"
    ],
    "dirichlet": [
        "Dirichlet",
        "_kl_dirichlet_dirichlet",
        "concentration",
        "total_concentration",
        "_batch_shape_tensor",
        "_batch_shape",
        "_event_shape_tensor",
        "_event_shape",
        "_sample_n",
        "_log_prob",
        "_prob",
        "_log_unnormalized_prob",
        "_log_normalization",
        "_entropy",
        "_mean",
        "_covariance",
        "_variance",
        "_variance_scale_term",
        "_mode",
        "_maybe_assert_valid_concentration",
        "_maybe_assert_valid_sample"
    ],
    "reconstruction_ops": [
        "overlap_and_add",
        "full_shape"
    ],
    "util_ops": [
        "gcd"
    ],
    "window_ops": [
        "_check_params",
        "kaiser_window",
        "kaiser_bessel_derived_window",
        "vorbis_window",
        "hann_window",
        "hamming_window",
        "_raised_cosine_window"
    ],
    "mfcc_ops": [
        "mfccs_from_log_mel_spectrograms"
    ],
    "mel_ops": [
        "_mel_to_hertz",
        "_hertz_to_mel",
        "_validate_arguments",
        "linear_to_mel_weight_matrix"
    ],
    "fft_ops": [
        "_infer_fft_length_for_rfft",
        "_infer_fft_length_for_irfft",
        "_maybe_pad_for_rfft",
        "_rfft_wrapper",
        "_irfft_wrapper",
        "_fft_size_for_grad",
        "_fft_grad",
        "_ifft_grad",
        "_fft2d_grad",
        "_ifft2d_grad",
        "_fft3d_grad",
        "_ifft3d_grad",
        "_rfft_grad_helper",
        "_irfft_grad_helper",
        "fftshift",
        "ifftshift",
        "_rfft",
        "_irfft",
        "_grad",
        "_grad",
        "_tile_for_broadcasting",
        "_mask_matrix",
        "_ymask"
    ],
    "shape_ops": [
        "_infer_frame_shape",
        "frame",
        "maybe_constant"
    ],
    "spectral_ops": [
        "stft",
        "inverse_stft_window_fn",
        "inverse_stft",
        "_enclosing_power_of_two",
        "mdct",
        "inverse_mdct",
        "inverse_stft_window_fn_inner"
    ],
    "dct_ops": [
        "_validate_dct_arguments",
        "dct",
        "idct"
    ],
    "linear_operator_kronecker": [
        "_vec",
        "_unvec_by",
        "_rotate_last_dim",
        "LinearOperatorKronecker",
        "operators",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_trace",
        "_solve",
        "_diag_part",
        "_to_dense",
        "_eigvals",
        "_assert_non_singular",
        "_assert_self_adjoint"
    ],
    "linear_operator_block_diag": [
        "LinearOperatorBlockDiag",
        "operators",
        "_block_range_dimensions",
        "_block_domain_dimensions",
        "_block_range_dimension_tensors",
        "_block_domain_dimension_tensors",
        "_shape",
        "_shape_tensor",
        "matmul",
        "_matmul",
        "matvec",
        "_determinant",
        "_log_abs_determinant",
        "solve",
        "solvevec",
        "_diag_part",
        "_trace",
        "_to_dense",
        "_assert_non_singular",
        "_assert_self_adjoint",
        "_assert_positive_definite",
        "_eigvals"
    ],
    "registrations_util": [
        "combined_commuting_self_adjoint_hint",
        "is_square",
        "combined_commuting_positive_definite_hint",
        "combined_non_singular_hint"
    ],
    "matmul_registrations": [
        "_matmul_linear_operator",
        "_matmul_linear_operator_identity_left",
        "_matmul_linear_operator_identity_right",
        "_matmul_linear_operator_scaled_identity",
        "_matmul_linear_operator_zeros_right",
        "_matmul_linear_operator_zeros_left",
        "_matmul_linear_operator_diag",
        "_matmul_linear_operator_diag_scaled_identity_right",
        "_matmul_linear_operator_diag_scaled_identity_left",
        "_matmul_linear_operator_diag_tril",
        "_matmul_linear_operator_tril_diag",
        "_matmul_linear_operator_circulant_circulant"
    ],
    "linear_operator_adjoint": [
        "LinearOperatorAdjoint",
        "operator",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_matvec",
        "_determinant",
        "_log_abs_determinant",
        "_trace",
        "_solve",
        "_solvevec",
        "_to_dense",
        "_add_to_tensor",
        "_eigvals",
        "_cond"
    ],
    "linear_operator_test_util": [
        "OperatorShapesInfo",
        "CheckTapeSafeSkipOptions",
        "LinearOperatorDerivedClassTest",
        "_test_to_dense",
        "_test_det",
        "_test_log_abs_det",
        "_test_matmul_base",
        "_test_matmul",
        "_test_matmul_with_broadcast",
        "_test_adjoint",
        "_test_cholesky",
        "_test_eigvalsh",
        "_test_cond",
        "_test_solve_base",
        "_test_solve",
        "_test_solve_with_broadcast",
        "_test_inverse",
        "_test_trace",
        "_test_add_to_tensor",
        "_test_diag_part",
        "add_tests",
        "SquareLinearOperatorDerivedClassTest",
        "NonSquareLinearOperatorDerivedClassTest",
        "random_positive_definite_matrix",
        "random_tril_matrix",
        "random_normal",
        "random_uniform",
        "random_sign_uniform",
        "random_normal_correlated_columns",
        "assertAC",
        "adjoint_options",
        "adjoint_arg_options",
        "dtypes_to_test",
        "use_placeholder_options",
        "use_blockwise_arg",
        "operator_shapes_infos",
        "operator_and_matrix",
        "make_rhs",
        "make_x",
        "skip_these_tests",
        "assertRaisesError",
        "check_tape_safe",
        "test_to_dense",
        "test_det",
        "test_log_abs_det",
        "test_matmul",
        "test_matmul_with_broadcast",
        "test_adjoint",
        "test_cholesky",
        "test_eigvalsh",
        "test_cond",
        "test_solve",
        "test_solve_with_broadcast",
        "test_inverse",
        "test_trace",
        "test_add_to_tensor",
        "test_diag_part",
        "operator_shapes_infos",
        "make_rhs",
        "make_x",
        "_get_num_systems",
        "skip_these_tests",
        "operator_shapes_infos",
        "make_rhs",
        "make_x",
        "_get_num_systems",
        "_assert_not_none"
    ],
    "linear_operator_block_lower_triangular": [
        "LinearOperatorBlockLowerTriangular",
        "_validate_num_operators",
        "_validate_operator_dimensions",
        "_validate_non_singular",
        "_validate_square",
        "_validate_dtype",
        "operators",
        "_block_range_dimensions",
        "_block_domain_dimensions",
        "_block_range_dimension_tensors",
        "_block_domain_dimension_tensors",
        "_shape",
        "_shape_tensor",
        "matmul",
        "_matmul",
        "matvec",
        "_determinant",
        "_log_abs_determinant",
        "solve",
        "solvevec",
        "_diag_part",
        "_trace",
        "_to_dense",
        "_assert_non_singular",
        "_eigvals"
    ],
    "linear_operator_inversion": [
        "LinearOperatorInversion",
        "operator",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_eigvals",
        "_cond"
    ],
    "linear_operator_full_matrix": [
        "LinearOperatorFullMatrix",
        "_check_matrix",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_solve",
        "_to_dense"
    ],
    "linear_operator_tridiag": [
        "LinearOperatorTridiag",
        "_shape",
        "_shape_tensor",
        "_assert_self_adjoint",
        "_construct_adjoint_diagonals",
        "_matmul",
        "_solve",
        "_diag_part",
        "_to_dense",
        "diagonals",
        "diagonals_format"
    ],
    "linalg_impl": [
        "logdet",
        "adjoint",
        "_matrix_exp_pade3",
        "_matrix_exp_pade5",
        "_matrix_exp_pade7",
        "_matrix_exp_pade9",
        "_matrix_exp_pade13",
        "matrix_exponential",
        "banded_triangular_solve",
        "tridiagonal_solve",
        "_tridiagonal_solve_compact_format",
        "tridiagonal_matmul",
        "_maybe_validate_matrix",
        "matrix_rank",
        "pinv",
        "lu_solve",
        "lu_matrix_inverse",
        "lu_reconstruct",
        "lu_reconstruct_assertions",
        "_lu_solve_assertions",
        "check_num_lhs_matches_num_rhs",
        "_nest_where",
        "c",
        "b",
        "pad_if_necessary",
        "get_dim_size"
    ],
    "adjoint_registrations": [
        "_adjoint_linear_operator",
        "_adjoint_adjoint_linear_operator",
        "_adjoint_identity",
        "_adjoint_scaled_identity",
        "_adjoint_diag",
        "_adjoint_block_diag",
        "_adjoint_kronecker",
        "_adjoint_circulant",
        "_adjoint_householder"
    ],
    "linear_operator_circulant": [
        "_BaseLinearOperatorCirculant",
        "LinearOperatorCirculant",
        "LinearOperatorCirculant2D",
        "LinearOperatorCirculant3D",
        "_to_complex",
        "_check_spectrum_and_return_tensor",
        "block_depth",
        "block_shape_tensor",
        "_block_shape_tensor",
        "block_shape",
        "spectrum",
        "_vectorize_then_blockify",
        "_unblockify_then_matricize",
        "_fft",
        "_ifft",
        "convolution_kernel",
        "_shape",
        "_shape_tensor",
        "assert_hermitian_spectrum",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_broadcast_batch_dims",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_diag_part",
        "_trace",
        "_eigvals"
    ],
    "linear_operator_addition": [
        "add_operators",
        "_pop_a_match_at_tier",
        "_infer_hints_allowing_override",
        "_static_check_for_same_dimensions",
        "_static_check_for_broadcastable_batch_shape",
        "_Hints",
        "_Adder",
        "_AddAndReturnScaledIdentity",
        "_AddAndReturnDiag",
        "_AddAndReturnTriL",
        "_AddAndReturnMatrix",
        "_type",
        "name",
        "can_add",
        "_add",
        "add",
        "can_add",
        "_add",
        "can_add",
        "_add",
        "can_add",
        "_add",
        "can_add",
        "_add"
    ],
    "cholesky_registrations": [
        "_cholesky_linear_operator",
        "_cholesky_diag",
        "_cholesky_identity",
        "_cholesky_scaled_identity",
        "_cholesky_block_diag",
        "_cholesky_kronecker"
    ],
    "inverse_registrations": [
        "_inverse_linear_operator",
        "_inverse_inverse_linear_operator",
        "_inverse_diag",
        "_inverse_identity",
        "_inverse_scaled_identity",
        "_inverse_block_diag",
        "_inverse_block_lower_triangular",
        "_inverse_kronecker",
        "_inverse_circulant",
        "_inverse_householder"
    ],
    "linear_operator_diag": [
        "LinearOperatorDiag",
        "_check_diag",
        "_shape",
        "_shape_tensor",
        "diag",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_matmul",
        "_matvec",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_to_dense",
        "_diag_part",
        "_add_to_tensor",
        "_eigvals",
        "_cond"
    ],
    "linear_operator_zeros": [
        "LinearOperatorZeros",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_possibly_broadcast_batch_shape",
        "_matmul",
        "_determinant",
        "_trace",
        "_diag_part",
        "add_to_tensor",
        "_check_domain_range_possibly_add_asserts",
        "_check_batch_shape_possibly_add_asserts",
        "_min_matrix_dim",
        "_min_matrix_dim_tensor",
        "_zeros_diag",
        "_eigvals"
    ],
    "linear_operator": [
        "LinearOperator",
        "_adjoint",
        "_cholesky",
        "_diag_part",
        "_det",
        "_inverse",
        "_logdet",
        "_matmul",
        "_solve",
        "_trace",
        "_name_scope",
        "parameters",
        "dtype",
        "name",
        "graph_parents",
        "is_non_singular",
        "is_self_adjoint",
        "is_positive_definite",
        "is_square",
        "_shape",
        "shape",
        "_shape_tensor",
        "shape_tensor",
        "batch_shape",
        "batch_shape_tensor",
        "_batch_shape_tensor",
        "tensor_rank",
        "tensor_rank_tensor",
        "_tensor_rank_tensor",
        "domain_dimension",
        "domain_dimension_tensor",
        "_domain_dimension_tensor",
        "range_dimension",
        "range_dimension_tensor",
        "_range_dimension_tensor",
        "_assert_non_singular",
        "_max_condition_number_to_be_non_singular",
        "assert_non_singular",
        "_assert_positive_definite",
        "assert_positive_definite",
        "_assert_self_adjoint",
        "assert_self_adjoint",
        "_check_input_dtype",
        "_matmul",
        "matmul",
        "__matmul__",
        "_matvec",
        "matvec",
        "_determinant",
        "determinant",
        "_log_abs_determinant",
        "log_abs_determinant",
        "_dense_solve",
        "_solve",
        "solve",
        "_solvevec",
        "solvevec",
        "adjoint",
        "inverse",
        "cholesky",
        "_to_dense",
        "to_dense",
        "_diag_part",
        "diag_part",
        "_trace",
        "trace",
        "_add_to_tensor",
        "add_to_tensor",
        "_eigvals",
        "eigvals",
        "_cond",
        "cond",
        "_can_use_cholesky",
        "_set_graph_parents"
    ],
    "linear_operator_lower_triangular": [
        "LinearOperatorLowerTriangular",
        "_check_tril",
        "_get_tril",
        "_get_diag",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_to_dense",
        "_eigvals"
    ],
    "linear_operator_util": [
        "convert_nonref_to_tensor",
        "base_dtype",
        "dtype_name",
        "check_dtype",
        "is_ref",
        "assert_not_ref_type",
        "assert_no_entries_with_modulus_zero",
        "assert_zero_imag_part",
        "assert_compatible_matrix_dimensions",
        "assert_is_batch_matrix",
        "shape_tensor",
        "broadcast_matrix_batch_dims",
        "matrix_solve_with_broadcast",
        "_reshape_for_efficiency",
        "use_operator_or_provided_hint_unless_contradicting",
        "arg_is_blockwise",
        "split_arg_into_blocks",
        "identity",
        "reshape_inv"
    ],
    "linear_operator_householder": [
        "LinearOperatorHouseholder",
        "_check_reflection_axis",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_matmul",
        "_trace",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_to_dense",
        "_diag_part",
        "_eigvals",
        "_cond",
        "reflection_axis"
    ],
    "linear_operator_algebra": [
        "_registered_function",
        "_registered_adjoint",
        "_registered_cholesky",
        "_registered_matmul",
        "_registered_solve",
        "_registered_inverse",
        "adjoint",
        "cholesky",
        "matmul",
        "solve",
        "inverse",
        "RegisterAdjoint",
        "RegisterCholesky",
        "RegisterMatmul",
        "RegisterSolve",
        "RegisterInverse",
        "hierarchy_distance",
        "__call__",
        "__call__",
        "__call__",
        "__call__",
        "__call__"
    ],
    "linear_operator_toeplitz": [
        "LinearOperatorToeplitz",
        "_to_complex",
        "_check_row_col",
        "_shape",
        "_shape_tensor",
        "_assert_self_adjoint",
        "_matmul",
        "_trace",
        "_diag_part",
        "_to_dense",
        "col",
        "row"
    ],
    "linear_operator_identity": [
        "BaseLinearOperatorIdentity",
        "LinearOperatorIdentity",
        "LinearOperatorScaledIdentity",
        "_check_num_rows_possibly_add_asserts",
        "_min_matrix_dim",
        "_min_matrix_dim_tensor",
        "_ones_diag",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_possibly_broadcast_batch_shape",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_trace",
        "_diag_part",
        "add_to_tensor",
        "_eigvals",
        "_cond",
        "_check_num_rows_possibly_add_asserts",
        "_check_batch_shape_possibly_add_asserts",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_assert_positive_definite",
        "_assert_self_adjoint",
        "_make_multiplier_matrix",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_trace",
        "_diag_part",
        "add_to_tensor",
        "_eigvals",
        "_cond",
        "multiplier"
    ],
    "linear_operator_permutation": [
        "LinearOperatorPermutation",
        "_check_perm",
        "_shape",
        "_shape_tensor",
        "_assert_non_singular",
        "_domain_dimension_tensor",
        "_matmul",
        "_log_abs_determinant",
        "_solve",
        "_to_dense",
        "_diag_part",
        "_cond",
        "perm"
    ],
    "solve_registrations": [
        "_solve_linear_operator",
        "_solve_inverse_linear_operator",
        "_solve_linear_operator_identity_left",
        "_solve_linear_operator_identity_right",
        "_solve_linear_operator_scaled_identity",
        "_solve_linear_operator_diag",
        "_solve_linear_operator_diag_scaled_identity_right",
        "_solve_linear_operator_diag_scaled_identity_left",
        "_solve_linear_operator_diag_tril",
        "_solve_linear_operator_circulant_circulant"
    ],
    "linear_operator_composition": [
        "LinearOperatorComposition",
        "operators",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve"
    ],
    "linear_operator_low_rank_update": [
        "LinearOperatorLowRankUpdate",
        "_check_shapes",
        "_set_diag_operators",
        "u",
        "v",
        "is_diag_update_positive",
        "diag_update",
        "diag_operator",
        "base_operator",
        "_shape",
        "_shape_tensor",
        "_matmul",
        "_determinant",
        "_log_abs_determinant",
        "_solve",
        "_make_capacitance"
    ],
    "structured_tensor": [
        "StructuredTensor",
        "StructuredTensorSpec",
        "_convert_to_structured_field_value",
        "_find_shape_dtype",
        "_merge_nrows",
        "_merge_row_partitions",
        "_row_partitions_for_tensor",
        "_row_partitions_for_ragged_tensor",
        "_row_partitions_for_uniform_shape",
        "_pyval_field_major_to_node_major",
        "_pyval_find_struct_keys_and_depth",
        "_pyval_update_fields",
        "_pyval_empty_list_depth",
        "_replace_row_partitions",
        "_partition_outer_dimension",
        "_merge_dims",
        "_normalize_field_name_to_tuple",
        "from_fields",
        "with_updates",
        "_with_updates_impl",
        "rank",
        "shape",
        "row_partitions",
        "nrows",
        "_is_eager",
        "field_names",
        "field_value",
        "__getitem__",
        "_scalar_getitem",
        "_tensor_getitem",
        "__repr__",
        "to_pyval",
        "from_pyval",
        "_from_pydict",
        "_from_pylist_of_dict",
        "_from_pylist_of_value",
        "_from_pyscalar",
        "partition_outer_dimension",
        "merge_dims",
        "_type_spec",
        "value_type",
        "_to_components",
        "_from_components",
        "_component_specs",
        "from_value",
        "_serialize",
        "_batch",
        "_unbatch",
        "name_fullpath",
        "apply_value"
    ],
    "np_dtypes": [
        "is_allow_float64",
        "set_allow_float64",
        "canonicalize_dtype",
        "_result_type",
        "_get_cached_dtype",
        "default_float_type"
    ],
    "np_export": [
        "public_name",
        "np_export",
        "np_export_constant"
    ],
    "np_arrays": [
        "convert_to_tensor",
        "NdarraySpec",
        "ndarray",
        "tensor_to_ndarray",
        "ndarray_to_tensor",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_serialize",
        "_batch",
        "_unbatch",
        "__hash__",
        "from_tensor",
        "_type_spec",
        "shape",
        "dtype",
        "_is_boolean",
        "ndim",
        "size",
        "T",
        "__len__",
        "astype",
        "__neg__",
        "__pos__",
        "__int__",
        "__float__",
        "__bool__",
        "__nonzero__",
        "__iter__",
        "__array__",
        "__array_module__",
        "__index__",
        "tolist",
        "__str__",
        "__repr__"
    ],
    "np_math_ops": [
        "dot",
        "_bin_op",
        "add",
        "subtract",
        "multiply",
        "true_divide",
        "divide",
        "floor_divide",
        "mod",
        "remainder",
        "divmod",
        "maximum",
        "minimum",
        "clip",
        "matmul",
        "tensordot",
        "inner",
        "cross",
        "vdot",
        "power",
        "float_power",
        "arctan2",
        "nextafter",
        "heaviside",
        "hypot",
        "kron",
        "outer",
        "logaddexp",
        "logaddexp2",
        "polyval",
        "isclose",
        "allclose",
        "_tf_gcd",
        "gcd",
        "lcm",
        "_bitwise_binary_op",
        "bitwise_and",
        "bitwise_or",
        "bitwise_xor",
        "bitwise_not",
        "_scalar",
        "log",
        "exp",
        "sqrt",
        "abs",
        "absolute",
        "fabs",
        "ceil",
        "floor",
        "conj",
        "negative",
        "reciprocal",
        "signbit",
        "sin",
        "cos",
        "tan",
        "sinh",
        "cosh",
        "tanh",
        "arcsin",
        "arccos",
        "arctan",
        "arcsinh",
        "arccosh",
        "arctanh",
        "deg2rad",
        "rad2deg",
        "angle",
        "cbrt",
        "conjugate",
        "exp2",
        "expm1",
        "fix",
        "iscomplex",
        "isreal",
        "iscomplexobj",
        "isrealobj",
        "isnan",
        "_make_nan_reduction",
        "nanmean",
        "isfinite",
        "isinf",
        "isneginf",
        "isposinf",
        "log2",
        "log10",
        "log1p",
        "positive",
        "sinc",
        "square",
        "diff",
        "_wrap",
        "_comparison",
        "equal",
        "not_equal",
        "greater",
        "greater_equal",
        "less",
        "less_equal",
        "array_equal",
        "_logical_binary_op",
        "logical_and",
        "logical_or",
        "logical_xor",
        "logical_not",
        "linspace",
        "logspace",
        "geomspace",
        "ptp",
        "concatenate",
        "tile",
        "count_nonzero",
        "argsort",
        "sort",
        "_argminmax",
        "argmax",
        "argmin",
        "append",
        "average",
        "trace",
        "meshgrid",
        "einsum",
        "f",
        "add_or_or",
        "mul_or_and",
        "_avoid_float64",
        "f",
        "f",
        "f",
        "max_or_or",
        "min_or_and",
        "f",
        "f",
        "f",
        "f",
        "_make_shape",
        "f",
        "f",
        "f",
        "_gcd_cond_fn",
        "_gcd_body_fn",
        "f",
        "f",
        "f",
        "f",
        "f",
        "f",
        "f",
        "f",
        "f",
        "nan_reduction",
        "f",
        "f",
        "_f",
        "f",
        "_argsort",
        "maybe_move_axis_to_last",
        "maybe_pad_0",
        "move_last_to_axis",
        "rank_equal_case",
        "move_axis_to_last",
        "pad_0",
        "rank_not_equal_case"
    ],
    "np_array_ops": [
        "empty",
        "empty_like",
        "zeros",
        "zeros_like",
        "ones",
        "ones_like",
        "eye",
        "identity",
        "full",
        "full_like",
        "_array_internal",
        "array",
        "asarray",
        "asanyarray",
        "ascontiguousarray",
        "arange",
        "diag",
        "diagonal",
        "diagflat",
        "_promote_dtype",
        "_promote_dtype_binary",
        "all",
        "any",
        "compress",
        "copy",
        "_maybe_promote_to_int",
        "cumprod",
        "cumsum",
        "imag",
        "_reduce",
        "size",
        "sum",
        "prod",
        "mean",
        "amax",
        "amin",
        "var",
        "std",
        "ravel",
        "real",
        "repeat",
        "around",
        "reshape",
        "_reshape_method_wrapper",
        "expand_dims",
        "squeeze",
        "transpose",
        "swapaxes",
        "moveaxis",
        "pad",
        "take",
        "where",
        "select",
        "shape",
        "ndim",
        "isscalar",
        "_boundaries_to_sizes",
        "split",
        "_split_on_axis",
        "broadcast_to",
        "stack",
        "hstack",
        "vstack",
        "dstack",
        "_pad_left_to",
        "_atleast_nd",
        "atleast_1d",
        "atleast_2d",
        "atleast_3d",
        "nonzero",
        "diag_indices",
        "tri",
        "tril",
        "triu",
        "flip",
        "flipud",
        "fliplr",
        "roll",
        "rot90",
        "vander",
        "ix_",
        "broadcast_arrays",
        "sign",
        "take_along_axis",
        "_as_index",
        "_UpdateMethod",
        "_slice_helper",
        "_as_spec_tuple",
        "_getitem",
        "_with_index_update_helper",
        "true_fn",
        "_diag",
        "_diag_part",
        "_zeros",
        "_fast_asarray",
        "adjust_axes",
        "_correct_axis",
        "f",
        "f",
        "new_shape",
        "maybe_data",
        "reduce_fn",
        "f",
        "_remove_indices",
        "_tensordot",
        "range_"
    ],
    "np_random": [
        "seed",
        "randn",
        "uniform",
        "random",
        "rand",
        "randint"
    ],
    "ragged_functional_ops": [
        "map_flat_values",
        "_replace_ragged_with_flat_values",
        "recurse"
    ],
    "ragged_tensor": [
        "RaggedTensor",
        "is_ragged",
        "match_row_splits_dtypes",
        "RaggedTensorSpec",
        "convert_to_tensor_or_ragged_tensor",
        "_convert_to_ragged_tensor_values",
        "_ragged_tensor_value_from_components",
        "_ragged_tensor_session_fetch",
        "_ragged_tensor_session_feed",
        "_ragged_tensor_session_feed_for_partial_run",
        "RaggedTensorType",
        "_assert_sparse_indices_are_ragged_right",
        "_ragged_tensor_to_sparse_gradient",
        "_assert_monotonic_increasing",
        "_assert_zero",
        "_nrows",
        "merge_dims",
        "_prod",
        "_get_row_partition_type_tensor_pairs_tail",
        "_get_row_partition_type_tensor_pairs",
        "_shape_as_tensor",
        "_nvals_uniform_row_length",
        "_get_optional_partition_dtype",
        "_add_supported_value_type",
        "_is_supported_ragged_values_type",
        "_assert_is_supported_ragged_values_type",
        "_from_row_partition",
        "from_value_rowids",
        "from_row_splits",
        "from_row_lengths",
        "from_row_starts",
        "from_row_limits",
        "from_uniform_row_length",
        "from_nested_value_rowids",
        "from_nested_row_splits",
        "from_nested_row_lengths",
        "_convert_values_and_partition",
        "dtype",
        "shape",
        "get_shape",
        "ragged_rank",
        "values",
        "_nested_row_partitions",
        "row_splits",
        "uniform_row_length",
        "flat_values",
        "nested_row_splits",
        "value_rowids",
        "nested_value_rowids",
        "nrows",
        "row_starts",
        "row_limits",
        "row_lengths",
        "nested_row_lengths",
        "bounding_shape",
        "with_values",
        "with_flat_values",
        "with_row_splits_dtype",
        "merge_dims",
        "_set_shape",
        "from_tensor",
        "to_tensor",
        "from_sparse",
        "to_sparse",
        "_from_variant",
        "_to_variant",
        "__repr__",
        "numpy",
        "to_list",
        "_eager_value",
        "_is_eager",
        "_overloaded_operator",
        "_as_graph_element",
        "_type_spec",
        "_shape_invariant_to_type_spec",
        "consumers",
        "dtype",
        "shape",
        "ragged_rank",
        "row_splits_dtype",
        "flat_values_spec",
        "value_type",
        "is_compatible_with",
        "_serialize",
        "_component_specs",
        "_to_components",
        "_from_components",
        "_flat_tensor_specs",
        "_to_tensor_list",
        "_to_batched_tensor_list",
        "_from_compatible_tensor_list",
        "_batch",
        "_unbatch",
        "_to_legacy_output_types",
        "_to_legacy_output_shapes",
        "_to_legacy_output_classes",
        "from_value",
        "__repr__",
        "stub"
    ],
    "ragged_concat_ops": [
        "concat",
        "stack",
        "_ragged_stack_concat_helper",
        "_ragged_stack_concat_axis_0",
        "_ragged_stack_concat_axis_1",
        "_copy_row_shape",
        "_increase_ragged_rank_to",
        "_concat_ragged_splits"
    ],
    "ragged_operators": [
        "_right",
        "ragged_hash",
        "_dummy_bool"
    ],
    "row_partition": [
        "RowPartition",
        "RowPartitionSpec",
        "_assert_monotonic_increasing",
        "_assert_zero",
        "_cast_if_not_none",
        "_merge_tensors",
        "from_value_rowids",
        "from_row_splits",
        "from_row_lengths",
        "from_row_starts",
        "from_row_limits",
        "from_uniform_row_length",
        "_convert_row_partition",
        "with_dependencies",
        "dtype",
        "row_splits",
        "value_rowids",
        "nvals",
        "nrows",
        "uniform_row_length",
        "row_starts",
        "row_limits",
        "row_lengths",
        "static_nrows",
        "static_nvals",
        "static_uniform_row_length",
        "with_row_splits_dtype",
        "__repr__",
        "has_precomputed_row_splits",
        "has_precomputed_row_lengths",
        "has_precomputed_value_rowids",
        "has_precomputed_nrows",
        "with_precomputed_row_splits",
        "with_precomputed_row_lengths",
        "with_precomputed_value_rowids",
        "with_precomputed_nrows",
        "merge_precomputed_encodings",
        "_type_spec",
        "is_compatible_with",
        "_serialize",
        "_deserialize",
        "nrows",
        "nvals",
        "uniform_row_length",
        "dtype",
        "_component_specs",
        "_to_components",
        "_from_components",
        "from_value",
        "__repr__",
        "_dimensions_compatible"
    ],
    "ragged_string_ops": [
        "string_bytes_split",
        "unicode_encode",
        "unicode_decode",
        "unicode_decode_with_offsets",
        "unicode_split",
        "unicode_split_with_offsets",
        "_unicode_decode",
        "string_split_v2",
        "string_split",
        "strings_split_v1",
        "reduce_join",
        "ngrams",
        "string_format",
        "ragged_tensor_to_string",
        "_ragged_tensor_to_string",
        "_nrows"
    ],
    "ragged_getitem": [
        "ragged_tensor_getitem",
        "_ragged_getitem",
        "_slice_ragged_row_dimension",
        "_ragged_getitem_inner_dimensions",
        "_slice_length",
        "_expand_ellipsis",
        "_tensors_in_key_list",
        "_build_ragged_tensor_from_value_ranges",
        "_if_ge_zero"
    ],
    "ragged_array_ops": [
        "boolean_mask",
        "tile",
        "_tile_ragged_values",
        "_tile_ragged_splits",
        "expand_dims",
        "size",
        "rank",
        "ragged_one_hot",
        "stack_dynamic_partitions",
        "reverse",
        "cross",
        "cross_hashed",
        "_cross_internal"
    ],
    "ragged_factory_ops": [
        "constant",
        "constant_value",
        "_constant_value",
        "_find_scalar_and_max_depth",
        "_default_inner_shape_for_pylist",
        "placeholder",
        "ragged_factory",
        "_ragged_factory",
        "_inner_factory",
        "get_inner_shape",
        "check_inner_shape"
    ],
    "ragged_map_ops": [
        "map_fn",
        "_ragged_type_to_spec"
    ],
    "segment_id_ops": [
        "row_splits_to_segment_ids",
        "segment_ids_to_row_splits"
    ],
    "ragged_tensor_value": [
        "RaggedTensorValue",
        "flat_values",
        "nested_row_splits",
        "ragged_rank",
        "shape",
        "__str__",
        "__repr__",
        "to_list"
    ],
    "ragged_squeeze_op": [
        "squeeze"
    ],
    "ragged_batch_gather_ops": [
        "batch_gather"
    ],
    "ragged_config": [
        "auto_cast_partition_dtype"
    ],
    "ragged_dispatch": [
        "_get_arg_infos",
        "_is_convertible_to_tensor",
        "UnaryRaggedElementwiseDispatcher",
        "BinaryRaggedElementwiseDispatcher",
        "RaggedDispatcher",
        "_ragged_gather_v1",
        "_ragged_gather_nd_v1",
        "_ragged_expand_dims_v1",
        "_ragged_size_v1",
        "_ragged_squeeze_v1",
        "_ragged_dynamic_partition",
        "_ragged_nn_dropout_v1",
        "_ragged_nn_dropout_v2",
        "register_dispatchers",
        "_ragged_op_signature",
        "_op_is_in_tf_version",
        "ragged_op_list",
        "handle",
        "handle",
        "handle",
        "is_supported"
    ],
    "ragged_gather_ops": [
        "gather",
        "_gather",
        "_batch_gather",
        "_axis_gather",
        "_flatten_dims_0_and_1",
        "_row_starts",
        "_increase_rank_to",
        "gather_nd",
        "_ragged_gather_grad"
    ],
    "ragged_tensor_shape": [
        "RaggedTensorDynamicShape",
        "broadcast_dynamic_shape",
        "broadcast_to",
        "_broadcast_to_uniform_shape",
        "_broadcast_to_ragged_shape",
        "_ragged_tile_axis",
        "__repr__",
        "from_dim_sizes",
        "from_tensor",
        "dimension_size",
        "is_ragged",
        "rank",
        "partitioned_dim_sizes",
        "inner_dim_sizes",
        "num_partitioned_dimensions",
        "num_inner_dimensions",
        "dim_size_dtype",
        "broadcast_to_rank",
        "broadcast_dimension",
        "num_slices_in_dimension",
        "_broadcast_uniform_partitioned_dimension",
        "_broadcast_inner_dimension_to_uniform",
        "_broadcast_inner_dimension_to_ragged",
        "with_dim_size_dtype"
    ],
    "ragged_math_ops": [
        "range",
        "_infer_matching_dtype",
        "_ragged_segment_aggregate",
        "segment_sum",
        "segment_prod",
        "segment_min",
        "segment_max",
        "segment_mean",
        "segment_sqrt_n",
        "_set_ragged_segment_docstring",
        "ragged_reduce_aggregate",
        "reduce_sum",
        "reduce_prod",
        "reduce_min",
        "reduce_max",
        "reduce_mean",
        "_cast",
        "reduce_all",
        "reduce_any",
        "_set_ragged_reduce_docstring"
    ],
    "ragged_where_op": [
        "where_v2",
        "where",
        "_elementwise_where",
        "_elementwise_where_v2",
        "_coordinate_where",
        "_nrows"
    ],
    "ragged_conversion_ops": [
        "from_tensor",
        "to_tensor",
        "ragged_to_dense",
        "_ragged_tensor_to_tensor_grad",
        "_rank_ignoring_leading_dims_with_size_1",
        "to_sparse",
        "from_sparse",
        "_ragged_tensor_from_variant_grad",
        "_ragged_tensor_to_variant_grad"
    ],
    "ragged_util": [
        "assert_splits_match",
        "lengths_to_splits",
        "repeat_ranges"
    ],
    "ragged_batch_gather_with_default_op": [
        "batch_gather_with_default",
        "_get_pad_shape"
    ],
    "gen_sparse_csr_matrix_ops": [
        "csr_sparse_matrix_components",
        "csr_sparse_matrix_components_eager_fallback",
        "csr_sparse_matrix_to_dense",
        "csr_sparse_matrix_to_dense_eager_fallback",
        "csr_sparse_matrix_to_sparse_tensor",
        "csr_sparse_matrix_to_sparse_tensor_eager_fallback",
        "dense_to_csr_sparse_matrix",
        "dense_to_csr_sparse_matrix_eager_fallback",
        "sparse_matrix_add",
        "sparse_matrix_add_eager_fallback",
        "sparse_matrix_mat_mul",
        "sparse_matrix_mat_mul_eager_fallback",
        "sparse_matrix_mul",
        "sparse_matrix_mul_eager_fallback",
        "sparse_matrix_nnz",
        "sparse_matrix_nnz_eager_fallback",
        "sparse_matrix_ordering_amd",
        "sparse_matrix_ordering_amd_eager_fallback",
        "sparse_matrix_softmax",
        "sparse_matrix_softmax_eager_fallback",
        "sparse_matrix_softmax_grad",
        "sparse_matrix_softmax_grad_eager_fallback",
        "sparse_matrix_sparse_cholesky",
        "sparse_matrix_sparse_cholesky_eager_fallback",
        "sparse_matrix_sparse_mat_mul",
        "sparse_matrix_sparse_mat_mul_eager_fallback",
        "sparse_matrix_transpose",
        "sparse_matrix_transpose_eager_fallback",
        "sparse_matrix_zeros",
        "sparse_matrix_zeros_eager_fallback",
        "sparse_tensor_to_csr_sparse_matrix",
        "sparse_tensor_to_csr_sparse_matrix_eager_fallback"
    ],
    "sparse_csr_matrix_ops": [
        "DenseShapeAndType",
        "_get_handle_data",
        "_create_handle_data_proto",
        "_make_handle_data",
        "get_shape_and_type",
        "dense_shape_and_type",
        "matmul_shape_inference",
        "matmul",
        "SparseMatrix",
        "CSRSparseMatrix",
        "_matrix",
        "_from_matrix",
        "to_dense",
        "to_sparse_tensor",
        "graph",
        "shape",
        "dtype",
        "eager_handle_data",
        "conj",
        "hermitian_transpose",
        "nnz",
        "sorted_indices",
        "transpose",
        "_matrix",
        "_from_matrix",
        "to_dense",
        "to_sparse_tensor"
    ],
    "sparse_csr_matrix_grad": [
        "_DenseToCSRSparseMatrixGrad",
        "_CSRSparseMatrixToDenseGrad",
        "_SparseMatrixAddGrad",
        "_SparseMatrixTransposeGrad",
        "_SparseMatrixSoftmaxGrad",
        "_SparseMatrixMatMulGrad",
        "_SparseMatrixSparseMatMulGrad",
        "_SparseMatrixMulGrad"
    ],
    "conjugate_gradient": [
        "conjugate_gradient",
        "stopping_criterion",
        "dot",
        "cg_step"
    ],
    "loss_scaling_gradient_tape": [
        "_convert_to_per_replicas",
        "LossScaleGradientTape",
        "_compute_gradients_until_finite",
        "gradient",
        "jacobian",
        "batch_jacobian",
        "cond",
        "body",
        "replica_fn"
    ],
    "mixed_precision": [
        "_register_wrapper_optimizer_cls",
        "_wrap_optimizer",
        "enable_mixed_precision_graph_rewrite",
        "enable_mixed_precision_graph_rewrite_v1",
        "_enable_mixed_precision_graph_rewrite_base",
        "disable_mixed_precision_graph_rewrite",
        "disable_mixed_precision_graph_rewrite_v1"
    ],
    "checkpoint_options": [
        "CheckpointOptions"
    ],
    "functional_saver": [
        "_SingleDeviceSaver",
        "sharded_filename",
        "MultiDeviceSaver",
        "save",
        "restore",
        "to_proto",
        "_traced_save",
        "_traced_restore",
        "save",
        "restore",
        "save_fn",
        "restore_fn",
        "tf_function_save",
        "tf_function_restore"
    ],
    "saveable_object": [
        "SaveSpec",
        "SaveableObject",
        "tensor",
        "optional_restore",
        "device",
        "restore"
    ],
    "saveable_object_util": [
        "set_cpu0",
        "ReferenceVariableSaveable",
        "ResourceVariableSaveable",
        "_tensor_comes_from_variable",
        "saveable_objects_for_op",
        "op_list_to_dict",
        "_add_saveable",
        "validate_and_slice_inputs",
        "trace_save_restore_functions",
        "_trace_save_and_restore_function",
        "RestoredSaveableObject",
        "restored_saved_object_factory",
        "create_saveable_object",
        "is_factory_for_restored_saveable_object",
        "restore",
        "restore",
        "save_fn",
        "restore_fn",
        "restore",
        "save_fn",
        "restore_fn",
        "_read_variable_closure",
        "f"
    ],
    "saveable_hook": [
        "SaveableHook",
        "device",
        "before_save",
        "after_restore"
    ],
    "graph_view": [
        "_escape_local_name",
        "_object_prefix_from_path",
        "_slot_variable_naming_for_optimizer",
        "_serialize_slot_variables",
        "ObjectGraphView",
        "_name_slot_variable",
        "list_dependencies",
        "saveables_cache",
        "attached_dependencies",
        "root",
        "_breadth_first_traversal",
        "_add_attributes_to_object_graph",
        "_fill_object_graph_proto",
        "_serialize_gathered_objects",
        "serialize_object_graph",
        "frozen_saveable_objects",
        "objects_ids_and_slot_variables",
        "list_objects"
    ],
    "data_structures": [
        "new_list",
        "tf_tensor_array_new",
        "tf_tensor_list_new",
        "_py_list_new",
        "list_append",
        "_tf_tensor_list_append",
        "_tf_tensorarray_append",
        "_py_list_append",
        "ListPopOpts",
        "list_pop",
        "_tf_tensor_list_pop",
        "_py_list_pop",
        "ListStackOpts",
        "list_stack",
        "_tf_tensorarray_stack",
        "_tf_tensor_list_stack",
        "_py_list_stack",
        "empty_list_of_elements_like_x"
    ],
    "tracking": [
        "NotTrackable",
        "AutoTrackable",
        "delete_tracking",
        "ResourceTracker",
        "resource_tracker_scope",
        "CapturableResourceDeleter",
        "CapturableResource",
        "TrackableResource",
        "Asset",
        "__setattr__",
        "__delattr__",
        "_no_dependency",
        "_list_functions_for_serialization",
        "resources",
        "add_resource",
        "destroy_resource",
        "__del__",
        "_create_resource",
        "_initialize",
        "resource_handle",
        "_map_resources",
        "_list_functions_for_serialization",
        "asset_path",
        "_creator",
        "_initializer",
        "_destroyer"
    ],
    "python_state": [
        "PythonState",
        "serialize",
        "deserialize",
        "_gather_saveables_for_checkpoint"
    ],
    "memory_test_util": [
        "_instance_count_by_class",
        "assert_no_leak",
        "memory_profiler_is_available"
    ],
    "create_python_api": [
        "SymbolExposedTwiceError",
        "get_canonical_import",
        "_ModuleInitCodeBuilder",
        "add_nested_compat_imports",
        "_get_name_and_module",
        "_join_modules",
        "add_imports_for_symbol",
        "get_api_init_text",
        "get_module",
        "get_module_docstring",
        "create_api_files",
        "main",
        "_check_already_imported",
        "add_import",
        "_import_submodules",
        "build",
        "format_import",
        "get_destination_modules",
        "copy_imports",
        "in_packages"
    ],
    "doc_srcs": [
        "DocSource",
        "get_doc_sources"
    ],
    "event_file_writer_v2": [
        "EventFileWriterV2",
        "get_logdir",
        "reopen",
        "add_event",
        "flush",
        "close"
    ],
    "writer": [
        "SummaryToEventTransformer",
        "FileWriter",
        "add_summary",
        "add_session_log",
        "_add_graph_def",
        "add_graph",
        "_write_plugin_assets",
        "add_meta_graph",
        "add_run_metadata",
        "_add_event",
        "__enter__",
        "__exit__",
        "get_logdir",
        "_warn_if_event_writer_is_closed",
        "_add_event",
        "add_event",
        "flush",
        "close",
        "reopen"
    ],
    "writer_cache": [
        "FileWriterCache",
        "clear",
        "get"
    ],
    "event_file_writer": [
        "EventFileWriter",
        "_EventLoggerThread",
        "CloseableQueue",
        "QueueClosedError",
        "_initialize",
        "get_logdir",
        "reopen",
        "add_event",
        "_try_put",
        "flush",
        "close",
        "_internal_close",
        "run",
        "get",
        "put",
        "close"
    ],
    "conversion": [
        "_is_of_known_loaded_module",
        "_is_known_loaded_type",
        "is_unsupported",
        "is_allowlisted",
        "is_in_allowlist_cache",
        "cache_allowlisted"
    ],
    "api": [
        "is_autograph_strict_conversion_mode",
        "AutoGraphError",
        "ConversionError",
        "StagingError",
        "_ErrorMetadata",
        "_attach_error_metadata",
        "StackTraceMapper",
        "PyToTF",
        "_convert_actual",
        "autograph_artifact",
        "is_autograph_artifact",
        "converted_call",
        "_call_unconverted",
        "_fall_back_unconverted",
        "tf_convert",
        "call_with_unspecified_conversion_status",
        "_log_callargs",
        "do_not_convert",
        "convert",
        "to_graph",
        "to_graph_v1",
        "to_code_v1",
        "to_code",
        "create_exception",
        "get_effective_source_map",
        "get_transformed_name",
        "get_extra_locals",
        "get_caching_key",
        "initial_analysis",
        "transform_ast",
        "wrapper",
        "wrapper",
        "decorator",
        "wrapper"
    ],
    "config_lib": [
        "Rule",
        "Action",
        "DoNotConvert",
        "Convert",
        "matches",
        "__str__",
        "get_action",
        "__str__",
        "get_action"
    ],
    "ag_ctx": [
        "_control_ctx",
        "control_status_ctx",
        "Status",
        "ControlStatusCtx",
        "NullCtx",
        "_default_control_status_ctx",
        "__enter__",
        "__repr__",
        "__exit__",
        "__enter__",
        "__exit__"
    ],
    "converter_testing": [
        "allowlist",
        "is_inside_generated_code",
        "TestingTranspiler",
        "TestCase",
        "get_extra_locals",
        "transform_ast",
        "setUp",
        "tearDown",
        "assertPrints",
        "transform"
    ],
    "converter": [
        "Feature",
        "ConversionOptions",
        "ProgramContext",
        "Base",
        "all",
        "all_but",
        "as_tuple",
        "__hash__",
        "__eq__",
        "__str__",
        "uses",
        "call_options",
        "to_ast",
        "get_definition_directive",
        "visit",
        "list_of_features"
    ],
    "unsupported_features_checker": [
        "UnsupportedFeaturesChecker",
        "verify",
        "visit_Attribute",
        "visit_For",
        "visit_While",
        "visit_Yield",
        "visit_YieldFrom"
    ],
    "function_wrappers": [
        "FunctionScope",
        "with_function_scope",
        "_sanitize",
        "__enter__",
        "__exit__",
        "ret",
        "_mark_return_if_tensor"
    ],
    "misc": [
        "alias_tensors",
        "get_range_len",
        "alias_if_tensor"
    ],
    "context_managers": [
        "control_dependency_on_returns",
        "control_dependency_handle"
    ],
    "tensor_list": [
        "dynamic_list_append",
        "TensorList",
        "append",
        "pop",
        "clear",
        "count",
        "__getitem__",
        "__setitem__"
    ],
    "py_func": [
        "MatchDType",
        "wrap_py_func",
        "match_arg_dtype",
        "f_wrapper"
    ],
    "compat_util": [
        "BasicRef",
        "deprecated_py2_support"
    ],
    "tensors": [
        "is_dense_tensor",
        "is_tensor_array",
        "is_tensor_list",
        "is_range_tensor"
    ],
    "ag_logging": [
        "set_verbosity",
        "trace",
        "get_verbosity",
        "has_verbosity",
        "_output_to_stdout",
        "error",
        "log",
        "warn"
    ],
    "conditional_expressions": [
        "ConditionalExpressionTransformer",
        "transform",
        "visit_IfExp"
    ],
    "py_builtins": [
        "overload_of",
        "_find_originating_frame",
        "locals_in_original_context",
        "globals_in_original_context",
        "eval_in_original_context",
        "super_in_original_context",
        "abs_",
        "_tf_abs",
        "_tf_dataset_abs",
        "_py_abs",
        "float_",
        "_tf_float",
        "_py_float",
        "int_",
        "_tf_int",
        "_py_int",
        "len_",
        "_tf_tensor_array_len",
        "_tf_tensor_list_len",
        "_tf_tensor_len",
        "_tf_dataset_len",
        "_py_len",
        "print_",
        "_py_print",
        "_tf_py_func_print",
        "range_",
        "_tf_range",
        "_py_range",
        "enumerate_",
        "_tf_dataset_enumerate",
        "_py_enumerate",
        "zip_",
        "_tf_dataset_zip",
        "_py_zip",
        "map_",
        "_tf_dataset_map",
        "_py_map",
        "next_",
        "_verify_spec_compatible",
        "_verify_structure_compatible",
        "next_tf_iterator",
        "next_py",
        "filter_",
        "_tf_dataset_filter",
        "_py_filter",
        "any_",
        "_tf_dataset_any",
        "_py_any",
        "all_",
        "_tf_dataset_all",
        "_py_all",
        "sorted_",
        "_tf_sorted",
        "_py_sorted",
        "raise_zero_rank_error",
        "print_wrapper"
    ],
    "control_flow": [
        "_Function",
        "ControlFlowTransformer",
        "AnnotatedDef",
        "transform",
        "visit_Lambda",
        "visit_FunctionDef",
        "_create_nonlocal_declarations",
        "_create_state_functions",
        "_create_loop_options",
        "_create_undefined_assigns",
        "_get_block_basic_vars",
        "_get_block_composite_vars",
        "_get_block_vars",
        "visit_If",
        "visit_While",
        "visit_For"
    ],
    "control_flow_deprecated_py2": [
        "ControlFlowTransformer",
        "AnnotatedDef",
        "transform",
        "_create_cond_branch",
        "_create_cond_expr",
        "_fmt_symbols",
        "_determine_aliased_symbols",
        "_create_state_functions",
        "_create_loop_options",
        "_create_undefined_assigns",
        "visit_If",
        "_get_basic_loop_vars",
        "_get_composite_loop_vars",
        "_get_loop_vars",
        "_loop_var_constructs",
        "visit_While",
        "visit_For"
    ],
    "logical": [
        "not_",
        "_tf_not",
        "_py_not",
        "and_",
        "_tf_lazy_and",
        "_py_lazy_and",
        "or_",
        "_tf_lazy_or",
        "_py_lazy_or",
        "eq",
        "_tf_equal",
        "_py_equal",
        "not_eq"
    ],
    "slices": [
        "SliceTransformer",
        "transform",
        "_process_single_assignment",
        "visit_Assign",
        "visit_Subscript"
    ],
    "exceptions": [
        "assert_stmt",
        "_tf_assert_stmt",
        "_py_assert_stmt"
    ],
    "logical_expressions": [
        "LogicalExpressionTransformer",
        "transform",
        "_overload_of",
        "_as_lambda",
        "_as_binary_function",
        "_as_binary_operation",
        "_as_unary_function",
        "visit_Compare",
        "visit_UnaryOp",
        "visit_BoolOp"
    ],
    "asserts": [
        "AssertTransformer",
        "transform",
        "visit_Assert"
    ],
    "directives": [
        "set_element_type",
        "set_loop_options"
    ],
    "lists": [
        "_Statement",
        "ListTransformer",
        "transform",
        "visit_List",
        "_replace_append_call",
        "_replace_pop_call",
        "_replace_stack_call",
        "visit_Call",
        "_generate_pop_operation",
        "_postprocess_statement",
        "_visit_and_process_block",
        "visit_FunctionDef",
        "visit_For",
        "visit_While",
        "visit_If",
        "visit_With"
    ],
    "call_trees": [
        "_Function",
        "_ArgTemplateBuilder",
        "CallTreeTransformer",
        "transform",
        "_consume_args",
        "add_arg",
        "add_stararg",
        "finalize",
        "to_ast",
        "visit_Lambda",
        "visit_FunctionDef",
        "visit_With",
        "_args_to_tuple",
        "_kwargs_to_dict",
        "visit_Call"
    ],
    "functions": [
        "_Function",
        "FunctionTransformer",
        "transform",
        "_function_scope_options",
        "visit_Lambda",
        "visit_FunctionDef"
    ],
    "list_comprehensions": [
        "ListCompTransformer",
        "transform",
        "visit_Assign"
    ],
    "continue_statements": [
        "_Continue",
        "_Block",
        "ContinueCanonicalizationTransformer",
        "transform",
        "__repr__",
        "visit_Continue",
        "_postprocess_statement",
        "_visit_loop_body",
        "_visit_non_loop_body",
        "visit_While",
        "visit_For",
        "visit_If",
        "visit_With",
        "visit_Try",
        "visit_ExceptHandler"
    ],
    "break_statements": [
        "_Break",
        "BreakTransformer",
        "transform",
        "__repr__",
        "visit_Break",
        "_guard_if_present",
        "_process_body",
        "visit_While",
        "visit_For"
    ],
    "return_statements": [
        "_RewriteBlock",
        "ConditionalReturnRewriter",
        "_Block",
        "_Function",
        "ReturnStatementsTransformer",
        "transform",
        "visit_Return",
        "_postprocess_statement",
        "_visit_statement_block",
        "visit_While",
        "visit_For",
        "visit_With",
        "visit_Try",
        "visit_ExceptHandler",
        "visit_If",
        "visit_FunctionDef",
        "__repr__",
        "__repr__",
        "visit_Return",
        "_postprocess_statement",
        "_visit_statement_block",
        "visit_While",
        "visit_For",
        "visit_With",
        "visit_Try",
        "visit_ExceptHandler",
        "visit_If",
        "visit_FunctionDef"
    ],
    "anno": [
        "NoValue",
        "Basic",
        "Static",
        "keys",
        "getanno",
        "hasanno",
        "setanno",
        "delanno",
        "copyanno",
        "dup",
        "of",
        "add_to",
        "exists",
        "__repr__"
    ],
    "transformer": [
        "AnalysisLevel",
        "Context",
        "EntityInfo",
        "_StateStack",
        "_State",
        "NodeStateTracker",
        "Base",
        "CodeGenerator",
        "__enter__",
        "__exit__",
        "enter",
        "exit",
        "stack",
        "level",
        "value",
        "__iter__",
        "__getattr__",
        "__setattr__",
        "__getitem__",
        "debug_print",
        "debug_print_src",
        "visit_block",
        "create_assignment",
        "apply_to_single_assignments",
        "visit",
        "emit",
        "code_buffer",
        "visit"
    ],
    "inspect_utils": [
        "islambda",
        "isnamedtuple",
        "isbuiltin",
        "isconstructor",
        "_fix_linecache_record",
        "getimmediatesource",
        "getnamespace",
        "getqualifiedname",
        "_get_unbound_function",
        "getdefiningclass",
        "getmethodclass",
        "getfutureimports"
    ],
    "naming": [
        "Namer",
        "new_symbol"
    ],
    "parser": [
        "_unfold_continuations",
        "dedent_block",
        "parse_entity",
        "_without_context",
        "_arg_name",
        "_node_matches_argspec",
        "_parse_lambda",
        "parse",
        "parse_expression",
        "unparse"
    ],
    "error_utils": [
        "FrameInfo",
        "_stack_trace_inside_mapped_code",
        "MultilineMessageKeyError",
        "ErrorMetadataBase",
        "__str__",
        "get_message",
        "create_exception",
        "to_exception"
    ],
    "cfg": [
        "Node",
        "Graph",
        "_WalkMode",
        "GraphVisitor",
        "GraphBuilder",
        "AstToCfg",
        "build",
        "freeze",
        "__repr__",
        "__repr__",
        "as_dot",
        "init_state",
        "visit_node",
        "reset",
        "can_ignore",
        "_visit_internal",
        "visit_forward",
        "visit_reverse",
        "reset",
        "_connect_nodes",
        "_add_new_node",
        "begin_statement",
        "end_statement",
        "add_ordinary_node",
        "_add_jump_node",
        "_connect_jump_to_finally_sections",
        "add_exit_node",
        "add_continue_node",
        "connect_raise_node",
        "enter_section",
        "exit_section",
        "enter_loop_section",
        "exit_loop_section",
        "enter_cond_section",
        "new_cond_branch",
        "exit_cond_section",
        "enter_except_section",
        "enter_finally_section",
        "exit_finally_section",
        "build",
        "_enter_lexical_scope",
        "_exit_lexical_scope",
        "_get_enclosing_finally_scopes",
        "_get_enclosing_except_scopes",
        "_process_basic_statement",
        "_process_exit_statement",
        "_process_continue_statement",
        "visit_ClassDef",
        "_process_function_def",
        "visit_FunctionDef",
        "visit_Lambda",
        "visit_Return",
        "visit_Import",
        "visit_ImportFrom",
        "visit_Expr",
        "visit_Assign",
        "visit_AnnAssign",
        "visit_AugAssign",
        "visit_Pass",
        "visit_Global",
        "visit_Nonlocal",
        "visit_Print",
        "visit_Raise",
        "visit_Assert",
        "visit_Delete",
        "visit_If",
        "visit_While",
        "visit_For",
        "visit_Break",
        "visit_Continue",
        "visit_ExceptHandler",
        "visit_Try",
        "visit_With"
    ],
    "templates": [
        "ContextAdjuster",
        "ReplaceTransformer",
        "_convert_to_ast",
        "replace",
        "replace_as_expression",
        "visit",
        "_apply_override",
        "visit_Attribute",
        "visit_Tuple",
        "visit_List",
        "visit_Name",
        "visit_Call",
        "visit_Dict",
        "visit_Subscript",
        "visit_comprehension",
        "visit_Lambda",
        "_prepare_replacement",
        "visit_Expr",
        "visit_keyword",
        "visit_FunctionDef",
        "visit_Attribute",
        "visit_Name"
    ],
    "ast_util": [
        "CleanCopier",
        "copy_clean",
        "SymbolRenamer",
        "rename_symbols",
        "keywords_to_dict",
        "PatternMatcher",
        "matches",
        "apply_to_single_assignments",
        "parallel_walk",
        "copy",
        "_process_name_node",
        "_process_list_of_strings",
        "visit_Nonlocal",
        "visit_Global",
        "visit_Name",
        "visit_Attribute",
        "visit_FunctionDef",
        "compare_and_visit",
        "no_match",
        "is_wildcard",
        "generic_visit"
    ],
    "qual_names": [
        "CallerMustSetThis",
        "Symbol",
        "Literal",
        "QN",
        "QnResolver",
        "resolve",
        "from_str",
        "__str__",
        "__repr__",
        "is_symbol",
        "is_simple",
        "is_composite",
        "has_subscript",
        "has_attr",
        "parent",
        "owner_set",
        "support_set",
        "__hash__",
        "__eq__",
        "__str__",
        "__repr__",
        "ssf",
        "ast",
        "visit_Name",
        "visit_Attribute",
        "visit_Subscript"
    ],
    "transpiler": [
        "_wrap_into_factory",
        "_PythonFnFactory",
        "GenericTranspiler",
        "PyToPy",
        "create",
        "instantiate",
        "get_transformed_name",
        "transform_ast",
        "transform",
        "_erase_arg_defaults",
        "transform_module",
        "transform_function",
        "get_extra_locals",
        "get_caching_key",
        "_cached_factory",
        "transform_function"
    ],
    "origin_info": [
        "LineLocation",
        "Location",
        "OriginInfo",
        "create_source_map",
        "_Function",
        "OriginResolver",
        "resolve",
        "resolve_entity",
        "copy_origin",
        "line_loc",
        "as_frame",
        "__repr__",
        "_absolute_lineno",
        "_absolute_col_offset",
        "_attach_origin_info",
        "visit"
    ],
    "loader": [
        "_remove_file",
        "load_source",
        "load_ast"
    ],
    "cache": [
        "_TransformedFnCache",
        "CodeObjectCache",
        "UnboundInstanceCache",
        "_get_key",
        "has",
        "__getitem__",
        "__len__",
        "_get_key",
        "_get_key"
    ],
    "pretty_printer": [
        "PrettyPrinter",
        "fmt",
        "_color",
        "_type",
        "_field",
        "_value",
        "_warning",
        "_indent",
        "_print",
        "generic_visit"
    ],
    "errors": [
        "PyCTError",
        "UnsupportedLanguageElementError"
    ],
    "gast_util": [
        "_is_constant_gast_2",
        "_is_constant_gast_3",
        "is_literal",
        "_is_ellipsis_gast_2",
        "_is_ellipsis_gast_3"
    ],
    "special_functions": [
        "_validate_list_constructor",
        "match_staging_level",
        "tensor_list",
        "stack",
        "raise_error"
    ],
    "anf": [
        "DummyGensym",
        "ASTEdgePattern",
        "AnfTransformer",
        "_is_py2_name_constant",
        "_is_trivial",
        "transform",
        "new_name",
        "matches",
        "_consume_pending_statements",
        "_add_pending_statement",
        "_match",
        "_should_transform",
        "_do_transform_node",
        "_ensure_node_in_anf",
        "_ensure_fields_in_anf",
        "_visit_strict_statement",
        "_visit_trivial_only_statement",
        "_visit_strict_expression",
        "_visit_trivial_only_expression",
        "visit_Return",
        "visit_Delete",
        "visit_Assign",
        "visit_AugAssign",
        "visit_Print",
        "visit_For",
        "visit_AsyncFor",
        "visit_While",
        "visit_If",
        "visit_With",
        "visit_AsyncWith",
        "visit_Raise",
        "visit_Assert",
        "visit_Exec",
        "visit_Expr",
        "visit_BoolOp",
        "visit_BinOp",
        "visit_UnaryOp",
        "visit_Lambda",
        "visit_IfExp",
        "visit_Dict",
        "visit_Set",
        "visit_ListComp",
        "visit_SetComp",
        "visit_DictComp",
        "visit_GeneratorExp",
        "visit_Await",
        "visit_Yield",
        "visit_YieldFrom",
        "visit_Compare",
        "visit_Call",
        "visit_Repr",
        "visit_FormattedValue",
        "visit_JoinedStr",
        "visit_Attribute",
        "visit_Subscript",
        "visit_List",
        "visit_Tuple"
    ],
    "decorators": [
        "wrapping_decorator",
        "standalone_decorator",
        "functional_decorator",
        "wrapper",
        "standalone_wrapper",
        "decorator",
        "functional_wrapper"
    ],
    "basic_definitions": [
        "simple_function",
        "nested_functions",
        "function_with_print",
        "SimpleClass",
        "function_with_multiline_call",
        "basic_decorator",
        "decorated_function",
        "inner_fn",
        "simple_method",
        "method_with_print"
    ],
    "activity": [
        "Scope",
        "_Comprehension",
        "_FunctionOrClass",
        "ActivityAnalyzer",
        "resolve",
        "enclosing_scope",
        "referenced",
        "free_vars",
        "copy_from",
        "copy_of",
        "merge_from",
        "finalize",
        "__repr__",
        "mark_param",
        "_in_constructor",
        "_node_sets_self_attribute",
        "_track_symbol",
        "_enter_scope",
        "_exit_scope",
        "_exit_and_record_scope",
        "_process_statement",
        "_process_annotation",
        "visit_Import",
        "visit_ImportFrom",
        "visit_Global",
        "visit_Nonlocal",
        "visit_Expr",
        "visit_Raise",
        "visit_Return",
        "visit_Assign",
        "visit_AnnAssign",
        "visit_AugAssign",
        "visit_Delete",
        "visit_Name",
        "visit_alias",
        "visit_Attribute",
        "visit_Subscript",
        "visit_Print",
        "visit_Assert",
        "visit_Call",
        "_process_block_node",
        "_process_parallel_blocks",
        "_process_comprehension",
        "visit_comprehension",
        "visit_DictComp",
        "visit_ListComp",
        "visit_SetComp",
        "visit_GeneratorExp",
        "visit_ClassDef",
        "_visit_node_list",
        "_visit_arg_annotations",
        "_visit_arg_declarations",
        "visit_FunctionDef",
        "visit_Lambda",
        "visit_With",
        "visit_withitem",
        "visit_If",
        "visit_For",
        "visit_While",
        "visit_ExceptHandler"
    ],
    "reaching_definitions": [
        "Definition",
        "_NodeState",
        "Analyzer",
        "TreeAnnotator",
        "resolve",
        "__repr__",
        "__eq__",
        "__ne__",
        "__or__",
        "__sub__",
        "__repr__",
        "init_state",
        "visit_node",
        "visit_FunctionDef",
        "visit_Name",
        "_aggregate_predecessors_defined_in",
        "visit_If",
        "visit_For",
        "visit_While",
        "visit_Try",
        "visit_ExceptHandler",
        "visit"
    ],
    "reaching_fndefs": [
        "Definition",
        "_NodeState",
        "Analyzer",
        "TreeAnnotator",
        "resolve",
        "__eq__",
        "__ne__",
        "__or__",
        "__add__",
        "__repr__",
        "init_state",
        "visit_node",
        "_proces_function",
        "visit_FunctionDef",
        "visit_Lambda",
        "visit"
    ],
    "liveness": [
        "Analyzer",
        "TreeAnnotator",
        "resolve",
        "init_state",
        "visit_node",
        "visit",
        "_analyze_function",
        "visit_Lambda",
        "visit_FunctionDef",
        "_block_statement_live_out",
        "_block_statement_live_in",
        "visit_If",
        "visit_For",
        "visit_While",
        "visit_Try",
        "visit_ExceptHandler",
        "visit_With",
        "visit_Expr"
    ],
    "type_inference": [
        "Resolver",
        "_SymbolTable",
        "StmtInferrer",
        "Analyzer",
        "FunctionVisitor",
        "resolve",
        "res_name",
        "res_value",
        "res_arg",
        "res_call",
        "res_slice",
        "res_compare",
        "res_binop",
        "__eq__",
        "__ne__",
        "__or__",
        "__repr__",
        "visit",
        "_check_set",
        "visit_Constant",
        "visit_Tuple",
        "visit_List",
        "visit_Set",
        "visit_Name",
        "visit_Attribute",
        "visit_FunctionDef",
        "_resolve_typed_callable",
        "visit_Call",
        "visit_Expr",
        "visit_Index",
        "visit_Assign",
        "visit_Subscript",
        "visit_Compare",
        "visit_BinOp",
        "init_state",
        "_update_closure_types",
        "visit_node",
        "visit_FunctionDef"
    ],
    "annos": [
        "NoValue",
        "NodeAnno",
        "__repr__"
    ],
    "file_io": [
        "FileIO",
        "file_exists",
        "file_exists_v2",
        "delete_file",
        "delete_file_v2",
        "read_file_to_string",
        "write_string_to_file",
        "get_matching_files",
        "get_matching_files_v2",
        "create_dir",
        "create_dir_v2",
        "recursive_create_dir",
        "recursive_create_dir_v2",
        "copy",
        "copy_v2",
        "rename",
        "rename_v2",
        "atomic_write_string_to_file",
        "delete_recursively",
        "delete_recursively_v2",
        "is_directory",
        "is_directory_v2",
        "has_atomic_move",
        "list_directory",
        "list_directory_v2",
        "walk",
        "walk_v2",
        "stat",
        "stat_v2",
        "filecmp",
        "file_crc32",
        "name",
        "mode",
        "_preread_check",
        "_prewrite_check",
        "_prepare_value",
        "size",
        "write",
        "read",
        "seek",
        "readline",
        "readlines",
        "tell",
        "__enter__",
        "__exit__",
        "__iter__",
        "__next__",
        "next",
        "flush",
        "close",
        "seekable",
        "_make_full_path"
    ],
    "tf_record": [
        "TFRecordCompressionType",
        "TFRecordOptions",
        "tf_record_iterator",
        "tf_record_random_reader",
        "TFRecordWriter",
        "get_compression_type_string",
        "_as_record_writer_options",
        "write",
        "flush",
        "close"
    ]
}